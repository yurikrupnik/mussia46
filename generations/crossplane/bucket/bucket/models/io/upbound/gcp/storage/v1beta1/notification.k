"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema Notification:
    r"""
    Notification is the Schema for the Notifications API. Creates a new notification configuration on a specified bucket.

    Attributes
    ----------
    apiVersion : str, default is "storage.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Notification", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageGcpUpboundIoV1beta1NotificationSpec, default is Undefined, required
        spec
    status : StorageGcpUpboundIoV1beta1NotificationStatus, default is Undefined, optional
        status
    """
    apiVersion: "storage.gcp.upbound.io/v1beta1" = "storage.gcp.upbound.io/v1beta1"

    kind: "Notification" = "Notification"

    metadata?: v1.ObjectMeta
    spec: StorageGcpUpboundIoV1beta1NotificationSpec

    status?: StorageGcpUpboundIoV1beta1NotificationStatus

schema StorageGcpUpboundIoV1beta1NotificationSpec:
    r"""
    NotificationSpec defines the desired state of Notification

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageGcpUpboundIoV1beta1NotificationSpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageGcpUpboundIoV1beta1NotificationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageGcpUpboundIoV1beta1NotificationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: StorageGcpUpboundIoV1beta1NotificationSpecForProvider

    initProvider?: StorageGcpUpboundIoV1beta1NotificationSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRef
    publishConnectionDetailsTo?: StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: StorageGcpUpboundIoV1beta1NotificationSpecWriteConnectionSecretToRef

schema StorageGcpUpboundIoV1beta1NotificationSpecForProvider:
    r"""
    storage gcp upbound io v1beta1 notification spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    bucketRef : StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    customAttributes : {str:str}, default is Undefined, optional
        A set of key/value attribute pairs to attach to each Cloud PubSub message published for this notification subscription
    eventTypes : [str], default is Undefined, optional
        List of event type filters for this notification config. If not specified, Cloud Storage will send notifications for all event types. The valid types are: "OBJECT_FINALIZE", "OBJECT_METADATA_UPDATE", "OBJECT_DELETE", "OBJECT_ARCHIVE"
    objectNamePrefix : str, default is Undefined, optional
        Specifies a prefix path filter for this notification config. Cloud Storage will only send notifications for objects in this bucket whose names begin with the specified prefix.
    payloadFormat : str, default is Undefined, optional
        The desired content of the Payload. One of "JSON_API_V1" or "NONE".
    topic : str, default is Undefined, optional
        The Cloud PubSub topic to which this subscription publishes. Expects either the
        topic name, assumed to belong to the default GCP provider project, or the project-level name,
        i.e. projects/my-gcp-project/topics/my-topic or my-topic. If the project is not set in the provider,
        you will need to use the project-level name.
    topicRef : StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRef, default is Undefined, optional
        topic ref
    topicSelector : StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelector, default is Undefined, optional
        topic selector
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelector
    customAttributes?: {str:str}
    eventTypes?: [str]
    objectNamePrefix?: str
    payloadFormat?: str
    topic?: str
    topicRef?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRef
    topicSelector?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelector

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRef:
    r"""
    Reference to a Topic in pubsub to populate topic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelector:
    r"""
    Selector for a Topic in pubsub to populate topic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelectorPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecForProviderTopicSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    bucketRef : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    customAttributes : {str:str}, default is Undefined, optional
        A set of key/value attribute pairs to attach to each Cloud PubSub message published for this notification subscription
    eventTypes : [str], default is Undefined, optional
        List of event type filters for this notification config. If not specified, Cloud Storage will send notifications for all event types. The valid types are: "OBJECT_FINALIZE", "OBJECT_METADATA_UPDATE", "OBJECT_DELETE", "OBJECT_ARCHIVE"
    objectNamePrefix : str, default is Undefined, optional
        Specifies a prefix path filter for this notification config. Cloud Storage will only send notifications for objects in this bucket whose names begin with the specified prefix.
    payloadFormat : str, default is Undefined, optional
        The desired content of the Payload. One of "JSON_API_V1" or "NONE".
    topic : str, default is Undefined, optional
        The Cloud PubSub topic to which this subscription publishes. Expects either the
        topic name, assumed to belong to the default GCP provider project, or the project-level name,
        i.e. projects/my-gcp-project/topics/my-topic or my-topic. If the project is not set in the provider,
        you will need to use the project-level name.
    topicRef : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRef, default is Undefined, optional
        topic ref
    topicSelector : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelector, default is Undefined, optional
        topic selector
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelector
    customAttributes?: {str:str}
    eventTypes?: [str]
    objectNamePrefix?: str
    payloadFormat?: str
    topic?: str
    topicRef?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRef
    topicSelector?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelector

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRef:
    r"""
    Reference to a Topic in pubsub to populate topic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelector:
    r"""
    Selector for a Topic in pubsub to populate topic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelectorPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecInitProviderTopicSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRef
    metadata?: StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToMetadata
    name: str

schema StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRefPolicy

schema StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1NotificationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema StorageGcpUpboundIoV1beta1NotificationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta1NotificationStatus:
    r"""
    NotificationStatus defines the observed state of Notification.

    Attributes
    ----------
    atProvider : StorageGcpUpboundIoV1beta1NotificationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageGcpUpboundIoV1beta1NotificationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """
    atProvider?: StorageGcpUpboundIoV1beta1NotificationStatusAtProvider
    conditions?: [StorageGcpUpboundIoV1beta1NotificationStatusConditionsItems0]
    observedGeneration?: int

schema StorageGcpUpboundIoV1beta1NotificationStatusAtProvider:
    r"""
    storage gcp upbound io v1beta1 notification status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    customAttributes : {str:str}, default is Undefined, optional
        A set of key/value attribute pairs to attach to each Cloud PubSub message published for this notification subscription
    eventTypes : [str], default is Undefined, optional
        List of event type filters for this notification config. If not specified, Cloud Storage will send notifications for all event types. The valid types are: "OBJECT_FINALIZE", "OBJECT_METADATA_UPDATE", "OBJECT_DELETE", "OBJECT_ARCHIVE"
    id : str, default is Undefined, optional
        id
    notificationId : str, default is Undefined, optional
        The ID of the created notification.
    objectNamePrefix : str, default is Undefined, optional
        Specifies a prefix path filter for this notification config. Cloud Storage will only send notifications for objects in this bucket whose names begin with the specified prefix.
    payloadFormat : str, default is Undefined, optional
        The desired content of the Payload. One of "JSON_API_V1" or "NONE".
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    topic : str, default is Undefined, optional
        The Cloud PubSub topic to which this subscription publishes. Expects either the
        topic name, assumed to belong to the default GCP provider project, or the project-level name,
        i.e. projects/my-gcp-project/topics/my-topic or my-topic. If the project is not set in the provider,
        you will need to use the project-level name.
    """
    bucket?: str
    customAttributes?: {str:str}
    eventTypes?: [str]
    id?: str
    notificationId?: str
    objectNamePrefix?: str
    payloadFormat?: str
    selfLink?: str
    topic?: str

schema StorageGcpUpboundIoV1beta1NotificationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

