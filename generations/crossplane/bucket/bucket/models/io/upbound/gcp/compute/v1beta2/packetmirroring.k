"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PacketMirroring:
    r"""
    PacketMirroring is the Schema for the PacketMirrorings API. Packet Mirroring mirrors traffic to and from particular VM instances.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PacketMirroring", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2PacketMirroringSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2PacketMirroringStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "PacketMirroring" = "PacketMirroring"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2PacketMirroringSpec

    status?: ComputeGcpUpboundIoV1beta2PacketMirroringStatus


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpec:
    r"""
    PacketMirroringSpec defines the desired state of PacketMirroring

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 packet mirroring spec for provider

    Attributes
    ----------
    collectorIlb : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlb, default is Undefined, optional
        collector ilb
    description : str, default is Undefined, optional
        A human-readable description of the rule.
    $filter : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderFilter, default is Undefined, optional
        filter
    mirroredResources : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResources, default is Undefined, optional
        mirrored resources
    network : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetwork, default is Undefined, optional
        network
    priority : float, default is Undefined, optional
        Since only one rule can be active at a time, priority is
        used to break ties in the case of two rules that apply to
        the same instances.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        The Region in which the created address should reside.
        If it is not provided, the provider region is used.
    """


    collectorIlb?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlb

    description?: str

    $filter?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderFilter

    mirroredResources?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResources

    network?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetwork

    priority?: float

    project?: str

    region: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlb:
    r"""
    The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
    that will be used as collector for mirrored traffic. The
    specified forwarding rule must have is_mirroring_collector
    set to true.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the forwarding rule.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRef:
    r"""
    Reference to a ForwardingRule in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelector:
    r"""
    Selector for a ForwardingRule in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderCollectorIlbURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderFilter:
    r"""
    A filter for mirrored traffic.  If unset, all traffic is mirrored.
    Structure is documented below.

    Attributes
    ----------
    cidrRanges : [str], default is Undefined, optional
        IP CIDR ranges that apply as a filter on the source (ingress) or
        destination (egress) IP in the IP header. Only IPv4 is supported.
    direction : str, default is Undefined, optional
        Direction of traffic to mirror.
        Default value is BOTH.
        Possible values are: INGRESS, EGRESS, BOTH.
    ipProtocols : [str], default is Undefined, optional
        Possible IP protocols including tcp, udp, icmp and esp
    """


    cidrRanges?: [str]

    direction?: str

    ipProtocols?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResources:
    r"""
    A means of specifying which resources to mirror.
    Structure is documented below.

    Attributes
    ----------
    instances : [ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0], default is Undefined, optional
        All the listed instances will be mirrored.  Specify at most 50.
        Structure is documented below.
    subnetworks : [ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesSubnetworksItems0], default is Undefined, optional
        All instances in one of these subnetworks will be mirrored.
        Structure is documented below.
    tags : [str], default is Undefined, optional
        All instances with these tags will be mirrored.
    """


    instances?: [ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0]

    subnetworks?: [ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesSubnetworksItems0]

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring spec for provider mirrored resources instances items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRef:
    r"""
    Reference to a Instance in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelector:
    r"""
    Selector for a Instance in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesInstancesItems0URLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderMirroredResourcesSubnetworksItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring spec for provider mirrored resources subnetworks items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetwork:
    r"""
    Specifies the mirrored VPC network. Only packets in this network
    will be mirrored. All mirrored VMs should have a NIC in the given
    network. All mirrored subnetworks should belong to the given network.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The full self_link URL of the network where this rule is active.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRef:
    r"""
    Reference to a Network in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelector:
    r"""
    Selector for a Network in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecForProviderNetworkURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    collectorIlb : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlb, default is Undefined, optional
        collector ilb
    description : str, default is Undefined, optional
        A human-readable description of the rule.
    $filter : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderFilter, default is Undefined, optional
        filter
    mirroredResources : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResources, default is Undefined, optional
        mirrored resources
    network : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetwork, default is Undefined, optional
        network
    priority : float, default is Undefined, optional
        Since only one rule can be active at a time, priority is
        used to break ties in the case of two rules that apply to
        the same instances.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    collectorIlb?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlb

    description?: str

    $filter?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderFilter

    mirroredResources?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResources

    network?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetwork

    priority?: float

    project?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlb:
    r"""
    The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
    that will be used as collector for mirrored traffic. The
    specified forwarding rule must have is_mirroring_collector
    set to true.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the forwarding rule.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRef:
    r"""
    Reference to a ForwardingRule in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelector:
    r"""
    Selector for a ForwardingRule in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderCollectorIlbURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderFilter:
    r"""
    A filter for mirrored traffic.  If unset, all traffic is mirrored.
    Structure is documented below.

    Attributes
    ----------
    cidrRanges : [str], default is Undefined, optional
        IP CIDR ranges that apply as a filter on the source (ingress) or
        destination (egress) IP in the IP header. Only IPv4 is supported.
    direction : str, default is Undefined, optional
        Direction of traffic to mirror.
        Default value is BOTH.
        Possible values are: INGRESS, EGRESS, BOTH.
    ipProtocols : [str], default is Undefined, optional
        Possible IP protocols including tcp, udp, icmp and esp
    """


    cidrRanges?: [str]

    direction?: str

    ipProtocols?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResources:
    r"""
    A means of specifying which resources to mirror.
    Structure is documented below.

    Attributes
    ----------
    instances : [ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0], default is Undefined, optional
        All the listed instances will be mirrored.  Specify at most 50.
        Structure is documented below.
    subnetworks : [ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesSubnetworksItems0], default is Undefined, optional
        All instances in one of these subnetworks will be mirrored.
        Structure is documented below.
    tags : [str], default is Undefined, optional
        All instances with these tags will be mirrored.
    """


    instances?: [ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0]

    subnetworks?: [ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesSubnetworksItems0]

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring spec init provider mirrored resources instances items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRef:
    r"""
    Reference to a Instance in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelector:
    r"""
    Selector for a Instance in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesInstancesItems0URLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderMirroredResourcesSubnetworksItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring spec init provider mirrored resources subnetworks items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetwork:
    r"""
    Specifies the mirrored VPC network. Only packets in this network
    will be mirrored. All mirrored VMs should have a NIC in the given
    network. All mirrored subnetworks should belong to the given network.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The full self_link URL of the network where this rule is active.
    urlRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRef, default is Undefined, optional
        url ref
    urlSelector : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelector, default is Undefined, optional
        url selector
    """


    url?: str

    urlRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRef

    urlSelector?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelector


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRef:
    r"""
    Reference to a Network in compute to populate url.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelector:
    r"""
    Selector for a Network in compute to populate url.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecInitProviderNetworkURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatus:
    r"""
    PacketMirroringStatus defines the observed state of PacketMirroring.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2PacketMirroringStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2PacketMirroringStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 packet mirroring status at provider

    Attributes
    ----------
    collectorIlb : ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderCollectorIlb, default is Undefined, optional
        collector ilb
    description : str, default is Undefined, optional
        A human-readable description of the rule.
    $filter : ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderFilter, default is Undefined, optional
        filter
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/packetMirrorings/{{name}}
    mirroredResources : ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResources, default is Undefined, optional
        mirrored resources
    network : ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderNetwork, default is Undefined, optional
        network
    priority : float, default is Undefined, optional
        Since only one rule can be active at a time, priority is
        used to break ties in the case of two rules that apply to
        the same instances.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The Region in which the created address should reside.
        If it is not provided, the provider region is used.
    """


    collectorIlb?: ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderCollectorIlb

    description?: str

    $filter?: ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderFilter

    id?: str

    mirroredResources?: ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResources

    network?: ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderNetwork

    priority?: float

    project?: str

    region?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderCollectorIlb:
    r"""
    The Forwarding Rule resource (of type load_balancing_scheme=INTERNAL)
    that will be used as collector for mirrored traffic. The
    specified forwarding rule must have is_mirroring_collector
    set to true.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the forwarding rule.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderFilter:
    r"""
    A filter for mirrored traffic.  If unset, all traffic is mirrored.
    Structure is documented below.

    Attributes
    ----------
    cidrRanges : [str], default is Undefined, optional
        IP CIDR ranges that apply as a filter on the source (ingress) or
        destination (egress) IP in the IP header. Only IPv4 is supported.
    direction : str, default is Undefined, optional
        Direction of traffic to mirror.
        Default value is BOTH.
        Possible values are: INGRESS, EGRESS, BOTH.
    ipProtocols : [str], default is Undefined, optional
        Possible IP protocols including tcp, udp, icmp and esp
    """


    cidrRanges?: [str]

    direction?: str

    ipProtocols?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResources:
    r"""
    A means of specifying which resources to mirror.
    Structure is documented below.

    Attributes
    ----------
    instances : [ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesInstancesItems0], default is Undefined, optional
        All the listed instances will be mirrored.  Specify at most 50.
        Structure is documented below.
    subnetworks : [ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesSubnetworksItems0], default is Undefined, optional
        All instances in one of these subnetworks will be mirrored.
        Structure is documented below.
    tags : [str], default is Undefined, optional
        All instances with these tags will be mirrored.
    """


    instances?: [ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesInstancesItems0]

    subnetworks?: [ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesSubnetworksItems0]

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesInstancesItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring status at provider mirrored resources instances items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderMirroredResourcesSubnetworksItems0:
    r"""
    compute gcp upbound io v1beta2 packet mirroring status at provider mirrored resources subnetworks items0

    Attributes
    ----------
    url : str, default is Undefined, optional
        The URL of the subnetwork where this rule should be active.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusAtProviderNetwork:
    r"""
    Specifies the mirrored VPC network. Only packets in this network
    will be mirrored. All mirrored VMs should have a NIC in the given
    network. All mirrored subnetworks should belong to the given network.
    Structure is documented below.

    Attributes
    ----------
    url : str, default is Undefined, optional
        The full self_link URL of the network where this rule is active.
    """


    url?: str


schema ComputeGcpUpboundIoV1beta2PacketMirroringStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


