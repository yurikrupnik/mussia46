"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema BucketObject:
    r"""
    BucketObject is the Schema for the BucketObjects API. Creates a new object inside a specified bucket

    Attributes
    ----------
    apiVersion : str, default is "storage.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BucketObject", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageGcpUpboundIoV1beta2BucketObjectSpec, default is Undefined, required
        spec
    status : StorageGcpUpboundIoV1beta2BucketObjectStatus, default is Undefined, optional
        status
    """
    apiVersion: "storage.gcp.upbound.io/v1beta2" = "storage.gcp.upbound.io/v1beta2"

    kind: "BucketObject" = "BucketObject"

    metadata?: v1.ObjectMeta
    spec: StorageGcpUpboundIoV1beta2BucketObjectSpec

    status?: StorageGcpUpboundIoV1beta2BucketObjectStatus

schema StorageGcpUpboundIoV1beta2BucketObjectSpec:
    r"""
    BucketObjectSpec defines the desired state of BucketObject

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageGcpUpboundIoV1beta2BucketObjectSpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageGcpUpboundIoV1beta2BucketObjectSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: StorageGcpUpboundIoV1beta2BucketObjectSpecForProvider

    initProvider?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRef
    publishConnectionDetailsTo?: StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecWriteConnectionSecretToRef

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProvider:
    r"""
    storage gcp upbound io v1beta2 bucket object spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the containing bucket.
    bucketRef : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    cacheControl : str, default is Undefined, optional
        Cache-Control
        directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    content : str, default is Undefined, optional
        Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    contentDisposition : str, default is Undefined, optional
        Content-Disposition of the object data.
    contentEncoding : str, default is Undefined, optional
        Content-Encoding of the object data.
    contentLanguage : str, default is Undefined, optional
        Content-Language of the object data.
    contentType : str, default is Undefined, optional
        Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    customerEncryption : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryption, default is Undefined, optional
        customer encryption
    detectMd5Hash : str, default is Undefined, optional
        MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    eventBasedHold : bool, default is Undefined, optional
        Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    kmsKeyName : str, default is Undefined, optional
        The resource name of the Cloud KMS key that will be used to encrypt the object.
    metadata : {str:str}, default is Undefined, optional
        User-provided metadata, in key/value pairs.
    name : str, default is Undefined, optional
        The name of the object. If you're interpolating the name of this object, see output_name instead.
    retention : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderRetention, default is Undefined, optional
        retention
    source : str, default is Undefined, optional
        A path to the data you want to upload. Must be defined
        if content is not.
    storageClass : str, default is Undefined, optional
        The StorageClass of the new bucket object.
        Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
        storage class or to a standard class.
    temporaryHold : bool, default is Undefined, optional
        Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelector
    cacheControl?: str
    content?: str
    contentDisposition?: str
    contentEncoding?: str
    contentLanguage?: str
    contentType?: str
    customerEncryption?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryption
    detectMd5Hash?: str
    eventBasedHold?: bool
    kmsKeyName?: str
    metadata?: {str:str}
    name?: str
    retention?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderRetention
    source?: str
    storageClass?: str
    temporaryHold?: bool

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryption:
    r"""
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.

    Attributes
    ----------
    encryptionAlgorithm : str, default is Undefined, optional
        Encryption algorithm. Default: AES256
    encryptionKeySecretRef : StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryptionEncryptionKeySecretRef, default is Undefined, optional
        encryption key secret ref
    """
    encryptionAlgorithm?: str
    encryptionKeySecretRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryptionEncryptionKeySecretRef

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderCustomerEncryptionEncryptionKeySecretRef:
    r"""
    Base64 encoded Customer-Supplied Encryption Key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    key: str

    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecForProviderRetention:
    r"""
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The retention policy mode. Either Locked or Unlocked.
    retainUntilTime : str, default is Undefined, optional
        The time to retain the object until in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
    """
    mode?: str
    retainUntilTime?: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the containing bucket.
    bucketRef : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    cacheControl : str, default is Undefined, optional
        Cache-Control
        directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    content : str, default is Undefined, optional
        Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    contentDisposition : str, default is Undefined, optional
        Content-Disposition of the object data.
    contentEncoding : str, default is Undefined, optional
        Content-Encoding of the object data.
    contentLanguage : str, default is Undefined, optional
        Content-Language of the object data.
    contentType : str, default is Undefined, optional
        Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    customerEncryption : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryption, default is Undefined, optional
        customer encryption
    detectMd5Hash : str, default is Undefined, optional
        MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    eventBasedHold : bool, default is Undefined, optional
        Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    kmsKeyName : str, default is Undefined, optional
        The resource name of the Cloud KMS key that will be used to encrypt the object.
    metadata : {str:str}, default is Undefined, optional
        User-provided metadata, in key/value pairs.
    name : str, default is Undefined, optional
        The name of the object. If you're interpolating the name of this object, see output_name instead.
    retention : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderRetention, default is Undefined, optional
        retention
    source : str, default is Undefined, optional
        A path to the data you want to upload. Must be defined
        if content is not.
    storageClass : str, default is Undefined, optional
        The StorageClass of the new bucket object.
        Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
        storage class or to a standard class.
    temporaryHold : bool, default is Undefined, optional
        Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelector
    cacheControl?: str
    content?: str
    contentDisposition?: str
    contentEncoding?: str
    contentLanguage?: str
    contentType?: str
    customerEncryption?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryption
    detectMd5Hash?: str
    eventBasedHold?: bool
    kmsKeyName?: str
    metadata?: {str:str}
    name?: str
    retention?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderRetention
    source?: str
    storageClass?: str
    temporaryHold?: bool

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryption:
    r"""
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.

    Attributes
    ----------
    encryptionAlgorithm : str, default is Undefined, optional
        Encryption algorithm. Default: AES256
    encryptionKeySecretRef : StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryptionEncryptionKeySecretRef, default is Undefined, required
        encryption key secret ref
    """
    encryptionAlgorithm?: str
    encryptionKeySecretRef: StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryptionEncryptionKeySecretRef

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderCustomerEncryptionEncryptionKeySecretRef:
    r"""
    Base64 encoded Customer-Supplied Encryption Key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    key: str

    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecInitProviderRetention:
    r"""
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The retention policy mode. Either Locked or Unlocked.
    retainUntilTime : str, default is Undefined, optional
        The time to retain the object until in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
    """
    mode?: str
    retainUntilTime?: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRefPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRef
    metadata?: StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToMetadata
    name: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRefPolicy

schema StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta2BucketObjectSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema StorageGcpUpboundIoV1beta2BucketObjectSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta2BucketObjectStatus:
    r"""
    BucketObjectStatus defines the observed state of BucketObject.

    Attributes
    ----------
    atProvider : StorageGcpUpboundIoV1beta2BucketObjectStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageGcpUpboundIoV1beta2BucketObjectStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """
    atProvider?: StorageGcpUpboundIoV1beta2BucketObjectStatusAtProvider
    conditions?: [StorageGcpUpboundIoV1beta2BucketObjectStatusConditionsItems0]
    observedGeneration?: int

schema StorageGcpUpboundIoV1beta2BucketObjectStatusAtProvider:
    r"""
    storage gcp upbound io v1beta2 bucket object status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the containing bucket.
    cacheControl : str, default is Undefined, optional
        Cache-Control
        directive to specify caching behavior of object data. If omitted and object is accessible to all anonymous users, the default will be public, max-age=3600
    content : str, default is Undefined, optional
        Data as string to be uploaded. Must be defined if source is not. Note: The content field is marked as sensitive. To view the raw contents of the object, please define an output.
    contentDisposition : str, default is Undefined, optional
        Content-Disposition of the object data.
    contentEncoding : str, default is Undefined, optional
        Content-Encoding of the object data.
    contentLanguage : str, default is Undefined, optional
        Content-Language of the object data.
    contentType : str, default is Undefined, optional
        Content-Type of the object data. Defaults to "application/octet-stream" or "text/plain; charset=utf-8".
    crc32c : str, default is Undefined, optional
        (Computed) Base 64 CRC32 hash of the uploaded data.
    customerEncryption : StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderCustomerEncryption, default is Undefined, optional
        customer encryption
    detectMd5Hash : str, default is Undefined, optional
        MD5 hash of the data, encoded using base64. This field is not present for composite objects. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
    eventBasedHold : bool, default is Undefined, optional
        Whether an object is under event-based hold. Event-based hold is a way to retain objects until an event occurs, which is signified by the hold's release (i.e. this value is set to false). After being released (set to false), such objects will be subject to bucket-level retention (if any).
    generation : float, default is Undefined, optional
        (Computed) The content generation of this object. Used for object versioning and soft delete.
    id : str, default is Undefined, optional
        id
    kmsKeyName : str, default is Undefined, optional
        The resource name of the Cloud KMS key that will be used to encrypt the object.
    md5hash : str, default is Undefined, optional
        (Computed) Base 64 MD5 hash of the uploaded data.
    mediaLink : str, default is Undefined, optional
        (Computed) A url reference to download this object.
    metadata : {str:str}, default is Undefined, optional
        User-provided metadata, in key/value pairs.
    name : str, default is Undefined, optional
        The name of the object. If you're interpolating the name of this object, see output_name instead.
    outputName : str, default is Undefined, optional
        (Computed) The name of the object. Use this field in interpolations with google_storage_object_acl to recreate
        google_storage_object_acl resources when your google_storage_bucket_object is recreated.
    retention : StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderRetention, default is Undefined, optional
        retention
    selfLink : str, default is Undefined, optional
        (Computed) A url reference to this object.
    source : str, default is Undefined, optional
        A path to the data you want to upload. Must be defined
        if content is not.
    storageClass : str, default is Undefined, optional
        The StorageClass of the new bucket object.
        Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE. If not provided, this defaults to the bucket's default
        storage class or to a standard class.
    temporaryHold : bool, default is Undefined, optional
        Whether an object is under temporary hold. While this flag is set to true, the object is protected against deletion and overwrites.
    """
    bucket?: str
    cacheControl?: str
    content?: str
    contentDisposition?: str
    contentEncoding?: str
    contentLanguage?: str
    contentType?: str
    crc32c?: str
    customerEncryption?: StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderCustomerEncryption
    detectMd5Hash?: str
    eventBasedHold?: bool
    generation?: float
    id?: str
    kmsKeyName?: str
    md5hash?: str
    mediaLink?: str
    metadata?: {str:str}
    name?: str
    outputName?: str
    retention?: StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderRetention
    selfLink?: str
    source?: str
    storageClass?: str
    temporaryHold?: bool

schema StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderCustomerEncryption:
    r"""
    Enables object encryption with Customer-Supplied Encryption Key (CSEK). [Google documentation about CSEK.](https://cloud.google.com/storage/docs/encryption/customer-supplied-keys)
    Structure is documented below.

    Attributes
    ----------
    encryptionAlgorithm : str, default is Undefined, optional
        Encryption algorithm. Default: AES256
    """
    encryptionAlgorithm?: str

schema StorageGcpUpboundIoV1beta2BucketObjectStatusAtProviderRetention:
    r"""
    The object retention settings for the object. The retention settings allow an object to be retained until a provided date. Structure is documented below.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The retention policy mode. Either Locked or Unlocked.
    retainUntilTime : str, default is Undefined, optional
        The time to retain the object until in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
    """
    mode?: str
    retainUntilTime?: str

schema StorageGcpUpboundIoV1beta2BucketObjectStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

