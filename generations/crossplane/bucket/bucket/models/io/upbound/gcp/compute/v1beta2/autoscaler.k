"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Autoscaler:
    r"""
    Autoscaler is the Schema for the Autoscalers API. Represents an Autoscaler resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Autoscaler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2AutoscalerSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2AutoscalerStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "Autoscaler" = "Autoscaler"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2AutoscalerSpec

    status?: ComputeGcpUpboundIoV1beta2AutoscalerStatus


schema ComputeGcpUpboundIoV1beta2AutoscalerSpec:
    r"""
    AutoscalerSpec defines the desired state of Autoscaler

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2AutoscalerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2AutoscalerSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 autoscaler spec for provider

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    targetRef : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelector, default is Undefined, optional
        target selector
    zone : str, default is Undefined, required
        URL of the zone where the instance group resides.
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicy

    description?: str

    project?: str

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelector

    zone: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicy:
    r"""
    The configuration parameters for the autoscaling algorithm. You can
    define one or more of the policies for an autoscaler: cpuUtilization,
    customMetricUtilizations, and loadBalancingUtilization.
    If none of these are specified, the default will be to autoscale based
    on cpuUtilization to 0.6 or 60%.
    Structure is documented below.

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyCPUUtilization, default is Undefined, optional
        cpu utilization
    loadBalancingUtilization : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyLoadBalancingUtilization, default is Undefined, optional
        load balancing utilization
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyMetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControl, default is Undefined, optional
        scale in control
    scalingSchedules : [ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyCPUUtilization

    loadBalancingUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyLoadBalancingUtilization

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyMetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControl

    scalingSchedules?: [ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyCPUUtilization:
    r"""
    Defines the CPU utilization policy that allows the autoscaler to
    scale based on the average CPU utilization of a managed instance
    group.
    Structure is documented below.

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyLoadBalancingUtilization:
    r"""
    Configuration parameters of autoscaling based on a load balancer.
    Structure is documented below.

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyMetricItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler spec for provider autoscaling policy metric items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    name?: str

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControl:
    r"""
    Defines scale in controls to reduce the risk of response latency
    and outages due to abrupt scale-in events
    Structure is documented below.

    Attributes
    ----------
    maxScaledInReplicas : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas, default is Undefined, optional
        max scaled in replicas
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas:
    r"""
    A nested object resource
    Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderAutoscalingPolicyScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler spec for provider autoscaling policy scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRef:
    r"""
    Reference to a InstanceGroupManager in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelector:
    r"""
    Selector for a InstanceGroupManager in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecForProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    targetRef : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelector, default is Undefined, optional
        target selector
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicy

    description?: str

    project?: str

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelector


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicy:
    r"""
    The configuration parameters for the autoscaling algorithm. You can
    define one or more of the policies for an autoscaler: cpuUtilization,
    customMetricUtilizations, and loadBalancingUtilization.
    If none of these are specified, the default will be to autoscale based
    on cpuUtilization to 0.6 or 60%.
    Structure is documented below.

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyCPUUtilization, default is Undefined, optional
        cpu utilization
    loadBalancingUtilization : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyLoadBalancingUtilization, default is Undefined, optional
        load balancing utilization
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyMetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControl, default is Undefined, optional
        scale in control
    scalingSchedules : [ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyCPUUtilization

    loadBalancingUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyLoadBalancingUtilization

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyMetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControl

    scalingSchedules?: [ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyCPUUtilization:
    r"""
    Defines the CPU utilization policy that allows the autoscaler to
    scale based on the average CPU utilization of a managed instance
    group.
    Structure is documented below.

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyLoadBalancingUtilization:
    r"""
    Configuration parameters of autoscaling based on a load balancer.
    Structure is documented below.

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyMetricItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler spec init provider autoscaling policy metric items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    name?: str

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControl:
    r"""
    Defines scale in controls to reduce the risk of response latency
    and outages due to abrupt scale-in events
    Structure is documented below.

    Attributes
    ----------
    maxScaledInReplicas : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas, default is Undefined, optional
        max scaled in replicas
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas:
    r"""
    A nested object resource
    Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderAutoscalingPolicyScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler spec init provider autoscaling policy scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRef:
    r"""
    Reference to a InstanceGroupManager in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelector:
    r"""
    Selector for a InstanceGroupManager in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecInitProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2AutoscalerStatus:
    r"""
    AutoscalerStatus defines the observed state of Autoscaler.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2AutoscalerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2AutoscalerStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 autoscaler status at provider

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/autoscalers/{{name}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    zone : str, default is Undefined, optional
        URL of the zone where the instance group resides.
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicy

    creationTimestamp?: str

    description?: str

    id?: str

    project?: str

    selfLink?: str

    target?: str

    zone?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicy:
    r"""
    The configuration parameters for the autoscaling algorithm. You can
    define one or more of the policies for an autoscaler: cpuUtilization,
    customMetricUtilizations, and loadBalancingUtilization.
    If none of these are specified, the default will be to autoscale based
    on cpuUtilization to 0.6 or 60%.
    Structure is documented below.

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyCPUUtilization, default is Undefined, optional
        cpu utilization
    loadBalancingUtilization : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyLoadBalancingUtilization, default is Undefined, optional
        load balancing utilization
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyMetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControl, default is Undefined, optional
        scale in control
    scalingSchedules : [ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyCPUUtilization

    loadBalancingUtilization?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyLoadBalancingUtilization

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyMetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControl

    scalingSchedules?: [ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyCPUUtilization:
    r"""
    Defines the CPU utilization policy that allows the autoscaler to
    scale based on the average CPU utilization of a managed instance
    group.
    Structure is documented below.

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyLoadBalancingUtilization:
    r"""
    Configuration parameters of autoscaling based on a load balancer.
    Structure is documented below.

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyMetricItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler status at provider autoscaling policy metric items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    name?: str

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControl:
    r"""
    Defines scale in controls to reduce the risk of response latency
    and outages due to abrupt scale-in events
    Structure is documented below.

    Attributes
    ----------
    maxScaledInReplicas : ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas, default is Undefined, optional
        max scaled in replicas
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScaleInControlMaxScaledInReplicas:
    r"""
    A nested object resource
    Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusAtProviderAutoscalingPolicyScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta2 autoscaler status at provider autoscaling policy scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta2AutoscalerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


