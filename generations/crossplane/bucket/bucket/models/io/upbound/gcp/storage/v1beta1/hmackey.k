"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema HMACKey:
    r"""
    HMACKey is the Schema for the HMACKeys API. The hmacKeys resource represents an HMAC key within Cloud Storage.

    Attributes
    ----------
    apiVersion : str, default is "storage.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HMACKey", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageGcpUpboundIoV1beta1HMACKeySpec, default is Undefined, required
        spec
    status : StorageGcpUpboundIoV1beta1HMACKeyStatus, default is Undefined, optional
        status
    """
    apiVersion: "storage.gcp.upbound.io/v1beta1" = "storage.gcp.upbound.io/v1beta1"

    kind: "HMACKey" = "HMACKey"

    metadata?: v1.ObjectMeta
    spec: StorageGcpUpboundIoV1beta1HMACKeySpec

    status?: StorageGcpUpboundIoV1beta1HMACKeyStatus

schema StorageGcpUpboundIoV1beta1HMACKeySpec:
    r"""
    HMACKeySpec defines the desired state of HMACKey

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageGcpUpboundIoV1beta1HMACKeySpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageGcpUpboundIoV1beta1HMACKeySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageGcpUpboundIoV1beta1HMACKeySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: StorageGcpUpboundIoV1beta1HMACKeySpecForProvider

    initProvider?: StorageGcpUpboundIoV1beta1HMACKeySpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRef
    publishConnectionDetailsTo?: StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: StorageGcpUpboundIoV1beta1HMACKeySpecWriteConnectionSecretToRef

schema StorageGcpUpboundIoV1beta1HMACKeySpecForProvider:
    r"""
    storage gcp upbound io v1beta1 h m a c key spec for provider

    Attributes
    ----------
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceAccountEmail : str, default is Undefined, optional
        The email address of the key's associated service account.
    serviceAccountEmailRef : StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    state : str, default is Undefined, optional
        The state of the key. Can be set to one of ACTIVE, INACTIVE.
        Default value is ACTIVE.
        Possible values are: ACTIVE, INACTIVE.
    """
    project?: str
    serviceAccountEmail?: str
    serviceAccountEmailRef?: StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRef
    serviceAccountEmailSelector?: StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelector
    state?: str

schema StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRefPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelectorPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecForProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceAccountEmail : str, default is Undefined, optional
        The email address of the key's associated service account.
    serviceAccountEmailRef : StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    state : str, default is Undefined, optional
        The state of the key. Can be set to one of ACTIVE, INACTIVE.
        Default value is ACTIVE.
        Possible values are: ACTIVE, INACTIVE.
    """
    project?: str
    serviceAccountEmail?: str
    serviceAccountEmailRef?: StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRef
    serviceAccountEmailSelector?: StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelector
    state?: str

schema StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRefPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelectorPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecInitProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRefPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRef
    metadata?: StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToMetadata
    name: str

schema StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRefPolicy

schema StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1HMACKeySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema StorageGcpUpboundIoV1beta1HMACKeySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta1HMACKeyStatus:
    r"""
    HMACKeyStatus defines the observed state of HMACKey.

    Attributes
    ----------
    atProvider : StorageGcpUpboundIoV1beta1HMACKeyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageGcpUpboundIoV1beta1HMACKeyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """
    atProvider?: StorageGcpUpboundIoV1beta1HMACKeyStatusAtProvider
    conditions?: [StorageGcpUpboundIoV1beta1HMACKeyStatusConditionsItems0]
    observedGeneration?: int

schema StorageGcpUpboundIoV1beta1HMACKeyStatusAtProvider:
    r"""
    storage gcp upbound io v1beta1 h m a c key status at provider

    Attributes
    ----------
    accessId : str, default is Undefined, optional
        The access ID of the HMAC Key.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/hmacKeys/{{access_id}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceAccountEmail : str, default is Undefined, optional
        The email address of the key's associated service account.
    state : str, default is Undefined, optional
        The state of the key. Can be set to one of ACTIVE, INACTIVE.
        Default value is ACTIVE.
        Possible values are: ACTIVE, INACTIVE.
    timeCreated : str, default is Undefined, optional
        'The creation time of the HMAC key in RFC 3339 format. '
    updated : str, default is Undefined, optional
        'The last modification time of the HMAC key metadata in RFC 3339 format.'
    """
    accessId?: str
    id?: str
    project?: str
    serviceAccountEmail?: str
    state?: str
    timeCreated?: str
    updated?: str

schema StorageGcpUpboundIoV1beta1HMACKeyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

