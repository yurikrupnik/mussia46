"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionPerInstanceConfig:
    r"""
    RegionPerInstanceConfig is the Schema for the RegionPerInstanceConfigs API. A config defined for a single managed instance that belongs to an instance group manager.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionPerInstanceConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RegionPerInstanceConfig" = "RegionPerInstanceConfig"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpec

    status?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatus


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpec:
    r"""
    RegionPerInstanceConfigSpec defines the desired state of RegionPerInstanceConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider

    Attributes
    ----------
    minimalAction : str, default is Undefined, optional
        The minimal action to perform on the instance during an update.
        Default is NONE. Possible values are:
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        The most disruptive action to perform on the instance during an update.
        Default is REPLACE. Possible values are:
    name : str, default is Undefined, optional
        The name for this per-instance config and its corresponding instance.
    preservedState : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0], default is Undefined, optional
        The preserved state for this instance.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where the containing instance group manager is located
    regionInstanceGroupManager : str, default is Undefined, optional
        The region instance group manager this instance config is part of.
    regionInstanceGroupManagerRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRef, default is Undefined, optional
        region instance group manager ref
    regionInstanceGroupManagerSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelector, default is Undefined, optional
        region instance group manager selector
    regionRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRef, default is Undefined, optional
        region ref
    regionSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelector, default is Undefined, optional
        region selector
    removeInstanceOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove the underlying instance.
        When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
    removeInstanceStateOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove any specified state from the underlying instance.
        When false, deleting this config will not immediately remove any state from the underlying instance.
        State will be removed on the next instance recreation or update.
    """


    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    name?: str

    preservedState?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0]

    project?: str

    region?: str

    regionInstanceGroupManager?: str

    regionInstanceGroupManagerRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRef

    regionInstanceGroupManagerSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelector

    regionRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRef

    regionSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelector

    removeInstanceOnDestroy?: bool

    removeInstanceStateOnDestroy?: bool


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0

    Attributes
    ----------
    disk : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0], default is Undefined, optional
        Stateful disks for the instance.
        Structure is documented below.
    externalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0], default is Undefined, optional
        Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    internalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0], default is Undefined, optional
        Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    metadata : {str:str}, default is Undefined, optional
        Preserved metadata defined for this instance. This is a list of key->value pairs.
    """


    disk?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0]

    externalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0]

    internalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0]

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0 disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
        The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
        NEVER - detach the disk when the VM is deleted, but do not delete the disk.
        ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
        deleted from the instance group.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
    mode : str, default is Undefined, optional
        The mode of the disk.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    source : str, default is Undefined, optional
        The URI of an existing persistent disk to attach under the specified device-name in the format
        projects/project-id/zones/zone/disks/disk-name.
    sourceRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRef, default is Undefined, optional
        source ref
    sourceSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelector, default is Undefined, optional
        source selector
    """


    deleteRule?: str

    deviceName?: str

    mode?: str

    source?: str

    sourceRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRef

    sourceSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelector


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRef:
    r"""
    Reference to a Disk in compute to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelector:
    r"""
    Selector for a Disk in compute to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0DiskItems0SourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0 external IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0ExternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0 external IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0 internal IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderPreservedStateItems0InternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec for provider preserved state items0 internal IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate regionInstanceGroupManager.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate regionInstanceGroupManager.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionInstanceGroupManagerSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate region.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate region.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecForProviderRegionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    minimalAction : str, default is Undefined, optional
        The minimal action to perform on the instance during an update.
        Default is NONE. Possible values are:
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        The most disruptive action to perform on the instance during an update.
        Default is REPLACE. Possible values are:
    name : str, default is Undefined, optional
        The name for this per-instance config and its corresponding instance.
    preservedState : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0], default is Undefined, optional
        The preserved state for this instance.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where the containing instance group manager is located
    regionInstanceGroupManager : str, default is Undefined, optional
        The region instance group manager this instance config is part of.
    regionInstanceGroupManagerRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRef, default is Undefined, optional
        region instance group manager ref
    regionInstanceGroupManagerSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelector, default is Undefined, optional
        region instance group manager selector
    regionRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRef, default is Undefined, optional
        region ref
    regionSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelector, default is Undefined, optional
        region selector
    removeInstanceOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove the underlying instance.
        When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
    removeInstanceStateOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove any specified state from the underlying instance.
        When false, deleting this config will not immediately remove any state from the underlying instance.
        State will be removed on the next instance recreation or update.
    """


    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    name?: str

    preservedState?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0]

    project?: str

    region?: str

    regionInstanceGroupManager?: str

    regionInstanceGroupManagerRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRef

    regionInstanceGroupManagerSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelector

    regionRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRef

    regionSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelector

    removeInstanceOnDestroy?: bool

    removeInstanceStateOnDestroy?: bool


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0

    Attributes
    ----------
    disk : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0], default is Undefined, optional
        Stateful disks for the instance.
        Structure is documented below.
    externalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0], default is Undefined, optional
        Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    internalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0], default is Undefined, optional
        Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    metadata : {str:str}, default is Undefined, optional
        Preserved metadata defined for this instance. This is a list of key->value pairs.
    """


    disk?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0]

    externalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0]

    internalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0]

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0 disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
        The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
        NEVER - detach the disk when the VM is deleted, but do not delete the disk.
        ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
        deleted from the instance group.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
    mode : str, default is Undefined, optional
        The mode of the disk.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    source : str, default is Undefined, optional
        The URI of an existing persistent disk to attach under the specified device-name in the format
        projects/project-id/zones/zone/disks/disk-name.
    sourceRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRef, default is Undefined, optional
        source ref
    sourceSelector : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelector, default is Undefined, optional
        source selector
    """


    deleteRule?: str

    deviceName?: str

    mode?: str

    source?: str

    sourceRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRef

    sourceSelector?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelector


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRef:
    r"""
    Reference to a Disk in compute to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelector:
    r"""
    Selector for a Disk in compute to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0DiskItems0SourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0 external IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0ExternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0 external IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0 internal IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderPreservedStateItems0InternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config spec init provider preserved state items0 internal IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate regionInstanceGroupManager.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate regionInstanceGroupManager.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionInstanceGroupManagerSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate region.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate region.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecInitProviderRegionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatus:
    r"""
    RegionPerInstanceConfigStatus defines the observed state of RegionPerInstanceConfig.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{region}}/{{region_instance_group_manager}}/{{name}}
    minimalAction : str, default is Undefined, optional
        The minimal action to perform on the instance during an update.
        Default is NONE. Possible values are:
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        The most disruptive action to perform on the instance during an update.
        Default is REPLACE. Possible values are:
    name : str, default is Undefined, optional
        The name for this per-instance config and its corresponding instance.
    preservedState : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0], default is Undefined, optional
        The preserved state for this instance.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where the containing instance group manager is located
    regionInstanceGroupManager : str, default is Undefined, optional
        The region instance group manager this instance config is part of.
    removeInstanceOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove the underlying instance.
        When false, deleting this config will use the behavior as determined by remove_instance_on_destroy.
    removeInstanceStateOnDestroy : bool, default is Undefined, optional
        When true, deleting this config will immediately remove any specified state from the underlying instance.
        When false, deleting this config will not immediately remove any state from the underlying instance.
        State will be removed on the next instance recreation or update.
    """


    id?: str

    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    name?: str

    preservedState?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0]

    project?: str

    region?: str

    regionInstanceGroupManager?: str

    removeInstanceOnDestroy?: bool

    removeInstanceStateOnDestroy?: bool


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0

    Attributes
    ----------
    disk : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0DiskItems0], default is Undefined, optional
        Stateful disks for the instance.
        Structure is documented below.
    externalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0], default is Undefined, optional
        Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    internalIp : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0], default is Undefined, optional
        Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
        Structure is documented below.
    metadata : {str:str}, default is Undefined, optional
        Preserved metadata defined for this instance. This is a list of key->value pairs.
    """


    disk?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0DiskItems0]

    externalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0]

    internalIp?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0]

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0DiskItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0 disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
        The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION.
        NEVER - detach the disk when the VM is deleted, but do not delete the disk.
        ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently
        deleted from the instance group.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
    mode : str, default is Undefined, optional
        The mode of the disk.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    source : str, default is Undefined, optional
        The URI of an existing persistent disk to attach under the specified device-name in the format
        projects/project-id/zones/zone/disks/disk-name.
    """


    deleteRule?: str

    deviceName?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0 external IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0ExternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0 external IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0 internal IP items0

    Attributes
    ----------
    autoDelete : str, default is Undefined, optional
        These stateful IPs will never be released during autohealing, update or VM instance recreate operations. This flag is used to configure if the IP reservation should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted.
        Default value is NEVER.
        Possible values are: NEVER, ON_PERMANENT_INSTANCE_DELETION.
    interfaceName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    ipAddress : [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0IPAddressItems0], default is Undefined, optional
        Ip address representation
        Structure is documented below.
    """


    autoDelete?: str

    interfaceName?: str

    ipAddress?: [ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0IPAddressItems0]


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusAtProviderPreservedStateItems0InternalIPItems0IPAddressItems0:
    r"""
    compute gcp upbound io v1beta1 region per instance config status at provider preserved state items0 internal IP items0 IP address items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The URL of the reservation for this IP address.
    """


    address?: str


schema ComputeGcpUpboundIoV1beta1RegionPerInstanceConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


