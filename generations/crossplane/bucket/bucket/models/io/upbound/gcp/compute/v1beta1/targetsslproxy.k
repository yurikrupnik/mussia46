"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TargetSSLProxy:
    r"""
    TargetSSLProxy is the Schema for the TargetSSLProxys API. Represents a TargetSslProxy resource, which is used by one or more global forwarding rule to route incoming SSL requests to a backend service.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TargetSSLProxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1TargetSSLProxySpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1TargetSSLProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "TargetSSLProxy" = "TargetSSLProxy"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1TargetSSLProxySpec

    status?: ComputeGcpUpboundIoV1beta1TargetSSLProxyStatus


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpec:
    r"""
    TargetSSLProxySpec defines the desired state of TargetSSLProxy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProvider:
    r"""
    compute gcp upbound io v1beta1 target s s l proxy spec for provider

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        A reference to the BackendService resource.
    backendServiceRef : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelector, default is Undefined, optional
        backend service selector
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field can only be set for global target proxies.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    description : str, default is Undefined, optional
        An optional description of this resource.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyHeader : str, default is Undefined, optional
        Specifies the type of proxy header to append before sending data to
        the backend.
        Default value is NONE.
        Possible values are: NONE, PROXY_V1.
    sslCertificates : [str], default is Undefined, optional
        A list of SslCertificate resources that are used to authenticate
        connections between users and the load balancer. At least one
        SSL certificate must be specified.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to SSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetSslProxy resource. If not set, the TargetSslProxy
        resource will not have any SSL policy configured.
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelector

    certificateMap?: str

    description?: str

    project?: str

    proxyHeader?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelector

    sslPolicy?: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelector:
    r"""
    Selector for a list of SSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecForProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        A reference to the BackendService resource.
    backendServiceRef : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelector, default is Undefined, optional
        backend service selector
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field can only be set for global target proxies.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    description : str, default is Undefined, optional
        An optional description of this resource.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyHeader : str, default is Undefined, optional
        Specifies the type of proxy header to append before sending data to
        the backend.
        Default value is NONE.
        Possible values are: NONE, PROXY_V1.
    sslCertificates : [str], default is Undefined, optional
        A list of SslCertificate resources that are used to authenticate
        connections between users and the load balancer. At least one
        SSL certificate must be specified.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to SSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetSslProxy resource. If not set, the TargetSslProxy
        resource will not have any SSL policy configured.
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelector

    certificateMap?: str

    description?: str

    project?: str

    proxyHeader?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelector

    sslPolicy?: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelector:
    r"""
    Selector for a list of SSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecInitProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxyStatus:
    r"""
    TargetSSLProxyStatus defines the observed state of TargetSSLProxy.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 target s s l proxy status at provider

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        A reference to the BackendService resource.
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field can only be set for global target proxies.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/targetSslProxies/{{name}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyHeader : str, default is Undefined, optional
        Specifies the type of proxy header to append before sending data to
        the backend.
        Default value is NONE.
        Possible values are: NONE, PROXY_V1.
    proxyId : float, default is Undefined, optional
        The unique identifier for the resource.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    sslCertificates : [str], default is Undefined, optional
        A list of SslCertificate resources that are used to authenticate
        connections between users and the load balancer. At least one
        SSL certificate must be specified.
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetSslProxy resource. If not set, the TargetSslProxy
        resource will not have any SSL policy configured.
    """


    backendService?: str

    certificateMap?: str

    creationTimestamp?: str

    description?: str

    id?: str

    project?: str

    proxyHeader?: str

    proxyId?: float

    selfLink?: str

    sslCertificates?: [str]

    sslPolicy?: str


schema ComputeGcpUpboundIoV1beta1TargetSSLProxyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


