"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionNetworkEndpointGroup:
    r"""
    RegionNetworkEndpointGroup is the Schema for the RegionNetworkEndpointGroups API. A regional NEG that can support Serverless Products, proxying traffic to external backends and providing traffic to the PSC port mapping endpoints.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionNetworkEndpointGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "RegionNetworkEndpointGroup" = "RegionNetworkEndpointGroup"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpec

    status?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatus


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpec:
    r"""
    RegionNetworkEndpointGroupSpec defines the desired state of RegionNetworkEndpointGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 region network endpoint group spec for provider

    Attributes
    ----------
    appEngine : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderAppEngine, default is Undefined, optional
        app engine
    cloudFunction : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunction, default is Undefined, optional
        cloud function
    cloudRun : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRun, default is Undefined, optional
        cloud run
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    network : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The URL of the network to which all network endpoints in the NEG belong. Uses
        "default" project network if unspecified.
    networkEndpointType : str, default is Undefined, optional
        Type of network endpoints in this network endpoint group. Defaults to SERVERLESS.
        Default value is SERVERLESS.
        Possible values are: SERVERLESS, PRIVATE_SERVICE_CONNECT, INTERNET_IP_PORT, INTERNET_FQDN_PORT, GCE_VM_IP_PORTMAP.
    networkRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pscTargetService : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The target service url used to set up private service connection to
        a Google API or a PSC Producer Service Attachment.
    pscTargetServiceRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRef, default is Undefined, optional
        psc target service ref
    pscTargetServiceSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelector, default is Undefined, optional
        psc target service selector
    region : str, default is Undefined, required
        A reference to the region where the regional NEGs reside.
    subnetwork : str, default is Undefined, optional
        This field is only used for PSC NEGs.
        Optional URL of the subnetwork to which all network endpoints in the NEG belong.
    subnetworkRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    appEngine?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderAppEngine

    cloudFunction?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunction

    cloudRun?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRun

    description?: str

    network?: str

    networkEndpointType?: str

    networkRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelector

    project?: str

    pscTargetService?: str

    pscTargetServiceRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRef

    pscTargetServiceSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelector

    region: str

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelector


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderAppEngine:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional serving service.
        The service name must be 1-63 characters long, and comply with RFC1035.
        Example value: "default", "my-service".
    urlMask : str, default is Undefined, optional
        A template to parse service and version fields from a request URL.
        URL mask allows for routing to multiple App Engine services without
        having to create multiple Network Endpoint Groups and backend services.
        For example, the request URLs "foo1-dot-appname.appspot.com/v1" and
        "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG with
        URL mask "-dot-appname.appspot.com/". The URL mask will parse
        them to { service = "foo1", version = "v1" } and { service = "foo1", version = "v2" } respectively.
    version : str, default is Undefined, optional
        Optional serving version.
        The version must be 1-63 characters long, and comply with RFC1035.
        Example value: "v1", "v2".
    """


    service?: str

    urlMask?: str

    version?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunction:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    function : str, default is Undefined, optional
        A user-defined name of the Cloud Function.
        The function name is case-sensitive and must be 1-63 characters long.
        Example value: "func1".
    functionRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRef, default is Undefined, optional
        function ref
    functionSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelector, default is Undefined, optional
        function selector
    urlMask : str, default is Undefined, optional
        A template to parse function field from a request URL. URL mask allows
        for routing to multiple Cloud Functions without having to create
        multiple Network Endpoint Groups and backend services.
        For example, request URLs "mydomain.com/function1" and "mydomain.com/function2"
        can be backed by the same Serverless NEG with URL mask "/". The URL mask
        will parse them to { function = "function1" } and { function = "function2" } respectively.
    """


    function?: str

    functionRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRef

    functionSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelector

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRef:
    r"""
    Reference to a Function in cloudfunctions to populate function.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelector:
    r"""
    Selector for a Function in cloudfunctions to populate function.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudFunctionFunctionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRun:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Cloud Run service is the main resource of Cloud Run.
        The service must be 1-63 characters long, and comply with RFC1035.
        Example value: "run-service".
    serviceRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelector, default is Undefined, optional
        service selector
    tag : str, default is Undefined, optional
        Cloud Run tag represents the "named-revision" to provide
        additional fine-grained traffic routing information.
        The tag must be 1-63 characters long, and comply with RFC1035.
        Example value: "revision-0010".
    urlMask : str, default is Undefined, optional
        A template to parse service and tag fields from a request URL.
        URL mask allows for routing to multiple Run services without having
        to create multiple network endpoint groups and backend services.
        For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2"
        an be backed by the same Serverless Network Endpoint Group (NEG) with
        URL mask ".domain.com/". The URL mask will parse them to { service="bar1", tag="foo1" }
        and { service="bar2", tag="foo2" } respectively.
    """


    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelector

    tag?: str

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRef:
    r"""
    Reference to a Service in cloudrun to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelector:
    r"""
    Selector for a Service in cloudrun to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderCloudRunServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRef:
    r"""
    Reference to a ServiceAttachment in compute to populate pscTargetService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelector:
    r"""
    Selector for a ServiceAttachment in compute to populate pscTargetService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderPscTargetServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecForProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    appEngine : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderAppEngine, default is Undefined, optional
        app engine
    cloudFunction : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunction, default is Undefined, optional
        cloud function
    cloudRun : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRun, default is Undefined, optional
        cloud run
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    network : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The URL of the network to which all network endpoints in the NEG belong. Uses
        "default" project network if unspecified.
    networkEndpointType : str, default is Undefined, optional
        Type of network endpoints in this network endpoint group. Defaults to SERVERLESS.
        Default value is SERVERLESS.
        Possible values are: SERVERLESS, PRIVATE_SERVICE_CONNECT, INTERNET_IP_PORT, INTERNET_FQDN_PORT, GCE_VM_IP_PORTMAP.
    networkRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pscTargetService : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The target service url used to set up private service connection to
        a Google API or a PSC Producer Service Attachment.
    pscTargetServiceRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRef, default is Undefined, optional
        psc target service ref
    pscTargetServiceSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelector, default is Undefined, optional
        psc target service selector
    subnetwork : str, default is Undefined, optional
        This field is only used for PSC NEGs.
        Optional URL of the subnetwork to which all network endpoints in the NEG belong.
    subnetworkRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    appEngine?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderAppEngine

    cloudFunction?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunction

    cloudRun?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRun

    description?: str

    network?: str

    networkEndpointType?: str

    networkRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelector

    project?: str

    pscTargetService?: str

    pscTargetServiceRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRef

    pscTargetServiceSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelector

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelector


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderAppEngine:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional serving service.
        The service name must be 1-63 characters long, and comply with RFC1035.
        Example value: "default", "my-service".
    urlMask : str, default is Undefined, optional
        A template to parse service and version fields from a request URL.
        URL mask allows for routing to multiple App Engine services without
        having to create multiple Network Endpoint Groups and backend services.
        For example, the request URLs "foo1-dot-appname.appspot.com/v1" and
        "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG with
        URL mask "-dot-appname.appspot.com/". The URL mask will parse
        them to { service = "foo1", version = "v1" } and { service = "foo1", version = "v2" } respectively.
    version : str, default is Undefined, optional
        Optional serving version.
        The version must be 1-63 characters long, and comply with RFC1035.
        Example value: "v1", "v2".
    """


    service?: str

    urlMask?: str

    version?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunction:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    function : str, default is Undefined, optional
        A user-defined name of the Cloud Function.
        The function name is case-sensitive and must be 1-63 characters long.
        Example value: "func1".
    functionRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRef, default is Undefined, optional
        function ref
    functionSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelector, default is Undefined, optional
        function selector
    urlMask : str, default is Undefined, optional
        A template to parse function field from a request URL. URL mask allows
        for routing to multiple Cloud Functions without having to create
        multiple Network Endpoint Groups and backend services.
        For example, request URLs "mydomain.com/function1" and "mydomain.com/function2"
        can be backed by the same Serverless NEG with URL mask "/". The URL mask
        will parse them to { function = "function1" } and { function = "function2" } respectively.
    """


    function?: str

    functionRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRef

    functionSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelector

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRef:
    r"""
    Reference to a Function in cloudfunctions to populate function.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelector:
    r"""
    Selector for a Function in cloudfunctions to populate function.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudFunctionFunctionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRun:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Cloud Run service is the main resource of Cloud Run.
        The service must be 1-63 characters long, and comply with RFC1035.
        Example value: "run-service".
    serviceRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelector, default is Undefined, optional
        service selector
    tag : str, default is Undefined, optional
        Cloud Run tag represents the "named-revision" to provide
        additional fine-grained traffic routing information.
        The tag must be 1-63 characters long, and comply with RFC1035.
        Example value: "revision-0010".
    urlMask : str, default is Undefined, optional
        A template to parse service and tag fields from a request URL.
        URL mask allows for routing to multiple Run services without having
        to create multiple network endpoint groups and backend services.
        For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2"
        an be backed by the same Serverless Network Endpoint Group (NEG) with
        URL mask ".domain.com/". The URL mask will parse them to { service="bar1", tag="foo1" }
        and { service="bar2", tag="foo2" } respectively.
    """


    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelector

    tag?: str

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRef:
    r"""
    Reference to a Service in cloudrun to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelector:
    r"""
    Selector for a Service in cloudrun to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderCloudRunServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRef:
    r"""
    Reference to a ServiceAttachment in compute to populate pscTargetService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelector:
    r"""
    Selector for a ServiceAttachment in compute to populate pscTargetService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderPscTargetServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecInitProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatus:
    r"""
    RegionNetworkEndpointGroupStatus defines the observed state of RegionNetworkEndpointGroup.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 region network endpoint group status at provider

    Attributes
    ----------
    appEngine : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderAppEngine, default is Undefined, optional
        app engine
    cloudFunction : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudFunction, default is Undefined, optional
        cloud function
    cloudRun : ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudRun, default is Undefined, optional
        cloud run
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/networkEndpointGroups/{{name}}
    network : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The URL of the network to which all network endpoints in the NEG belong. Uses
        "default" project network if unspecified.
    networkEndpointType : str, default is Undefined, optional
        Type of network endpoints in this network endpoint group. Defaults to SERVERLESS.
        Default value is SERVERLESS.
        Possible values are: SERVERLESS, PRIVATE_SERVICE_CONNECT, INTERNET_IP_PORT, INTERNET_FQDN_PORT, GCE_VM_IP_PORTMAP.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pscTargetService : str, default is Undefined, optional
        This field is only used for PSC and INTERNET NEGs.
        The target service url used to set up private service connection to
        a Google API or a PSC Producer Service Attachment.
    region : str, default is Undefined, optional
        A reference to the region where the regional NEGs reside.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    subnetwork : str, default is Undefined, optional
        This field is only used for PSC NEGs.
        Optional URL of the subnetwork to which all network endpoints in the NEG belong.
    """


    appEngine?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderAppEngine

    cloudFunction?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudFunction

    cloudRun?: ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudRun

    description?: str

    id?: str

    network?: str

    networkEndpointType?: str

    project?: str

    pscTargetService?: str

    region?: str

    selfLink?: str

    subnetwork?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderAppEngine:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional serving service.
        The service name must be 1-63 characters long, and comply with RFC1035.
        Example value: "default", "my-service".
    urlMask : str, default is Undefined, optional
        A template to parse service and version fields from a request URL.
        URL mask allows for routing to multiple App Engine services without
        having to create multiple Network Endpoint Groups and backend services.
        For example, the request URLs "foo1-dot-appname.appspot.com/v1" and
        "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG with
        URL mask "-dot-appname.appspot.com/". The URL mask will parse
        them to { service = "foo1", version = "v1" } and { service = "foo1", version = "v2" } respectively.
    version : str, default is Undefined, optional
        Optional serving version.
        The version must be 1-63 characters long, and comply with RFC1035.
        Example value: "v1", "v2".
    """


    service?: str

    urlMask?: str

    version?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudFunction:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    function : str, default is Undefined, optional
        A user-defined name of the Cloud Function.
        The function name is case-sensitive and must be 1-63 characters long.
        Example value: "func1".
    urlMask : str, default is Undefined, optional
        A template to parse function field from a request URL. URL mask allows
        for routing to multiple Cloud Functions without having to create
        multiple Network Endpoint Groups and backend services.
        For example, request URLs "mydomain.com/function1" and "mydomain.com/function2"
        can be backed by the same Serverless NEG with URL mask "/". The URL mask
        will parse them to { function = "function1" } and { function = "function2" } respectively.
    """


    function?: str

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusAtProviderCloudRun:
    r"""
    This field is only used for SERVERLESS NEGs.
    Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
    Structure is documented below.

    Attributes
    ----------
    service : str, default is Undefined, optional
        Cloud Run service is the main resource of Cloud Run.
        The service must be 1-63 characters long, and comply with RFC1035.
        Example value: "run-service".
    tag : str, default is Undefined, optional
        Cloud Run tag represents the "named-revision" to provide
        additional fine-grained traffic routing information.
        The tag must be 1-63 characters long, and comply with RFC1035.
        Example value: "revision-0010".
    urlMask : str, default is Undefined, optional
        A template to parse service and tag fields from a request URL.
        URL mask allows for routing to multiple Run services without having
        to create multiple network endpoint groups and backend services.
        For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2"
        an be backed by the same Serverless Network Endpoint Group (NEG) with
        URL mask ".domain.com/". The URL mask will parse them to { service="bar1", tag="foo1" }
        and { service="bar2", tag="foo2" } respectively.
    """


    service?: str

    tag?: str

    urlMask?: str


schema ComputeGcpUpboundIoV1beta2RegionNetworkEndpointGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


