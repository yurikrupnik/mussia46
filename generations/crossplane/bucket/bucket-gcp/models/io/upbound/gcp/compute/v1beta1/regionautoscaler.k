"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionAutoscaler:
    r"""
    RegionAutoscaler is the Schema for the RegionAutoscalers API. Represents an Autoscaler resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionAutoscaler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RegionAutoscalerStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RegionAutoscaler" = "RegionAutoscaler"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpec

    status?: ComputeGcpUpboundIoV1beta1RegionAutoscalerStatus


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpec:
    r"""
    RegionAutoscalerSpec defines the desired state of RegionAutoscaler

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider

    Attributes
    ----------
    autoscalingPolicy : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0], default is Undefined, optional
        The configuration parameters for the autoscaling algorithm. You can
        define one or more of the policies for an autoscaler: cpuUtilization,
        customMetricUtilizations, and loadBalancingUtilization.
        If none of these are specified, the default will be to autoscale based
        on cpuUtilization to 0.6 or 60%.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        URL of the region where the instance group resides.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    targetRef : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelector, default is Undefined, optional
        target selector
    """


    autoscalingPolicy?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0]

    description?: str

    project?: str

    region: str

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0CPUUtilizationItems0], default is Undefined, optional
        Defines the CPU utilization policy that allows the autoscaler to
        scale based on the average CPU utilization of a managed instance
        group.
        Structure is documented below.
    loadBalancingUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a load balancer.
        Structure is documented below.
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0MetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    scalingSchedules : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0CPUUtilizationItems0]

    loadBalancingUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0]

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0MetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0]

    scalingSchedules?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0CPUUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 CPU utilization items0

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 load balancing utilization items0

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0MetricItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 metric items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter string to be used as the filter string for
        a Stackdriver Monitoring TimeSeries.list API call.
        This filter is used to select a specific TimeSeries for
        the purpose of autoscaling and to determine whether the metric
        is exporting per-instance or per-group data.
        You can only use the AND operator for joining selectors.
        You can only use direct equality comparison operator (=) without
        any functions for each selector.
        You can specify the metric in both the filter string and in the
        metric field. However, if specified in both places, the metric must
        be identical.
        The monitored resource type determines what kind of values are
        expected for the metric. If it is a gce_instance, the autoscaler
        expects the metric to include a separate TimeSeries for each
        instance in a group. In such a case, you cannot filter on resource
        labels.
        If the resource type is any other value, the autoscaler expects
        this metric to contain values that apply to the entire autoscaled
        instance group and resource label filtering can be performed to
        point autoscaler at the correct TimeSeries to scale upon.
        This is called a per-group metric for the purpose of autoscaling.
        If not specified, the type defaults to gce_instance.
        You should provide a filter that is selective enough to pick just
        one TimeSeries for the autoscaled group or for each of the instances
        (if you are using gce_instance resource type). If multiple
        TimeSeries are returned upon the query execution, the autoscaler
        will sum their respective values to obtain its scaling value.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    singleInstanceAssignment : float, default is Undefined, optional
        If scaling is based on a per-group metric value that represents the
        total amount of work to be done or resource usage, set this value to
        an amount assigned for a single instance of the scaled group.
        The autoscaler will keep the number of instances proportional to the
        value of this metric, the metric itself should not change value due
        to group resizing.
        For example, a good metric to use with the target is
        pubsub.googleapis.com/subscription/num_undelivered_messages
        or a custom metric exporting the total number of requests coming to
        your instances.
        A bad example would be a metric exporting an average or median
        latency, since this value can't include a chunk assignable to a
        single instance, it could be better used with utilization_target
        instead.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    $filter?: str

    name?: str

    singleInstanceAssignment?: float

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 scale in control items0

    Attributes
    ----------
    maxScaledInReplicas : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0]

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 scale in control items0 max scaled in replicas items0

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderAutoscalingPolicyItems0ScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec for provider autoscaling policy items0 scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecForProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscalingPolicy : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0], default is Undefined, optional
        The configuration parameters for the autoscaling algorithm. You can
        define one or more of the policies for an autoscaler: cpuUtilization,
        customMetricUtilizations, and loadBalancingUtilization.
        If none of these are specified, the default will be to autoscale based
        on cpuUtilization to 0.6 or 60%.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    targetRef : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelector, default is Undefined, optional
        target selector
    """


    autoscalingPolicy?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0]

    description?: str

    project?: str

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0CPUUtilizationItems0], default is Undefined, optional
        Defines the CPU utilization policy that allows the autoscaler to
        scale based on the average CPU utilization of a managed instance
        group.
        Structure is documented below.
    loadBalancingUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a load balancer.
        Structure is documented below.
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0MetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    scalingSchedules : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0CPUUtilizationItems0]

    loadBalancingUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0]

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0MetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0]

    scalingSchedules?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0CPUUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 CPU utilization items0

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 load balancing utilization items0

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0MetricItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 metric items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter string to be used as the filter string for
        a Stackdriver Monitoring TimeSeries.list API call.
        This filter is used to select a specific TimeSeries for
        the purpose of autoscaling and to determine whether the metric
        is exporting per-instance or per-group data.
        You can only use the AND operator for joining selectors.
        You can only use direct equality comparison operator (=) without
        any functions for each selector.
        You can specify the metric in both the filter string and in the
        metric field. However, if specified in both places, the metric must
        be identical.
        The monitored resource type determines what kind of values are
        expected for the metric. If it is a gce_instance, the autoscaler
        expects the metric to include a separate TimeSeries for each
        instance in a group. In such a case, you cannot filter on resource
        labels.
        If the resource type is any other value, the autoscaler expects
        this metric to contain values that apply to the entire autoscaled
        instance group and resource label filtering can be performed to
        point autoscaler at the correct TimeSeries to scale upon.
        This is called a per-group metric for the purpose of autoscaling.
        If not specified, the type defaults to gce_instance.
        You should provide a filter that is selective enough to pick just
        one TimeSeries for the autoscaled group or for each of the instances
        (if you are using gce_instance resource type). If multiple
        TimeSeries are returned upon the query execution, the autoscaler
        will sum their respective values to obtain its scaling value.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    singleInstanceAssignment : float, default is Undefined, optional
        If scaling is based on a per-group metric value that represents the
        total amount of work to be done or resource usage, set this value to
        an amount assigned for a single instance of the scaled group.
        The autoscaler will keep the number of instances proportional to the
        value of this metric, the metric itself should not change value due
        to group resizing.
        For example, a good metric to use with the target is
        pubsub.googleapis.com/subscription/num_undelivered_messages
        or a custom metric exporting the total number of requests coming to
        your instances.
        A bad example would be a metric exporting an average or median
        latency, since this value can't include a chunk assignable to a
        single instance, it could be better used with utilization_target
        instead.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    $filter?: str

    name?: str

    singleInstanceAssignment?: float

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 scale in control items0

    Attributes
    ----------
    maxScaledInReplicas : [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0]

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 scale in control items0 max scaled in replicas items0

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderAutoscalingPolicyItems0ScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler spec init provider autoscaling policy items0 scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecInitProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatus:
    r"""
    RegionAutoscalerStatus defines the observed state of RegionAutoscaler.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider

    Attributes
    ----------
    autoscalingPolicy : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0], default is Undefined, optional
        The configuration parameters for the autoscaling algorithm. You can
        define one or more of the policies for an autoscaler: cpuUtilization,
        customMetricUtilizations, and loadBalancingUtilization.
        If none of these are specified, the default will be to autoscale based
        on cpuUtilization to 0.6 or 60%.
        Structure is documented below.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/autoscalers/{{name}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        URL of the region where the instance group resides.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    target : str, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    autoscalingPolicy?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0]

    creationTimestamp?: str

    description?: str

    id?: str

    project?: str

    region?: str

    selfLink?: str

    target?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0

    Attributes
    ----------
    cooldownPeriod : float, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.
        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0CPUUtilizationItems0], default is Undefined, optional
        Defines the CPU utilization policy that allows the autoscaler to
        scale based on the average CPU utilization of a managed instance
        group.
        Structure is documented below.
    loadBalancingUtilization : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a load balancer.
        Structure is documented below.
    maxReplicas : float, default is Undefined, optional
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0MetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
        Structure is documented below.
    minReplicas : float, default is Undefined, optional
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy.
    scaleInControl : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    scalingSchedules : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
        Structure is documented below.
    """


    cooldownPeriod?: float

    cpuUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0CPUUtilizationItems0]

    loadBalancingUtilization?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0]

    maxReplicas?: float

    metric?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0MetricItems0]

    minReplicas?: float

    mode?: str

    scaleInControl?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0]

    scalingSchedules?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScalingSchedulesItems0]


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0CPUUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 CPU utilization items0

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    predictiveMethod?: str

    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0LoadBalancingUtilizationItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 load balancing utilization items0

    Attributes
    ----------
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    """


    target?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0MetricItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 metric items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter string to be used as the filter string for
        a Stackdriver Monitoring TimeSeries.list API call.
        This filter is used to select a specific TimeSeries for
        the purpose of autoscaling and to determine whether the metric
        is exporting per-instance or per-group data.
        You can only use the AND operator for joining selectors.
        You can only use direct equality comparison operator (=) without
        any functions for each selector.
        You can specify the metric in both the filter string and in the
        metric field. However, if specified in both places, the metric must
        be identical.
        The monitored resource type determines what kind of values are
        expected for the metric. If it is a gce_instance, the autoscaler
        expects the metric to include a separate TimeSeries for each
        instance in a group. In such a case, you cannot filter on resource
        labels.
        If the resource type is any other value, the autoscaler expects
        this metric to contain values that apply to the entire autoscaled
        instance group and resource label filtering can be performed to
        point autoscaler at the correct TimeSeries to scale upon.
        This is called a per-group metric for the purpose of autoscaling.
        If not specified, the type defaults to gce_instance.
        You should provide a filter that is selective enough to pick just
        one TimeSeries for the autoscaled group or for each of the instances
        (if you are using gce_instance resource type). If multiple
        TimeSeries are returned upon the query execution, the autoscaler
        will sum their respective values to obtain its scaling value.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    singleInstanceAssignment : float, default is Undefined, optional
        If scaling is based on a per-group metric value that represents the
        total amount of work to be done or resource usage, set this value to
        an amount assigned for a single instance of the scaled group.
        The autoscaler will keep the number of instances proportional to the
        value of this metric, the metric itself should not change value due
        to group resizing.
        For example, a good metric to use with the target is
        pubsub.googleapis.com/subscription/num_undelivered_messages
        or a custom metric exporting the total number of requests coming to
        your instances.
        A bad example would be a metric exporting an average or median
        latency, since this value can't include a chunk assignable to a
        single instance, it could be better used with utilization_target
        instead.
    target : float, default is Undefined, optional
        URL of the managed instance group that this autoscaler will scale.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric.
        Possible values are: GAUGE, DELTA_PER_SECOND, DELTA_PER_MINUTE.
    """


    $filter?: str

    name?: str

    singleInstanceAssignment?: float

    target?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 scale in control items0

    Attributes
    ----------
    maxScaledInReplicas : [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    timeWindowSec : float, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: [ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0]

    timeWindowSec?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScaleInControlItems0MaxScaledInReplicasItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 scale in control items0 max scaled in replicas items0

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : float, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusAtProviderAutoscalingPolicyItems0ScalingSchedulesItems0:
    r"""
    compute gcp upbound io v1beta1 region autoscaler status at provider autoscaling policy items0 scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : float, default is Undefined, optional
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : float, default is Undefined, optional
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    schedule : str, default is Undefined, optional
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec?: float

    minRequiredReplicas?: float

    name?: str

    schedule?: str

    timeZone?: str


schema ComputeGcpUpboundIoV1beta1RegionAutoscalerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


