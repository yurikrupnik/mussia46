"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    r"""
    Instance is the Schema for the Instances API. Manages a VM instance resource within GCE.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2InstanceSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2InstanceSpec

    status?: ComputeGcpUpboundIoV1beta2InstanceStatus


schema ComputeGcpUpboundIoV1beta2InstanceSpec:
    r"""
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2InstanceSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2InstanceSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    allowStoppingForUpdate : bool, default is Undefined, optional
        If you try to update a property that requires stopping the instance without setting this field, the update will fail.
    attachedDisk : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0], default is Undefined, optional
        Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
    bootDisk : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDisk, default is Undefined, optional
        boot disk
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs.
        This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    deletionProtection : bool, default is Undefined, optional
        Enable deletion protection on this instance. Defaults to false.
        Note: you must disable deletion protection before removing the resource (e.g.
    description : str, default is Undefined, optional
        A brief description of this resource.
    desiredStatus : str, default is Undefined, optional
        Desired status of the instance. Either
        "RUNNING" or "TERMINATED".
    enableDisplay : bool, default is Undefined, optional
        Enable Virtual Displays on this instance.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
        Note: GPU accelerators can only be used with on_host_maintenance option set to TERMINATE.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
    hostname : str, default is Undefined, optional
        A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        Valid format is a series of labels 1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods.
        The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Ssh keys attached in the Cloud Console will be removed.
        Add them to your config in order to keep them attached to your instance.
        A list of predefined metadata keys (e.g. ssh-keys) can be found here
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, except this one forces the instance to be recreated
        (thus re-running the script) if it is changed. This replaces the startup-script
        metadata key on the created instance and thus the two mechanisms are not
        allowed to be used simultaneously.  Users are free to use either mechanism - the
        only distinction is that this separate attribute will cause a recreate on
        modification.  On import, metadata_startup_script will not be set - if you
        choose to specify it you will see a diff immediately after import causing a
        destroy/recreate operation.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to the instance. This can
        be specified multiple times. Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    params : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderParams, default is Undefined, optional
        params
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScheduling, default is Undefined, optional
        scheduling
    scratchDisk : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScratchDiskItems0], default is Undefined, optional
        Scratch disks to attach to the instance. This can be
        specified multiple times for multiple scratch disks. Structure is documented below.
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        A list of network tags to attach to the instance.
    zone : str, default is Undefined, required
        The zone that the machine should be created in. If it is not provided, the provider zone is used.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAdvancedMachineFeatures

    allowStoppingForUpdate?: bool

    attachedDisk?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0]

    bootDisk?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDisk

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderConfidentialInstanceConfig

    deletionProtection?: bool

    description?: str

    desiredStatus?: str

    enableDisplay?: bool

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderGuestAcceleratorItems0]

    hostname?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataStartupScript?: str

    minCpuPlatform?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkPerformanceConfig

    params?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderParams

    project?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinity

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScheduling

    scratchDisk?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScratchDiskItems0]

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderShieldedInstanceConfig

    tags?: [str]

    zone: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading  on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization  enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        he number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider attached disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which the attached disk will be accessible
        under /dev/disk/by-id/google-*
    diskEncryptionKeyRawSecretRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef, default is Undefined, optional
        disk encryption key raw secret ref
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        Either "READ_ONLY" or "READ_WRITE", defaults to "READ_WRITE"
        If you have a persistent disk with data that you want to share
        between multiple instances, detach it from any read-write instances and
        attach it to one or more instances in read-only mode.
    source : str, default is Undefined, optional
        The name or self_link of the disk to attach to this instance.
    """


    deviceName?: str

    diskEncryptionKeyRawSecretRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef:
    r"""
    A 256-bit [customer-supplied encryption key]
    (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
    encoded in RFC 4648 base64
    to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDisk:
    r"""
    The boot disk for the instance.
    Structure is documented below.

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether the disk will be auto-deleted when the instance
        is deleted. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    diskEncryptionKeyRawSecretRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskDiskEncryptionKeyRawSecretRef, default is Undefined, optional
        disk encryption key raw secret ref
    initializeParams : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParams, default is Undefined, optional
        initialize params
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        The name or self_link of the existing disk (such as those managed by
        google_compute_disk) or disk image. To create an instance from a snapshot, first create a
        google_compute_disk from a snapshot and reference it here.
    """


    autoDelete?: bool

    deviceName?: str

    diskEncryptionKeyRawSecretRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskDiskEncryptionKeyRawSecretRef

    initializeParams?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParams

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskDiskEncryptionKeyRawSecretRef:
    r"""
    A 256-bit [customer-supplied encryption key]
    (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
    encoded in RFC 4648 base64
    to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw
    may be set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParams:
    r"""
    Parameters for a new disk that will be created
    alongside the new instance. Either initialize_params or source must be set.
    Structure is documented below.

    Attributes
    ----------
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    imageRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRef, default is Undefined, optional
        image ref
    imageSelector : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelector, default is Undefined, optional
        image selector
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk.
        This sets the number of I/O operations per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of IOPS every 4 hours. To update your hyperdisk more frequently,
        you'll need to manually delete and recreate it.
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much throughput to provision for the disk.
        This sets the number of throughput mb per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of throughput every 4 hours. To update your hyperdisk more
        frequently, you'll need to manually delete and recreate it.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    enableConfidentialCompute?: bool

    image?: str

    imageRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRef

    imageSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelector

    labels?: {str:str}

    provisionedIops?: float

    provisionedThroughput?: float

    resourceManagerTags?: {str:str}

    size?: float

    storagePool?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRef:
    r"""
    Reference to a Image in compute to populate image.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelector:
    r"""
    Selector for a Image in compute to populate image.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderBootDiskInitializeParamsImageSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet. Omit to ensure that the instance
        is not accessible from the Internet.g. via
        tunnel or because it is running on another cloud instance on that network).
        This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Either network or subnetwork must be provided. If network isn't provided it will
        be inferred from the subnetwork.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    networkRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelector, default is Undefined, optional
        network selector
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the subnetwork to attach this
        interface to. Either network or subnetwork must be provided. If network isn't provided
        it will be inferred from the subnetwork. The subnetwork must exist in the same region this
        instance will be created in. If the network resource is in
        legacy mode, do not specify this field. If the
        network is in auto subnet mode, specifying the subnetwork is optional. If the network is
        in custom subnet mode, specifying the subnetwork is required.
    subnetworkProject : str, default is Undefined, optional
        The project in which the subnetwork belongs.
        If the subnetwork is a self_link, this field is ignored in favor of the project
        defined in the subnetwork self_link. If the subnetwork is a name and this
        field is not provided, the provider project is used.
    subnetworkRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6Address?: str

    network?: str

    networkIp?: str

    networkRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelector

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelector


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        If the instance has an access config, either the given external ip (in the nat_ip field) or the ephemeral (generated) ip (if you didn't provide one).
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    natIp?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. This range may be a single IP address
        (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    externalIpv6 : str, default is Undefined, optional
        The first IPv6 address of the external IPv6 range associated
        with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig.
        To use a static external IP address, it must be unused and in the same region as the instance's zone.
        If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.
    externalIpv6PrefixLength : str, default is Undefined, optional
        The prefix length of the external IPv6 range.
    name : str, default is Undefined, optional
        A unique name for the resource, required by GCE.
        Changing this forces a new resource to be created.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    externalIpv6?: str

    externalIpv6PrefixLength?: str

    name?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable.
        Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderParams:
    r"""
    Additional instance parameters.
    .

    Attributes
    ----------
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    """


    resourceManagerTags?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies if the instance should be
        restarted if it was terminated by Compute Engine (not a user).
        Defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingLocalSsdRecoveryTimeout, default is Undefined, optional
        local ssd recovery timeout
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Describes maintenance behavior for the
        instance. Can be MIGRATE or TERMINATE, for more info, read
        here.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Specifies if the instance is preemptible.
        If this field is set to true, then automatic_restart must be
        set to false.  Defaults to false.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingLocalSsdRecoveryTimeout

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingLocalSsdRecoveryTimeout:
    r"""
    io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
    The local_ssd_recovery_timeout block supports:

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderScratchDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec for provider scratch disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    interface : str, default is Undefined, optional
        The disk interface to use for attaching this disk; either SCSI or NVME.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    """


    deviceName?: str

    interface?: str

    size?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccount:
    r"""
    Service account to attach to the instance.
    Structure is documented below.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    emailRef : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRef, default is Undefined, optional
        email ref
    emailSelector : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelector, default is Undefined, optional
        email selector
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    email?: str

    emailRef?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRef

    emailSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelector

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecForProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    allowStoppingForUpdate : bool, default is Undefined, optional
        If you try to update a property that requires stopping the instance without setting this field, the update will fail.
    attachedDisk : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0], default is Undefined, optional
        Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
    bootDisk : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDisk, default is Undefined, optional
        boot disk
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs.
        This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    deletionProtection : bool, default is Undefined, optional
        Enable deletion protection on this instance. Defaults to false.
        Note: you must disable deletion protection before removing the resource (e.g.
    description : str, default is Undefined, optional
        A brief description of this resource.
    desiredStatus : str, default is Undefined, optional
        Desired status of the instance. Either
        "RUNNING" or "TERMINATED".
    enableDisplay : bool, default is Undefined, optional
        Enable Virtual Displays on this instance.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
        Note: GPU accelerators can only be used with on_host_maintenance option set to TERMINATE.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
    hostname : str, default is Undefined, optional
        A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        Valid format is a series of labels 1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods.
        The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Ssh keys attached in the Cloud Console will be removed.
        Add them to your config in order to keep them attached to your instance.
        A list of predefined metadata keys (e.g. ssh-keys) can be found here
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, except this one forces the instance to be recreated
        (thus re-running the script) if it is changed. This replaces the startup-script
        metadata key on the created instance and thus the two mechanisms are not
        allowed to be used simultaneously.  Users are free to use either mechanism - the
        only distinction is that this separate attribute will cause a recreate on
        modification.  On import, metadata_startup_script will not be set - if you
        choose to specify it you will see a diff immediately after import causing a
        destroy/recreate operation.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to the instance. This can
        be specified multiple times. Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    params : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderParams, default is Undefined, optional
        params
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScheduling, default is Undefined, optional
        scheduling
    scratchDisk : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScratchDiskItems0], default is Undefined, optional
        Scratch disks to attach to the instance. This can be
        specified multiple times for multiple scratch disks. Structure is documented below.
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        A list of network tags to attach to the instance.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAdvancedMachineFeatures

    allowStoppingForUpdate?: bool

    attachedDisk?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0]

    bootDisk?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDisk

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderConfidentialInstanceConfig

    deletionProtection?: bool

    description?: str

    desiredStatus?: str

    enableDisplay?: bool

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderGuestAcceleratorItems0]

    hostname?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataStartupScript?: str

    minCpuPlatform?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkPerformanceConfig

    params?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderParams

    project?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinity

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScheduling

    scratchDisk?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScratchDiskItems0]

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderShieldedInstanceConfig

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading  on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization  enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        he number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider attached disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which the attached disk will be accessible
        under /dev/disk/by-id/google-*
    diskEncryptionKeyRawSecretRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef, default is Undefined, optional
        disk encryption key raw secret ref
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        Either "READ_ONLY" or "READ_WRITE", defaults to "READ_WRITE"
        If you have a persistent disk with data that you want to share
        between multiple instances, detach it from any read-write instances and
        attach it to one or more instances in read-only mode.
    source : str, default is Undefined, optional
        The name or self_link of the disk to attach to this instance.
    """


    deviceName?: str

    diskEncryptionKeyRawSecretRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderAttachedDiskItems0DiskEncryptionKeyRawSecretRef:
    r"""
    A 256-bit [customer-supplied encryption key]
    (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
    encoded in RFC 4648 base64
    to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDisk:
    r"""
    The boot disk for the instance.
    Structure is documented below.

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether the disk will be auto-deleted when the instance
        is deleted. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    diskEncryptionKeyRawSecretRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskDiskEncryptionKeyRawSecretRef, default is Undefined, optional
        disk encryption key raw secret ref
    initializeParams : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParams, default is Undefined, optional
        initialize params
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        The name or self_link of the existing disk (such as those managed by
        google_compute_disk) or disk image. To create an instance from a snapshot, first create a
        google_compute_disk from a snapshot and reference it here.
    """


    autoDelete?: bool

    deviceName?: str

    diskEncryptionKeyRawSecretRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskDiskEncryptionKeyRawSecretRef

    initializeParams?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParams

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskDiskEncryptionKeyRawSecretRef:
    r"""
    A 256-bit [customer-supplied encryption key]
    (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
    encoded in RFC 4648 base64
    to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw
    may be set.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParams:
    r"""
    Parameters for a new disk that will be created
    alongside the new instance. Either initialize_params or source must be set.
    Structure is documented below.

    Attributes
    ----------
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    imageRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRef, default is Undefined, optional
        image ref
    imageSelector : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelector, default is Undefined, optional
        image selector
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk.
        This sets the number of I/O operations per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of IOPS every 4 hours. To update your hyperdisk more frequently,
        you'll need to manually delete and recreate it.
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much throughput to provision for the disk.
        This sets the number of throughput mb per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of throughput every 4 hours. To update your hyperdisk more
        frequently, you'll need to manually delete and recreate it.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    enableConfidentialCompute?: bool

    image?: str

    imageRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRef

    imageSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelector

    labels?: {str:str}

    provisionedIops?: float

    provisionedThroughput?: float

    resourceManagerTags?: {str:str}

    size?: float

    storagePool?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRef:
    r"""
    Reference to a Image in compute to populate image.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelector:
    r"""
    Selector for a Image in compute to populate image.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderBootDiskInitializeParamsImageSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet. Omit to ensure that the instance
        is not accessible from the Internet.g. via
        tunnel or because it is running on another cloud instance on that network).
        This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Either network or subnetwork must be provided. If network isn't provided it will
        be inferred from the subnetwork.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    networkRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelector, default is Undefined, optional
        network selector
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the subnetwork to attach this
        interface to. Either network or subnetwork must be provided. If network isn't provided
        it will be inferred from the subnetwork. The subnetwork must exist in the same region this
        instance will be created in. If the network resource is in
        legacy mode, do not specify this field. If the
        network is in auto subnet mode, specifying the subnetwork is optional. If the network is
        in custom subnet mode, specifying the subnetwork is required.
    subnetworkProject : str, default is Undefined, optional
        The project in which the subnetwork belongs.
        If the subnetwork is a self_link, this field is ignored in favor of the project
        defined in the subnetwork self_link. If the subnetwork is a name and this
        field is not provided, the provider project is used.
    subnetworkRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6Address?: str

    network?: str

    networkIp?: str

    networkRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelector

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelector


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        If the instance has an access config, either the given external ip (in the nat_ip field) or the ephemeral (generated) ip (if you didn't provide one).
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    natIp?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. This range may be a single IP address
        (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    externalIpv6 : str, default is Undefined, optional
        The first IPv6 address of the external IPv6 range associated
        with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig.
        To use a static external IP address, it must be unused and in the same region as the instance's zone.
        If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.
    externalIpv6PrefixLength : str, default is Undefined, optional
        The prefix length of the external IPv6 range.
    name : str, default is Undefined, optional
        A unique name for the resource, required by GCE.
        Changing this forces a new resource to be created.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    externalIpv6?: str

    externalIpv6PrefixLength?: str

    name?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable.
        Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderParams:
    r"""
    Additional instance parameters.
    .

    Attributes
    ----------
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    """


    resourceManagerTags?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies if the instance should be
        restarted if it was terminated by Compute Engine (not a user).
        Defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingLocalSsdRecoveryTimeout, default is Undefined, optional
        local ssd recovery timeout
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Describes maintenance behavior for the
        instance. Can be MIGRATE or TERMINATE, for more info, read
        here.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Specifies if the instance is preemptible.
        If this field is set to true, then automatic_restart must be
        set to false.  Defaults to false.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingLocalSsdRecoveryTimeout

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingLocalSsdRecoveryTimeout:
    r"""
    io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
    The local_ssd_recovery_timeout block supports:

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderScratchDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance spec init provider scratch disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    interface : str, default is Undefined, optional
        The disk interface to use for attaching this disk; either SCSI or NVME.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    """


    deviceName?: str

    interface?: str

    size?: float


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccount:
    r"""
    Service account to attach to the instance.
    Structure is documented below.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    emailRef : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRef, default is Undefined, optional
        email ref
    emailSelector : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelector, default is Undefined, optional
        email selector
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    email?: str

    emailRef?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRef

    emailSelector?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelector

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecInitProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceStatus:
    r"""
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2InstanceStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 instance status at provider

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    allowStoppingForUpdate : bool, default is Undefined, optional
        If you try to update a property that requires stopping the instance without setting this field, the update will fail.
    attachedDisk : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAttachedDiskItems0], default is Undefined, optional
        Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
    bootDisk : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDisk, default is Undefined, optional
        boot disk
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs.
        This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    cpuPlatform : str, default is Undefined, optional
        The CPU platform used by this instance.
    currentStatus : str, default is Undefined, optional
        The current status of the instance. This could be one of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.`,
    deletionProtection : bool, default is Undefined, optional
        Enable deletion protection on this instance. Defaults to false.
        Note: you must disable deletion protection before removing the resource (e.g.
    description : str, default is Undefined, optional
        A brief description of this resource.
    desiredStatus : str, default is Undefined, optional
        Desired status of the instance. Either
        "RUNNING" or "TERMINATED".
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    enableDisplay : bool, default is Undefined, optional
        Enable Virtual Displays on this instance.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
        Note: GPU accelerators can only be used with on_host_maintenance option set to TERMINATE.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
    hostname : str, default is Undefined, optional
        A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        Valid format is a series of labels 1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods.
        The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/instances/{{name}}
    instanceId : str, default is Undefined, optional
        The server-assigned unique identifier of this instance.
    labelFingerprint : str, default is Undefined, optional
        The unique fingerprint of the labels.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within the instance. Ssh keys attached in the Cloud Console will be removed.
        Add them to your config in order to keep them attached to your instance.
        A list of predefined metadata keys (e.g. ssh-keys) can be found here
    metadataFingerprint : str, default is Undefined, optional
        The unique fingerprint of the metadata.
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, except this one forces the instance to be recreated
        (thus re-running the script) if it is changed. This replaces the startup-script
        metadata key on the created instance and thus the two mechanisms are not
        allowed to be used simultaneously.  Users are free to use either mechanism - the
        only distinction is that this separate attribute will cause a recreate on
        modification.  On import, metadata_startup_script will not be set - if you
        choose to specify it you will see a diff immediately after import causing a
        destroy/recreate operation.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to the instance. This can
        be specified multiple times. Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    params : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderParams, default is Undefined, optional
        params
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScheduling, default is Undefined, optional
        scheduling
    scratchDisk : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScratchDiskItems0], default is Undefined, optional
        Scratch disks to attach to the instance. This can be
        specified multiple times for multiple scratch disks. Structure is documented below.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        A list of network tags to attach to the instance.
    tagsFingerprint : str, default is Undefined, optional
        The unique fingerprint of the tags.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    zone : str, default is Undefined, optional
        The zone that the machine should be created in. If it is not provided, the provider zone is used.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAdvancedMachineFeatures

    allowStoppingForUpdate?: bool

    attachedDisk?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAttachedDiskItems0]

    bootDisk?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDisk

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderConfidentialInstanceConfig

    cpuPlatform?: str

    currentStatus?: str

    deletionProtection?: bool

    description?: str

    desiredStatus?: str

    effectiveLabels?: {str:str}

    enableDisplay?: bool

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderGuestAcceleratorItems0]

    hostname?: str

    id?: str

    instanceId?: str

    labelFingerprint?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataFingerprint?: str

    metadataStartupScript?: str

    minCpuPlatform?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkPerformanceConfig

    params?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderParams

    project?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinity

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScheduling

    scratchDisk?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScratchDiskItems0]

    selfLink?: str

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderShieldedInstanceConfig

    tags?: [str]

    tagsFingerprint?: str

    terraformLabels?: {str:str}

    zone?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading  on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization  enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        he number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderAttachedDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider attached disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which the attached disk will be accessible
        under /dev/disk/by-id/google-*
    diskEncryptionKeySha256 : str, default is Undefined, optional
        The RFC 4648 base64
        encoded SHA-256 hash of the [customer-supplied encryption key]
        (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption) that protects this resource.
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        Either "READ_ONLY" or "READ_WRITE", defaults to "READ_WRITE"
        If you have a persistent disk with data that you want to share
        between multiple instances, detach it from any read-write instances and
        attach it to one or more instances in read-only mode.
    source : str, default is Undefined, optional
        The name or self_link of the disk to attach to this instance.
    """


    deviceName?: str

    diskEncryptionKeySha256?: str

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDisk:
    r"""
    The boot disk for the instance.
    Structure is documented below.

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether the disk will be auto-deleted when the instance
        is deleted. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    diskEncryptionKeySha256 : str, default is Undefined, optional
        The RFC 4648 base64
        encoded SHA-256 hash of the [customer-supplied encryption key]
        (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption) that protects this resource.
    initializeParams : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDiskInitializeParams, default is Undefined, optional
        initialize params
    kmsKeySelfLink : str, default is Undefined, optional
        The self_link of the encryption key that is
        stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link
        and disk_encryption_key_raw may be set.
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        The name or self_link of the existing disk (such as those managed by
        google_compute_disk) or disk image. To create an instance from a snapshot, first create a
        google_compute_disk from a snapshot and reference it here.
    """


    autoDelete?: bool

    deviceName?: str

    diskEncryptionKeySha256?: str

    initializeParams?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDiskInitializeParams

    kmsKeySelfLink?: str

    mode?: str

    source?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderBootDiskInitializeParams:
    r"""
    Parameters for a new disk that will be created
    alongside the new instance. Either initialize_params or source must be set.
    Structure is documented below.

    Attributes
    ----------
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the instance.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field 'effective_labels' for all of the labels present on the resource.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk.
        This sets the number of I/O operations per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of IOPS every 4 hours. To update your hyperdisk more frequently,
        you'll need to manually delete and recreate it.
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much throughput to provision for the disk.
        This sets the number of throughput mb per second that the disk can handle.
        For more details,see the Hyperdisk documentation.
        Note: Updating currently is only supported for hyperdisk skus via disk update
        api/gcloud without the need to delete and recreate the disk, hyperdisk allows
        for an update of throughput every 4 hours. To update your hyperdisk more
        frequently, you'll need to manually delete and recreate it.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    enableConfidentialCompute?: bool

    image?: str

    labels?: {str:str}

    provisionedIops?: float

    provisionedThroughput?: float

    resourceManagerTags?: {str:str}

    size?: float

    storagePool?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet. Omit to ensure that the instance
        is not accessible from the Internet.g. via
        tunnel or because it is running on another cloud instance on that network).
        This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6AccessType : str, default is Undefined, optional
        One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet.
        This field is always inherited from its subnetwork.
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    name : str, default is Undefined, optional
        A unique name for the resource, required by GCE.
        Changing this forces a new resource to be created.
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Either network or subnetwork must be provided. If network isn't provided it will
        be inferred from the subnetwork.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the subnetwork to attach this
        interface to. Either network or subnetwork must be provided. If network isn't provided
        it will be inferred from the subnetwork. The subnetwork must exist in the same region this
        instance will be created in. If the network resource is in
        legacy mode, do not specify this field. If the
        network is in auto subnet mode, specifying the subnetwork is optional. If the network is
        in custom subnet mode, specifying the subnetwork is required.
    subnetworkProject : str, default is Undefined, optional
        The project in which the subnetwork belongs.
        If the subnetwork is a self_link, this field is ignored in favor of the project
        defined in the subnetwork self_link. If the subnetwork is a name and this
        field is not provided, the provider project is used.
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6AccessType?: str

    ipv6Address?: str

    name?: str

    network?: str

    networkIp?: str

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        If the instance has an access config, either the given external ip (in the nat_ip field) or the ephemeral (generated) ip (if you didn't provide one).
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    natIp?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. This range may be a single IP address
        (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    externalIpv6 : str, default is Undefined, optional
        The first IPv6 address of the external IPv6 range associated
        with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig.
        To use a static external IP address, it must be unused and in the same region as the instance's zone.
        If not specified, Google Cloud will automatically assign an external IPv6 address from the instance's subnetwork.
    externalIpv6PrefixLength : str, default is Undefined, optional
        The prefix length of the external IPv6 range.
    name : str, default is Undefined, optional
        A unique name for the resource, required by GCE.
        Changing this forces a new resource to be created.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM or STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The domain name to be used when creating DNSv6
        records for the external IPv6 ranges..
    """


    externalIpv6?: str

    externalIpv6PrefixLength?: str

    name?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable.
        Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderParams:
    r"""
    Additional instance parameters.
    .

    Attributes
    ----------
    resourceManagerTags : {str:str}, default is Undefined, optional
        A tag is a key-value pair that can be attached to a Google Cloud resource. You can use tags to conditionally allow or deny policies based on whether a resource has a specific tag. This value is not returned by the API.
    """


    resourceManagerTags?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies if the instance should be
        restarted if it was terminated by Compute Engine (not a user).
        Defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingLocalSsdRecoveryTimeout, default is Undefined, optional
        local ssd recovery timeout
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Describes maintenance behavior for the
        instance. Can be MIGRATE or TERMINATE, for more info, read
        here.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Specifies if the instance is preemptible.
        If this field is set to true, then automatic_restart must be
        set to false.  Defaults to false.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingLocalSsdRecoveryTimeout

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingLocalSsdRecoveryTimeout:
    r"""
    io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
    The local_ssd_recovery_timeout block supports:

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderScratchDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance status at provider scratch disk items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name with which attached disk will be accessible.
        On the instance, this device will be /dev/disk/by-id/google-{{device_name}}.
    interface : str, default is Undefined, optional
        The disk interface to use for attaching this disk; either SCSI or NVME.
    size : float, default is Undefined, optional
        The size of the image in gigabytes. If not specified, it
        will inherit the size of its base image.
    """


    deviceName?: str

    interface?: str

    size?: float


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderServiceAccount:
    r"""
    Service account to attach to the instance.
    Structure is documented below.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    email?: str

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceStatusAtProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
    Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
        Note: allow_stopping_for_update must be set to true or your instance must have a desired_status of TERMINATED in order to update this field.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


