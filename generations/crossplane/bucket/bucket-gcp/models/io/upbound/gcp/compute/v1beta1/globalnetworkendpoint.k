"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GlobalNetworkEndpoint:
    r"""
    GlobalNetworkEndpoint is the Schema for the GlobalNetworkEndpoints API. A Global Network endpoint represents a IP address and port combination that exists outside of GCP.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GlobalNetworkEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "GlobalNetworkEndpoint" = "GlobalNetworkEndpoint"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpec

    status?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatus


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpec:
    r"""
    GlobalNetworkEndpointSpec defines the desired state of GlobalNetworkEndpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 global network endpoint spec for provider

    Attributes
    ----------
    fqdn : str, default is Undefined, optional
        Fully qualified domain name of network endpoint.
        This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
    globalNetworkEndpointGroup : str, default is Undefined, optional
        The global network endpoint group this endpoint is part of.
    globalNetworkEndpointGroupRef : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRef, default is Undefined, optional
        global network endpoint group ref
    globalNetworkEndpointGroupSelector : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelector, default is Undefined, optional
        global network endpoint group selector
    ipAddress : str, default is Undefined, optional
        IPv4 address external endpoint.
    port : float, default is Undefined, optional
        Port number of the external endpoint.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    fqdn?: str

    globalNetworkEndpointGroup?: str

    globalNetworkEndpointGroupRef?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRef

    globalNetworkEndpointGroupSelector?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelector

    ipAddress?: str

    port?: float

    project?: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRef:
    r"""
    Reference to a GlobalNetworkEndpointGroup in compute to populate globalNetworkEndpointGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelector:
    r"""
    Selector for a GlobalNetworkEndpointGroup in compute to populate globalNetworkEndpointGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecForProviderGlobalNetworkEndpointGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    fqdn : str, default is Undefined, optional
        Fully qualified domain name of network endpoint.
        This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
    globalNetworkEndpointGroup : str, default is Undefined, optional
        The global network endpoint group this endpoint is part of.
    globalNetworkEndpointGroupRef : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRef, default is Undefined, optional
        global network endpoint group ref
    globalNetworkEndpointGroupSelector : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelector, default is Undefined, optional
        global network endpoint group selector
    ipAddress : str, default is Undefined, optional
        IPv4 address external endpoint.
    port : float, default is Undefined, optional
        Port number of the external endpoint.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    fqdn?: str

    globalNetworkEndpointGroup?: str

    globalNetworkEndpointGroupRef?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRef

    globalNetworkEndpointGroupSelector?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelector

    ipAddress?: str

    port?: float

    project?: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRef:
    r"""
    Reference to a GlobalNetworkEndpointGroup in compute to populate globalNetworkEndpointGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelector:
    r"""
    Selector for a GlobalNetworkEndpointGroup in compute to populate globalNetworkEndpointGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecInitProviderGlobalNetworkEndpointGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatus:
    r"""
    GlobalNetworkEndpointStatus defines the observed state of GlobalNetworkEndpoint.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 global network endpoint status at provider

    Attributes
    ----------
    fqdn : str, default is Undefined, optional
        Fully qualified domain name of network endpoint.
        This can only be specified when network_endpoint_type of the NEG is INTERNET_FQDN_PORT.
    globalNetworkEndpointGroup : str, default is Undefined, optional
        The global network endpoint group this endpoint is part of.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{global_network_endpoint_group}}/{{ip_address}}/{{fqdn}}/{{port}}
    ipAddress : str, default is Undefined, optional
        IPv4 address external endpoint.
    port : float, default is Undefined, optional
        Port number of the external endpoint.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    fqdn?: str

    globalNetworkEndpointGroup?: str

    id?: str

    ipAddress?: str

    port?: float

    project?: str


schema ComputeGcpUpboundIoV1beta1GlobalNetworkEndpointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


