"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Router:
    r"""
    Router is the Schema for the Routers API. Represents a Router resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Router", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2RouterSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2RouterStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "Router" = "Router"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2RouterSpec

    status?: ComputeGcpUpboundIoV1beta2RouterStatus


schema ComputeGcpUpboundIoV1beta2RouterSpec:
    r"""
    RouterSpec defines the desired state of Router

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2RouterSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2RouterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2RouterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2RouterSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2RouterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2RouterSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2RouterSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 router spec for provider

    Attributes
    ----------
    bgp : ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgp, default is Undefined, optional
        bgp
    description : str, default is Undefined, optional
        An optional description of this resource.
    encryptedInterconnectRouter : bool, default is Undefined, optional
        Indicates if a router is dedicated for use with encrypted VLAN
        attachments (interconnectAttachments).
    network : str, default is Undefined, optional
        A reference to the network to which this router belongs.
    networkRef : ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        Region where the router resides.
    """


    bgp?: ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgp

    description?: str

    encryptedInterconnectRouter?: bool

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelector

    project?: str

    region: str


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgp:
    r"""
    BGP information specific to this router.
    Structure is documented below.

    Attributes
    ----------
    advertiseMode : str, default is Undefined, optional
        User-specified flag to indicate which mode to use for advertisement.
        Default value is DEFAULT.
        Possible values are: DEFAULT, CUSTOM.
    advertisedGroups : [str], default is Undefined, optional
        User-specified list of prefix groups to advertise in custom mode.
        This field can only be populated if advertiseMode is CUSTOM and
        is advertised to all peers of the router. These groups will be
        advertised in addition to any specified prefixes. Leave this field
        blank to advertise no custom groups.
        This enum field has the one valid value: ALL_SUBNETS
    advertisedIpRanges : [ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgpAdvertisedIPRangesItems0], default is Undefined, optional
        User-specified list of individual IP ranges to advertise in
        custom mode. This field can only be populated if advertiseMode
        is CUSTOM and is advertised to all peers of the router. These IP
        ranges will be advertised in addition to any specified groups.
        Leave this field blank to advertise no custom IP ranges.
        Structure is documented below.
    asn : float, default is Undefined, optional
        Local BGP Autonomous System Number (ASN). Must be an RFC6996
        private ASN, either 16-bit or 32-bit. The value will be fixed for
        this router resource. All VPN tunnels that link to this router
        will have the same local ASN.
    identifierRange : str, default is Undefined, optional
        Explicitly specifies a range of valid BGP Identifiers for this Router.
        It is provided as a link-local IPv4 range (from 169.254.0.0/16), of
        size at least /30, even if the BGP sessions are over IPv6. It must
        not overlap with any IPv4 BGP session ranges. Other vendors commonly
        call this router ID.
    keepaliveInterval : float, default is Undefined, optional
        The interval in seconds between BGP keepalive messages that are sent
        to the peer. Hold time is three times the interval at which keepalive
        messages are sent, and the hold time is the maximum number of seconds
        allowed to elapse between successive keepalive messages that BGP
        receives from a peer.
        BGP will use the smaller of either the local hold time value or the
        peer's hold time value as the hold time for the BGP connection
        between the two peers. If set, this value must be between 20 and 60.
        The default is 20.
    """


    advertiseMode?: str

    advertisedGroups?: [str]

    advertisedIpRanges?: [ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgpAdvertisedIPRangesItems0]

    asn?: float

    identifierRange?: str

    keepaliveInterval?: float


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderBgpAdvertisedIPRangesItems0:
    r"""
    compute gcp upbound io v1beta2 router spec for provider bgp advertised IP ranges items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    range : str, default is Undefined, optional
        The IP range to advertise. The value must be a
        CIDR-formatted string.
    """


    description?: str

    range?: str


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecForProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bgp : ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgp, default is Undefined, optional
        bgp
    description : str, default is Undefined, optional
        An optional description of this resource.
    encryptedInterconnectRouter : bool, default is Undefined, optional
        Indicates if a router is dedicated for use with encrypted VLAN
        attachments (interconnectAttachments).
    network : str, default is Undefined, optional
        A reference to the network to which this router belongs.
    networkRef : ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    bgp?: ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgp

    description?: str

    encryptedInterconnectRouter?: bool

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelector

    project?: str


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgp:
    r"""
    BGP information specific to this router.
    Structure is documented below.

    Attributes
    ----------
    advertiseMode : str, default is Undefined, optional
        User-specified flag to indicate which mode to use for advertisement.
        Default value is DEFAULT.
        Possible values are: DEFAULT, CUSTOM.
    advertisedGroups : [str], default is Undefined, optional
        User-specified list of prefix groups to advertise in custom mode.
        This field can only be populated if advertiseMode is CUSTOM and
        is advertised to all peers of the router. These groups will be
        advertised in addition to any specified prefixes. Leave this field
        blank to advertise no custom groups.
        This enum field has the one valid value: ALL_SUBNETS
    advertisedIpRanges : [ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgpAdvertisedIPRangesItems0], default is Undefined, optional
        User-specified list of individual IP ranges to advertise in
        custom mode. This field can only be populated if advertiseMode
        is CUSTOM and is advertised to all peers of the router. These IP
        ranges will be advertised in addition to any specified groups.
        Leave this field blank to advertise no custom IP ranges.
        Structure is documented below.
    asn : float, default is Undefined, optional
        Local BGP Autonomous System Number (ASN). Must be an RFC6996
        private ASN, either 16-bit or 32-bit. The value will be fixed for
        this router resource. All VPN tunnels that link to this router
        will have the same local ASN.
    identifierRange : str, default is Undefined, optional
        Explicitly specifies a range of valid BGP Identifiers for this Router.
        It is provided as a link-local IPv4 range (from 169.254.0.0/16), of
        size at least /30, even if the BGP sessions are over IPv6. It must
        not overlap with any IPv4 BGP session ranges. Other vendors commonly
        call this router ID.
    keepaliveInterval : float, default is Undefined, optional
        The interval in seconds between BGP keepalive messages that are sent
        to the peer. Hold time is three times the interval at which keepalive
        messages are sent, and the hold time is the maximum number of seconds
        allowed to elapse between successive keepalive messages that BGP
        receives from a peer.
        BGP will use the smaller of either the local hold time value or the
        peer's hold time value as the hold time for the BGP connection
        between the two peers. If set, this value must be between 20 and 60.
        The default is 20.
    """


    advertiseMode?: str

    advertisedGroups?: [str]

    advertisedIpRanges?: [ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgpAdvertisedIPRangesItems0]

    asn?: float

    identifierRange?: str

    keepaliveInterval?: float


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderBgpAdvertisedIPRangesItems0:
    r"""
    compute gcp upbound io v1beta2 router spec init provider bgp advertised IP ranges items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    range : str, default is Undefined, optional
        The IP range to advertise. The value must be a
        CIDR-formatted string.
    """


    description?: str

    range?: str


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecInitProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2RouterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2RouterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2RouterStatus:
    r"""
    RouterStatus defines the observed state of Router.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2RouterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2RouterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2RouterStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2RouterStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2RouterStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 router status at provider

    Attributes
    ----------
    bgp : ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgp, default is Undefined, optional
        bgp
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    encryptedInterconnectRouter : bool, default is Undefined, optional
        Indicates if a router is dedicated for use with encrypted VLAN
        attachments (interconnectAttachments).
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/routers/{{name}}
    network : str, default is Undefined, optional
        A reference to the network to which this router belongs.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where the router resides.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    """


    bgp?: ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgp

    creationTimestamp?: str

    description?: str

    encryptedInterconnectRouter?: bool

    id?: str

    network?: str

    project?: str

    region?: str

    selfLink?: str


schema ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgp:
    r"""
    BGP information specific to this router.
    Structure is documented below.

    Attributes
    ----------
    advertiseMode : str, default is Undefined, optional
        User-specified flag to indicate which mode to use for advertisement.
        Default value is DEFAULT.
        Possible values are: DEFAULT, CUSTOM.
    advertisedGroups : [str], default is Undefined, optional
        User-specified list of prefix groups to advertise in custom mode.
        This field can only be populated if advertiseMode is CUSTOM and
        is advertised to all peers of the router. These groups will be
        advertised in addition to any specified prefixes. Leave this field
        blank to advertise no custom groups.
        This enum field has the one valid value: ALL_SUBNETS
    advertisedIpRanges : [ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgpAdvertisedIPRangesItems0], default is Undefined, optional
        User-specified list of individual IP ranges to advertise in
        custom mode. This field can only be populated if advertiseMode
        is CUSTOM and is advertised to all peers of the router. These IP
        ranges will be advertised in addition to any specified groups.
        Leave this field blank to advertise no custom IP ranges.
        Structure is documented below.
    asn : float, default is Undefined, optional
        Local BGP Autonomous System Number (ASN). Must be an RFC6996
        private ASN, either 16-bit or 32-bit. The value will be fixed for
        this router resource. All VPN tunnels that link to this router
        will have the same local ASN.
    identifierRange : str, default is Undefined, optional
        Explicitly specifies a range of valid BGP Identifiers for this Router.
        It is provided as a link-local IPv4 range (from 169.254.0.0/16), of
        size at least /30, even if the BGP sessions are over IPv6. It must
        not overlap with any IPv4 BGP session ranges. Other vendors commonly
        call this router ID.
    keepaliveInterval : float, default is Undefined, optional
        The interval in seconds between BGP keepalive messages that are sent
        to the peer. Hold time is three times the interval at which keepalive
        messages are sent, and the hold time is the maximum number of seconds
        allowed to elapse between successive keepalive messages that BGP
        receives from a peer.
        BGP will use the smaller of either the local hold time value or the
        peer's hold time value as the hold time for the BGP connection
        between the two peers. If set, this value must be between 20 and 60.
        The default is 20.
    """


    advertiseMode?: str

    advertisedGroups?: [str]

    advertisedIpRanges?: [ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgpAdvertisedIPRangesItems0]

    asn?: float

    identifierRange?: str

    keepaliveInterval?: float


schema ComputeGcpUpboundIoV1beta2RouterStatusAtProviderBgpAdvertisedIPRangesItems0:
    r"""
    compute gcp upbound io v1beta2 router status at provider bgp advertised IP ranges items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    range : str, default is Undefined, optional
        The IP range to advertise. The value must be a
        CIDR-formatted string.
    """


    description?: str

    range?: str


schema ComputeGcpUpboundIoV1beta2RouterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


