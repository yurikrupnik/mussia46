"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InstanceGroupManager:
    r"""
    InstanceGroupManager is the Schema for the InstanceGroupManagers API. Manages an Instance Group within GCE.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InstanceGroupManager", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "InstanceGroupManager" = "InstanceGroupManager"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpec

    status?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatus


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpec:
    r"""
    InstanceGroupManagerSpec defines the desired state of InstanceGroupManager

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider

    Attributes
    ----------
    allInstancesConfig : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAllInstancesConfig, default is Undefined, optional
        all instances config
    autoHealingPolicies : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPolicies, default is Undefined, optional
        auto healing policies
    baseInstanceName : str, default is Undefined, optional
        The base instance name to use for
        instances in this group. The value must be a valid
        RFC1035 name. Supported characters
        are lowercase letters, numbers, and hyphens (-). Instances are named by
        appending a hyphen and a random four-character string to the base instance
        name.
    description : str, default is Undefined, optional
        An optional textual description of the instance
        group manager.
    instanceLifecyclePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderInstanceLifecyclePolicy, default is Undefined, optional
        instance lifecycle policy
    listManagedInstancesResults : str, default is Undefined, optional
        Pagination behavior of the listManagedInstances API
        method for this managed instance group. Valid values are: PAGELESS, PAGINATED.
        If PAGELESS (default), Pagination is disabled for the group's listManagedInstances API method.
        maxResults and pageToken query parameters are ignored and all instances are returned in a single
        response. If PAGINATED, pagination is enabled, maxResults and pageToken query parameters are
        respected.
    namedPort : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderNamedPortItems0], default is Undefined, optional
        The named port configuration. See the section below
        for details on configuration.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    statefulDisk : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulDiskItems0], default is Undefined, optional
        Disks created on the instances that will be preserved on instance delete, update, etc. Structure is documented below. For more information see the official documentation.
    statefulExternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulExternalIPItems0], default is Undefined, optional
        External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    statefulInternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulInternalIPItems0], default is Undefined, optional
        Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    targetPools : [str], default is Undefined, optional
        The full URL of all target pools to which new
        instances in the group are added. Updating the target pools attribute does
        not affect existing instances.
    targetPoolsRefs : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0], default is Undefined, optional
        References to TargetPool in compute to populate targetPools.
    targetPoolsSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelector, default is Undefined, optional
        target pools selector
    targetSize : float, default is Undefined, optional
        The target number of running instances for this managed
        instance group. This value will fight with autoscaler settings when set, and generally shouldn't be set
        when using one. If a value is required, such as to specify a creation-time target size for the MIG,
        lifecycle. Defaults to 0.
    updatePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderUpdatePolicy, default is Undefined, optional
        update policy
    version : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0], default is Undefined, optional
        Application versions managed by this instance group. Each
        version deals with a specific instance template, allowing canary release scenarios.
        Structure is documented below.
    waitForInstances : bool, default is Undefined, optional
        Whether to wait for all instances to be created/updated before
        returning.
    waitForInstancesStatus : str, default is Undefined, optional
        When used with wait_for_instances it specifies the status to wait for.
        When STABLE is specified this resource will wait until the instances are stable before returning. When UPDATED is
        set, it will wait for the version target to be reached and any per instance configs to be effective as well as all
        instances to be stable before returning. The possible values are STABLE and UPDATED
    zone : str, default is Undefined, required
        The zone that instances in this group should be created
        in.
    """


    allInstancesConfig?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAllInstancesConfig

    autoHealingPolicies?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPolicies

    baseInstanceName?: str

    description?: str

    instanceLifecyclePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderInstanceLifecyclePolicy

    listManagedInstancesResults?: str

    namedPort?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderNamedPortItems0]

    project?: str

    statefulDisk?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulDiskItems0]

    statefulExternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulExternalIPItems0]

    statefulInternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulInternalIPItems0]

    targetPools?: [str]

    targetPoolsRefs?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0]

    targetPoolsSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelector

    targetSize?: float

    updatePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderUpdatePolicy

    version?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0]

    waitForInstances?: bool

    waitForInstancesStatus?: str

    zone: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAllInstancesConfig:
    r"""
    Properties to set on all instances in the group. After setting
    allInstancesConfig on the group, you must update the group's instances to
    apply the configuration.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        , The label key-value pairs that you want to patch onto the instance.
    metadata : {str:str}, default is Undefined, optional
        , The metadata key-value pairs that you want to patch onto the instance. For more information, see Project and instance metadata.
    """


    labels?: {str:str}

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPolicies:
    r"""
    The autohealing policies for this managed instance
    group. You can specify only one value. Structure is documented below. For more information, see the official documentation.

    Attributes
    ----------
    healthCheck : str, default is Undefined, optional
        The health check resource that signals autohealing.
    healthCheckRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRef, default is Undefined, optional
        health check ref
    healthCheckSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelector, default is Undefined, optional
        health check selector
    initialDelaySec : float, default is Undefined, optional
        The number of seconds that the managed instance group waits before
        it applies autohealing policies to new instances or recently recreated instances. Between 0 and 3600.
    """


    healthCheck?: str

    healthCheckRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRef

    healthCheckSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelector

    initialDelaySec?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRef:
    r"""
    Reference to a HealthCheck in compute to populate healthCheck.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelector:
    r"""
    Selector for a HealthCheck in compute to populate healthCheck.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderAutoHealingPoliciesHealthCheckSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderInstanceLifecyclePolicy:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider instance lifecycle policy

    Attributes
    ----------
    defaultActionOnFailure : str, default is Undefined, optional
        , Default behavior for all instance or health check failures. Valid options are: REPAIR, DO_NOTHING. If DO_NOTHING then instances will not be repaired. If REPAIR (default), then failed instances will be repaired.
    forceUpdateOnRepair : str, default is Undefined, optional
        , Specifies whether to apply the group's latest configuration when repairing a VM. Valid options are: YES, NO. If YES and you updated the group's instance template or per-instance configurations after the VM was created, then these changes are applied when VM is repaired. If NO (default), then updates are applied in accordance with the group's update policy type.
    """


    defaultActionOnFailure?: str

    forceUpdateOnRepair?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderNamedPortItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider named port items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the port.
    port : float, default is Undefined, optional
        The port number.
    """


    name?: str

    port?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider stateful disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the stateful disk when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the disk when the VM is deleted, but do not delete the disk. ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently deleted from the instance group. The default is NEVER.
    deviceName : str, default is Undefined, optional
        , The device name of the disk to be attached.
    """


    deleteRule?: str

    deviceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulExternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider stateful external IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the external ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the external ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the external Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderStatefulInternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider stateful internal IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the internal ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the internal ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the internal Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelector:
    r"""
    Selector for a list of TargetPool in compute to populate targetPools.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderTargetPoolsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderUpdatePolicy:
    r"""
    The update policy for this managed instance group. Structure is documented below. For more information, see the official documentation and API.

    Attributes
    ----------
    maxSurgeFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer. Conflicts with max_surge_percent. Both cannot be 0.
    maxSurgePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%. Conflicts with max_surge_fixed.
    maxUnavailableFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer.
    maxUnavailablePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%..
    minimalAction : str, default is Undefined, optional
        - Minimal action to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to update without stopping instances, RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a REFRESH, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        - Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
    replacementMethod : str, default is Undefined, optional
        , The instance replacement method for managed instance groups. Valid values are: "RECREATE", "SUBSTITUTE". If SUBSTITUTE (default), the group replaces VM instances with new instances that have randomly generated names. If RECREATE, instance names are preserved.  You must also set max_unavailable_fixed or max_unavailable_percent to be greater than 0.
    $type : str, default is Undefined, optional
        - The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
    """


    maxSurgeFixed?: float

    maxSurgePercent?: float

    maxUnavailableFixed?: float

    maxUnavailablePercent?: float

    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    replacementMethod?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec for provider version items0

    Attributes
    ----------
    instanceTemplate : str, default is Undefined, optional
        - The full URL to an instance template from which all new instances of this version will be created. It is recommended to reference instance templates through their unique id (self_link_unique attribute).
    instanceTemplateRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRef, default is Undefined, optional
        instance template ref
    instanceTemplateSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelector, default is Undefined, optional
        instance template selector
    name : str, default is Undefined, optional
        - Version name.
    targetSize : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0TargetSize, default is Undefined, optional
        target size
    """


    instanceTemplate?: str

    instanceTemplateRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRef

    instanceTemplateSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelector

    name?: str

    targetSize?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0TargetSize


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRef:
    r"""
    Reference to a InstanceTemplate in compute to populate instanceTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelector:
    r"""
    Selector for a InstanceTemplate in compute to populate instanceTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0InstanceTemplateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecForProviderVersionItems0TargetSize:
    r"""
    - The number of instances calculated as a fixed number or a percentage depending on the settings. Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        , The number of instances which are managed for this version. Conflicts with percent.
    percent : float, default is Undefined, optional
        , The number of instances (calculated as percentage) which are managed for this version. Conflicts with fixed.
        Note that when using percent, rounding will be in favor of explicitly set target_size values; a managed instance group with 2 instances and 2 versions,
        one of which has a target_size.percent of 60 will create 2 instances of that version.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allInstancesConfig : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAllInstancesConfig, default is Undefined, optional
        all instances config
    autoHealingPolicies : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPolicies, default is Undefined, optional
        auto healing policies
    baseInstanceName : str, default is Undefined, optional
        The base instance name to use for
        instances in this group. The value must be a valid
        RFC1035 name. Supported characters
        are lowercase letters, numbers, and hyphens (-). Instances are named by
        appending a hyphen and a random four-character string to the base instance
        name.
    description : str, default is Undefined, optional
        An optional textual description of the instance
        group manager.
    instanceLifecyclePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderInstanceLifecyclePolicy, default is Undefined, optional
        instance lifecycle policy
    listManagedInstancesResults : str, default is Undefined, optional
        Pagination behavior of the listManagedInstances API
        method for this managed instance group. Valid values are: PAGELESS, PAGINATED.
        If PAGELESS (default), Pagination is disabled for the group's listManagedInstances API method.
        maxResults and pageToken query parameters are ignored and all instances are returned in a single
        response. If PAGINATED, pagination is enabled, maxResults and pageToken query parameters are
        respected.
    namedPort : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderNamedPortItems0], default is Undefined, optional
        The named port configuration. See the section below
        for details on configuration.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    statefulDisk : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulDiskItems0], default is Undefined, optional
        Disks created on the instances that will be preserved on instance delete, update, etc. Structure is documented below. For more information see the official documentation.
    statefulExternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulExternalIPItems0], default is Undefined, optional
        External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    statefulInternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulInternalIPItems0], default is Undefined, optional
        Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    targetPools : [str], default is Undefined, optional
        The full URL of all target pools to which new
        instances in the group are added. Updating the target pools attribute does
        not affect existing instances.
    targetPoolsRefs : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0], default is Undefined, optional
        References to TargetPool in compute to populate targetPools.
    targetPoolsSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelector, default is Undefined, optional
        target pools selector
    targetSize : float, default is Undefined, optional
        The target number of running instances for this managed
        instance group. This value will fight with autoscaler settings when set, and generally shouldn't be set
        when using one. If a value is required, such as to specify a creation-time target size for the MIG,
        lifecycle. Defaults to 0.
    updatePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderUpdatePolicy, default is Undefined, optional
        update policy
    version : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0], default is Undefined, optional
        Application versions managed by this instance group. Each
        version deals with a specific instance template, allowing canary release scenarios.
        Structure is documented below.
    waitForInstances : bool, default is Undefined, optional
        Whether to wait for all instances to be created/updated before
        returning.
    waitForInstancesStatus : str, default is Undefined, optional
        When used with wait_for_instances it specifies the status to wait for.
        When STABLE is specified this resource will wait until the instances are stable before returning. When UPDATED is
        set, it will wait for the version target to be reached and any per instance configs to be effective as well as all
        instances to be stable before returning. The possible values are STABLE and UPDATED
    """


    allInstancesConfig?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAllInstancesConfig

    autoHealingPolicies?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPolicies

    baseInstanceName?: str

    description?: str

    instanceLifecyclePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderInstanceLifecyclePolicy

    listManagedInstancesResults?: str

    namedPort?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderNamedPortItems0]

    project?: str

    statefulDisk?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulDiskItems0]

    statefulExternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulExternalIPItems0]

    statefulInternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulInternalIPItems0]

    targetPools?: [str]

    targetPoolsRefs?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0]

    targetPoolsSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelector

    targetSize?: float

    updatePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderUpdatePolicy

    version?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0]

    waitForInstances?: bool

    waitForInstancesStatus?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAllInstancesConfig:
    r"""
    Properties to set on all instances in the group. After setting
    allInstancesConfig on the group, you must update the group's instances to
    apply the configuration.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        , The label key-value pairs that you want to patch onto the instance.
    metadata : {str:str}, default is Undefined, optional
        , The metadata key-value pairs that you want to patch onto the instance. For more information, see Project and instance metadata.
    """


    labels?: {str:str}

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPolicies:
    r"""
    The autohealing policies for this managed instance
    group. You can specify only one value. Structure is documented below. For more information, see the official documentation.

    Attributes
    ----------
    healthCheck : str, default is Undefined, optional
        The health check resource that signals autohealing.
    healthCheckRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRef, default is Undefined, optional
        health check ref
    healthCheckSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelector, default is Undefined, optional
        health check selector
    initialDelaySec : float, default is Undefined, optional
        The number of seconds that the managed instance group waits before
        it applies autohealing policies to new instances or recently recreated instances. Between 0 and 3600.
    """


    healthCheck?: str

    healthCheckRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRef

    healthCheckSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelector

    initialDelaySec?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRef:
    r"""
    Reference to a HealthCheck in compute to populate healthCheck.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelector:
    r"""
    Selector for a HealthCheck in compute to populate healthCheck.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderAutoHealingPoliciesHealthCheckSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderInstanceLifecyclePolicy:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider instance lifecycle policy

    Attributes
    ----------
    defaultActionOnFailure : str, default is Undefined, optional
        , Default behavior for all instance or health check failures. Valid options are: REPAIR, DO_NOTHING. If DO_NOTHING then instances will not be repaired. If REPAIR (default), then failed instances will be repaired.
    forceUpdateOnRepair : str, default is Undefined, optional
        , Specifies whether to apply the group's latest configuration when repairing a VM. Valid options are: YES, NO. If YES and you updated the group's instance template or per-instance configurations after the VM was created, then these changes are applied when VM is repaired. If NO (default), then updates are applied in accordance with the group's update policy type.
    """


    defaultActionOnFailure?: str

    forceUpdateOnRepair?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderNamedPortItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider named port items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the port.
    port : float, default is Undefined, optional
        The port number.
    """


    name?: str

    port?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider stateful disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the stateful disk when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the disk when the VM is deleted, but do not delete the disk. ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently deleted from the instance group. The default is NEVER.
    deviceName : str, default is Undefined, optional
        , The device name of the disk to be attached.
    """


    deleteRule?: str

    deviceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulExternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider stateful external IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the external ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the external ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the external Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderStatefulInternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider stateful internal IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the internal ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the internal ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the internal Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelector:
    r"""
    Selector for a list of TargetPool in compute to populate targetPools.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderTargetPoolsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderUpdatePolicy:
    r"""
    The update policy for this managed instance group. Structure is documented below. For more information, see the official documentation and API.

    Attributes
    ----------
    maxSurgeFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer. Conflicts with max_surge_percent. Both cannot be 0.
    maxSurgePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%. Conflicts with max_surge_fixed.
    maxUnavailableFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer.
    maxUnavailablePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%..
    minimalAction : str, default is Undefined, optional
        - Minimal action to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to update without stopping instances, RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a REFRESH, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        - Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
    replacementMethod : str, default is Undefined, optional
        , The instance replacement method for managed instance groups. Valid values are: "RECREATE", "SUBSTITUTE". If SUBSTITUTE (default), the group replaces VM instances with new instances that have randomly generated names. If RECREATE, instance names are preserved.  You must also set max_unavailable_fixed or max_unavailable_percent to be greater than 0.
    $type : str, default is Undefined, optional
        - The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
    """


    maxSurgeFixed?: float

    maxSurgePercent?: float

    maxUnavailableFixed?: float

    maxUnavailablePercent?: float

    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    replacementMethod?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager spec init provider version items0

    Attributes
    ----------
    instanceTemplate : str, default is Undefined, optional
        - The full URL to an instance template from which all new instances of this version will be created. It is recommended to reference instance templates through their unique id (self_link_unique attribute).
    instanceTemplateRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRef, default is Undefined, optional
        instance template ref
    instanceTemplateSelector : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelector, default is Undefined, optional
        instance template selector
    name : str, default is Undefined, optional
        - Version name.
    targetSize : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0TargetSize, default is Undefined, optional
        target size
    """


    instanceTemplate?: str

    instanceTemplateRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRef

    instanceTemplateSelector?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelector

    name?: str

    targetSize?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0TargetSize


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRef:
    r"""
    Reference to a InstanceTemplate in compute to populate instanceTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelector:
    r"""
    Selector for a InstanceTemplate in compute to populate instanceTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0InstanceTemplateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecInitProviderVersionItems0TargetSize:
    r"""
    - The number of instances calculated as a fixed number or a percentage depending on the settings. Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        , The number of instances which are managed for this version. Conflicts with percent.
    percent : float, default is Undefined, optional
        , The number of instances (calculated as percentage) which are managed for this version. Conflicts with fixed.
        Note that when using percent, rounding will be in favor of explicitly set target_size values; a managed instance group with 2 instances and 2 versions,
        one of which has a target_size.percent of 60 will create 2 instances of that version.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatus:
    r"""
    InstanceGroupManagerStatus defines the observed state of InstanceGroupManager.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider

    Attributes
    ----------
    allInstancesConfig : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAllInstancesConfig, default is Undefined, optional
        all instances config
    autoHealingPolicies : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAutoHealingPolicies, default is Undefined, optional
        auto healing policies
    baseInstanceName : str, default is Undefined, optional
        The base instance name to use for
        instances in this group. The value must be a valid
        RFC1035 name. Supported characters
        are lowercase letters, numbers, and hyphens (-). Instances are named by
        appending a hyphen and a random four-character string to the base instance
        name.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional textual description of the instance
        group manager.
    fingerprint : str, default is Undefined, optional
        The fingerprint of the instance group manager.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/instanceGroupManagers/{{name}}
    instanceGroup : str, default is Undefined, optional
        The full URL of the instance group created by the manager.
    instanceLifecyclePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderInstanceLifecyclePolicy, default is Undefined, optional
        instance lifecycle policy
    listManagedInstancesResults : str, default is Undefined, optional
        Pagination behavior of the listManagedInstances API
        method for this managed instance group. Valid values are: PAGELESS, PAGINATED.
        If PAGELESS (default), Pagination is disabled for the group's listManagedInstances API method.
        maxResults and pageToken query parameters are ignored and all instances are returned in a single
        response. If PAGINATED, pagination is enabled, maxResults and pageToken query parameters are
        respected.
    namedPort : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderNamedPortItems0], default is Undefined, optional
        The named port configuration. See the section below
        for details on configuration.
    operation : str, default is Undefined, optional
        operation
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    selfLink : str, default is Undefined, optional
        The URL of the created resource.
    statefulDisk : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulDiskItems0], default is Undefined, optional
        Disks created on the instances that will be preserved on instance delete, update, etc. Structure is documented below. For more information see the official documentation.
    statefulExternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulExternalIPItems0], default is Undefined, optional
        External network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    statefulInternalIp : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulInternalIPItems0], default is Undefined, optional
        Internal network IPs assigned to the instances that will be preserved on instance delete, update, etc. This map is keyed with the network interface name. Structure is documented below.
    status : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0], default is Undefined, optional
        The status of this managed instance group.
    targetPools : [str], default is Undefined, optional
        The full URL of all target pools to which new
        instances in the group are added. Updating the target pools attribute does
        not affect existing instances.
    targetSize : float, default is Undefined, optional
        The target number of running instances for this managed
        instance group. This value will fight with autoscaler settings when set, and generally shouldn't be set
        when using one. If a value is required, such as to specify a creation-time target size for the MIG,
        lifecycle. Defaults to 0.
    updatePolicy : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderUpdatePolicy, default is Undefined, optional
        update policy
    version : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0], default is Undefined, optional
        Application versions managed by this instance group. Each
        version deals with a specific instance template, allowing canary release scenarios.
        Structure is documented below.
    waitForInstances : bool, default is Undefined, optional
        Whether to wait for all instances to be created/updated before
        returning.
    waitForInstancesStatus : str, default is Undefined, optional
        When used with wait_for_instances it specifies the status to wait for.
        When STABLE is specified this resource will wait until the instances are stable before returning. When UPDATED is
        set, it will wait for the version target to be reached and any per instance configs to be effective as well as all
        instances to be stable before returning. The possible values are STABLE and UPDATED
    zone : str, default is Undefined, optional
        The zone that instances in this group should be created
        in.
    """


    allInstancesConfig?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAllInstancesConfig

    autoHealingPolicies?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAutoHealingPolicies

    baseInstanceName?: str

    creationTimestamp?: str

    description?: str

    fingerprint?: str

    id?: str

    instanceGroup?: str

    instanceLifecyclePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderInstanceLifecyclePolicy

    listManagedInstancesResults?: str

    namedPort?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderNamedPortItems0]

    operation?: str

    project?: str

    selfLink?: str

    statefulDisk?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulDiskItems0]

    statefulExternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulExternalIPItems0]

    statefulInternalIp?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulInternalIPItems0]

    status?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0]

    targetPools?: [str]

    targetSize?: float

    updatePolicy?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderUpdatePolicy

    version?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0]

    waitForInstances?: bool

    waitForInstancesStatus?: str

    zone?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAllInstancesConfig:
    r"""
    Properties to set on all instances in the group. After setting
    allInstancesConfig on the group, you must update the group's instances to
    apply the configuration.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        , The label key-value pairs that you want to patch onto the instance.
    metadata : {str:str}, default is Undefined, optional
        , The metadata key-value pairs that you want to patch onto the instance. For more information, see Project and instance metadata.
    """


    labels?: {str:str}

    metadata?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderAutoHealingPolicies:
    r"""
    The autohealing policies for this managed instance
    group. You can specify only one value. Structure is documented below. For more information, see the official documentation.

    Attributes
    ----------
    healthCheck : str, default is Undefined, optional
        The health check resource that signals autohealing.
    initialDelaySec : float, default is Undefined, optional
        The number of seconds that the managed instance group waits before
        it applies autohealing policies to new instances or recently recreated instances. Between 0 and 3600.
    """


    healthCheck?: str

    initialDelaySec?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderInstanceLifecyclePolicy:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider instance lifecycle policy

    Attributes
    ----------
    defaultActionOnFailure : str, default is Undefined, optional
        , Default behavior for all instance or health check failures. Valid options are: REPAIR, DO_NOTHING. If DO_NOTHING then instances will not be repaired. If REPAIR (default), then failed instances will be repaired.
    forceUpdateOnRepair : str, default is Undefined, optional
        , Specifies whether to apply the group's latest configuration when repairing a VM. Valid options are: YES, NO. If YES and you updated the group's instance template or per-instance configurations after the VM was created, then these changes are applied when VM is repaired. If NO (default), then updates are applied in accordance with the group's update policy type.
    """


    defaultActionOnFailure?: str

    forceUpdateOnRepair?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderNamedPortItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider named port items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the port.
    port : float, default is Undefined, optional
        The port number.
    """


    name?: str

    port?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider stateful disk items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the stateful disk when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the disk when the VM is deleted, but do not delete the disk. ON_PERMANENT_INSTANCE_DELETION will delete the stateful disk when the VM is permanently deleted from the instance group. The default is NEVER.
    deviceName : str, default is Undefined, optional
        , The device name of the disk to be attached.
    """


    deleteRule?: str

    deviceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulExternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider stateful external IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the external ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the external ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the external Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatefulInternalIPItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider stateful internal IP items0

    Attributes
    ----------
    deleteRule : str, default is Undefined, optional
        , A value that prescribes what should happen to the internal ip when the VM instance is deleted. The available options are NEVER and ON_PERMANENT_INSTANCE_DELETION. NEVER - detach the ip when the VM is deleted, but do not delete the ip. ON_PERMANENT_INSTANCE_DELETION will delete the internal ip when the VM is permanently deleted from the instance group.
    interfaceName : str, default is Undefined, optional
        , The network interface name of the internal Ip. Possible value: nic0
    """


    deleteRule?: str

    interfaceName?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider status items0

    Attributes
    ----------
    allInstancesConfig : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0AllInstancesConfigItems0], default is Undefined, optional
        Status of all-instances configuration on the group.
    isStable : bool, default is Undefined, optional
        A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.
    stateful : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0], default is Undefined, optional
        Stateful status of the given Instance Group Manager.
    versionTarget : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0VersionTargetItems0], default is Undefined, optional
        A status of consistency of Instances' versions with their target version specified by version field on Instance Group Manager.
    """


    allInstancesConfig?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0AllInstancesConfigItems0]

    isStable?: bool

    stateful?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0]

    versionTarget?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0VersionTargetItems0]


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0AllInstancesConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider status items0 all instances config items0

    Attributes
    ----------
    currentRevision : str, default is Undefined, optional
        Current all-instances configuration revision. This value is in RFC3339 text format.
    effective : bool, default is Undefined, optional
        A bit indicating whether this configuration has been applied to all managed instances in the group.
    """


    currentRevision?: str

    effective?: bool


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider status items0 stateful items0

    Attributes
    ----------
    hasStatefulConfig : bool, default is Undefined, optional
        A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful config even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.
    perInstanceConfigs : [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0PerInstanceConfigsItems0], default is Undefined, optional
        Status of per-instance configs on the instances.
    """


    hasStatefulConfig?: bool

    perInstanceConfigs?: [ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0PerInstanceConfigsItems0]


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0StatefulItems0PerInstanceConfigsItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider status items0 stateful items0 per instance configs items0

    Attributes
    ----------
    allEffective : bool, default is Undefined, optional
        A bit indicating if all of the group's per-instance configs (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs.
    """


    allEffective?: bool


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderStatusItems0VersionTargetItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider status items0 version target items0

    Attributes
    ----------
    isReached : bool, default is Undefined, optional
        is reached
    """


    isReached?: bool


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderUpdatePolicy:
    r"""
    The update policy for this managed instance group. Structure is documented below. For more information, see the official documentation and API.

    Attributes
    ----------
    maxSurgeFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer. Conflicts with max_surge_percent. Both cannot be 0.
    maxSurgePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%. Conflicts with max_surge_fixed.
    maxUnavailableFixed : float, default is Undefined, optional
        , Specifies a fixed number of VM instances. This must be a positive integer.
    maxUnavailablePercent : float, default is Undefined, optional
        , Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%..
    minimalAction : str, default is Undefined, optional
        - Minimal action to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to update without stopping instances, RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a REFRESH, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.
    mostDisruptiveAllowedAction : str, default is Undefined, optional
        - Most disruptive action that is allowed to be taken on an instance. You can specify either NONE to forbid any actions, REFRESH to allow actions that do not need instance restart, RESTART to allow actions that can be applied without instance replacing or REPLACE to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.
    replacementMethod : str, default is Undefined, optional
        , The instance replacement method for managed instance groups. Valid values are: "RECREATE", "SUBSTITUTE". If SUBSTITUTE (default), the group replaces VM instances with new instances that have randomly generated names. If RECREATE, instance names are preserved.  You must also set max_unavailable_fixed or max_unavailable_percent to be greater than 0.
    $type : str, default is Undefined, optional
        - The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls).
    """


    maxSurgeFixed?: float

    maxSurgePercent?: float

    maxUnavailableFixed?: float

    maxUnavailablePercent?: float

    minimalAction?: str

    mostDisruptiveAllowedAction?: str

    replacementMethod?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0:
    r"""
    compute gcp upbound io v1beta2 instance group manager status at provider version items0

    Attributes
    ----------
    instanceTemplate : str, default is Undefined, optional
        - The full URL to an instance template from which all new instances of this version will be created. It is recommended to reference instance templates through their unique id (self_link_unique attribute).
    name : str, default is Undefined, optional
        - Version name.
    targetSize : ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0TargetSize, default is Undefined, optional
        target size
    """


    instanceTemplate?: str

    name?: str

    targetSize?: ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0TargetSize


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusAtProviderVersionItems0TargetSize:
    r"""
    - The number of instances calculated as a fixed number or a percentage depending on the settings. Structure is documented below.

    Attributes
    ----------
    fixed : float, default is Undefined, optional
        , The number of instances which are managed for this version. Conflicts with percent.
    percent : float, default is Undefined, optional
        , The number of instances (calculated as percentage) which are managed for this version. Conflicts with fixed.
        Note that when using percent, rounding will be in favor of explicitly set target_size values; a managed instance group with 2 instances and 2 versions,
        one of which has a target_size.percent of 60 will create 2 instances of that version.
    """


    fixed?: float

    percent?: float


schema ComputeGcpUpboundIoV1beta2InstanceGroupManagerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


