"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPNTunnel:
    r"""
    VPNTunnel is the Schema for the VPNTunnels API. VPN tunnel resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPNTunnel", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1VPNTunnelSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1VPNTunnelStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "VPNTunnel" = "VPNTunnel"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1VPNTunnelSpec

    status?: ComputeGcpUpboundIoV1beta1VPNTunnelStatus


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpec:
    r"""
    VPNTunnelSpec defines the desired state of VPNTunnel

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 v p n tunnel spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    ikeVersion : float, default is Undefined, optional
        IKE protocol version to use when establishing the VPN tunnel with
        peer VPN gateway.
        Acceptable IKE versions are 1 or 2. Default version is 2.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this VpnTunnel.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    localTrafficSelector : [str], default is Undefined, optional
        Local traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    peerExternalGateway : str, default is Undefined, optional
        URL of the peer side external VPN gateway to which this VPN tunnel is connected.
    peerExternalGatewayInterface : float, default is Undefined, optional
        The interface ID of the external VPN gateway to which this VPN tunnel is connected.
    peerExternalGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRef, default is Undefined, optional
        peer external gateway ref
    peerExternalGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelector, default is Undefined, optional
        peer external gateway selector
    peerGcpGateway : str, default is Undefined, optional
        URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
        If provided, the VPN tunnel will automatically use the same vpn_gateway_interface
        ID in the peer GCP VPN gateway.
        This field must reference a google_compute_ha_vpn_gateway resource.
    peerIp : str, default is Undefined, optional
        IP address of the peer VPN gateway. Only IPv4 is supported.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        The region where the tunnel is located. If unset, is set to the region of target_vpn_gateway.
    remoteTrafficSelector : [str], default is Undefined, optional
        Remote traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    router : str, default is Undefined, optional
        URL of router resource to be used for dynamic routing.
    routerRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelector, default is Undefined, optional
        router selector
    sharedSecretSecretRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderSharedSecretSecretRef, default is Undefined, optional
        shared secret secret ref
    targetVpnGateway : str, default is Undefined, optional
        URL of the Target VPN gateway with which this VPN tunnel is
        associated.
    targetVpnGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRef, default is Undefined, optional
        target vpn gateway ref
    targetVpnGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelector, default is Undefined, optional
        target vpn gateway selector
    vpnGateway : str, default is Undefined, optional
        URL of the VPN gateway with which this VPN tunnel is associated.
        This must be used if a High Availability VPN gateway resource is created.
        This field must reference a google_compute_ha_vpn_gateway resource.
    vpnGatewayInterface : float, default is Undefined, optional
        The interface ID of the VPN gateway with which this VPN tunnel is associated.
    vpnGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRef, default is Undefined, optional
        vpn gateway ref
    vpnGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelector, default is Undefined, optional
        vpn gateway selector
    """


    description?: str

    ikeVersion?: float

    labels?: {str:str}

    localTrafficSelector?: [str]

    peerExternalGateway?: str

    peerExternalGatewayInterface?: float

    peerExternalGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRef

    peerExternalGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelector

    peerGcpGateway?: str

    peerIp?: str

    project?: str

    region: str

    remoteTrafficSelector?: [str]

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelector

    sharedSecretSecretRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderSharedSecretSecretRef

    targetVpnGateway?: str

    targetVpnGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRef

    targetVpnGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelector

    vpnGateway?: str

    vpnGatewayInterface?: float

    vpnGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRef

    vpnGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelector


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRef:
    r"""
    Reference to a ExternalVPNGateway in compute to populate peerExternalGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelector:
    r"""
    Selector for a ExternalVPNGateway in compute to populate peerExternalGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderPeerExternalGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRef:
    r"""
    Reference to a Router in compute to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelector:
    r"""
    Selector for a Router in compute to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderRouterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderSharedSecretSecretRef:
    r"""
    Shared secret used to set the secure session between the Cloud VPN
    gateway and the peer VPN gateway.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRef:
    r"""
    Reference to a VPNGateway in compute to populate targetVpnGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelector:
    r"""
    Selector for a VPNGateway in compute to populate targetVpnGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderTargetVpnGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRef:
    r"""
    Reference to a HaVPNGateway in compute to populate vpnGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelector:
    r"""
    Selector for a HaVPNGateway in compute to populate vpnGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecForProviderVpnGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    ikeVersion : float, default is Undefined, optional
        IKE protocol version to use when establishing the VPN tunnel with
        peer VPN gateway.
        Acceptable IKE versions are 1 or 2. Default version is 2.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this VpnTunnel.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    localTrafficSelector : [str], default is Undefined, optional
        Local traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    peerExternalGateway : str, default is Undefined, optional
        URL of the peer side external VPN gateway to which this VPN tunnel is connected.
    peerExternalGatewayInterface : float, default is Undefined, optional
        The interface ID of the external VPN gateway to which this VPN tunnel is connected.
    peerExternalGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRef, default is Undefined, optional
        peer external gateway ref
    peerExternalGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelector, default is Undefined, optional
        peer external gateway selector
    peerGcpGateway : str, default is Undefined, optional
        URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
        If provided, the VPN tunnel will automatically use the same vpn_gateway_interface
        ID in the peer GCP VPN gateway.
        This field must reference a google_compute_ha_vpn_gateway resource.
    peerIp : str, default is Undefined, optional
        IP address of the peer VPN gateway. Only IPv4 is supported.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteTrafficSelector : [str], default is Undefined, optional
        Remote traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    router : str, default is Undefined, optional
        URL of router resource to be used for dynamic routing.
    routerRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelector, default is Undefined, optional
        router selector
    sharedSecretSecretRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderSharedSecretSecretRef, default is Undefined, required
        shared secret secret ref
    targetVpnGateway : str, default is Undefined, optional
        URL of the Target VPN gateway with which this VPN tunnel is
        associated.
    targetVpnGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRef, default is Undefined, optional
        target vpn gateway ref
    targetVpnGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelector, default is Undefined, optional
        target vpn gateway selector
    vpnGateway : str, default is Undefined, optional
        URL of the VPN gateway with which this VPN tunnel is associated.
        This must be used if a High Availability VPN gateway resource is created.
        This field must reference a google_compute_ha_vpn_gateway resource.
    vpnGatewayInterface : float, default is Undefined, optional
        The interface ID of the VPN gateway with which this VPN tunnel is associated.
    vpnGatewayRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRef, default is Undefined, optional
        vpn gateway ref
    vpnGatewaySelector : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelector, default is Undefined, optional
        vpn gateway selector
    """


    description?: str

    ikeVersion?: float

    labels?: {str:str}

    localTrafficSelector?: [str]

    peerExternalGateway?: str

    peerExternalGatewayInterface?: float

    peerExternalGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRef

    peerExternalGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelector

    peerGcpGateway?: str

    peerIp?: str

    project?: str

    remoteTrafficSelector?: [str]

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelector

    sharedSecretSecretRef: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderSharedSecretSecretRef

    targetVpnGateway?: str

    targetVpnGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRef

    targetVpnGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelector

    vpnGateway?: str

    vpnGatewayInterface?: float

    vpnGatewayRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRef

    vpnGatewaySelector?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelector


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRef:
    r"""
    Reference to a ExternalVPNGateway in compute to populate peerExternalGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelector:
    r"""
    Selector for a ExternalVPNGateway in compute to populate peerExternalGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderPeerExternalGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRef:
    r"""
    Reference to a Router in compute to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelector:
    r"""
    Selector for a Router in compute to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderRouterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderSharedSecretSecretRef:
    r"""
    Shared secret used to set the secure session between the Cloud VPN
    gateway and the peer VPN gateway.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRef:
    r"""
    Reference to a VPNGateway in compute to populate targetVpnGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelector:
    r"""
    Selector for a VPNGateway in compute to populate targetVpnGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderTargetVpnGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRef:
    r"""
    Reference to a HaVPNGateway in compute to populate vpnGateway.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewayRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelector:
    r"""
    Selector for a HaVPNGateway in compute to populate vpnGateway.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelectorPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecInitProviderVpnGatewaySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1VPNTunnelSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1VPNTunnelStatus:
    r"""
    VPNTunnelStatus defines the observed state of VPNTunnel.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1VPNTunnelStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1VPNTunnelStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1VPNTunnelStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1VPNTunnelStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1VPNTunnelStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 v p n tunnel status at provider

    Attributes
    ----------
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    detailedStatus : str, default is Undefined, optional
        Detailed status message for the VPN tunnel.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/vpnTunnels/{{name}}
    ikeVersion : float, default is Undefined, optional
        IKE protocol version to use when establishing the VPN tunnel with
        peer VPN gateway.
        Acceptable IKE versions are 1 or 2. Default version is 2.
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this VpnTunnel.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    localTrafficSelector : [str], default is Undefined, optional
        Local traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    peerExternalGateway : str, default is Undefined, optional
        URL of the peer side external VPN gateway to which this VPN tunnel is connected.
    peerExternalGatewayInterface : float, default is Undefined, optional
        The interface ID of the external VPN gateway to which this VPN tunnel is connected.
    peerGcpGateway : str, default is Undefined, optional
        URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.
        If provided, the VPN tunnel will automatically use the same vpn_gateway_interface
        ID in the peer GCP VPN gateway.
        This field must reference a google_compute_ha_vpn_gateway resource.
    peerIp : str, default is Undefined, optional
        IP address of the peer VPN gateway. Only IPv4 is supported.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region where the tunnel is located. If unset, is set to the region of target_vpn_gateway.
    remoteTrafficSelector : [str], default is Undefined, optional
        Remote traffic selector to use when establishing the VPN tunnel with
        peer VPN gateway. The value should be a CIDR formatted string,
        for example 192.168.0.0/16. The ranges should be disjoint.
        Only IPv4 is supported.
    router : str, default is Undefined, optional
        URL of router resource to be used for dynamic routing.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    sharedSecretHash : str, default is Undefined, optional
        Hash of the shared secret.
    targetVpnGateway : str, default is Undefined, optional
        URL of the Target VPN gateway with which this VPN tunnel is
        associated.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    tunnelId : str, default is Undefined, optional
        The unique identifier for the resource. This identifier is defined by the server.
    vpnGateway : str, default is Undefined, optional
        URL of the VPN gateway with which this VPN tunnel is associated.
        This must be used if a High Availability VPN gateway resource is created.
        This field must reference a google_compute_ha_vpn_gateway resource.
    vpnGatewayInterface : float, default is Undefined, optional
        The interface ID of the VPN gateway with which this VPN tunnel is associated.
    """


    creationTimestamp?: str

    description?: str

    detailedStatus?: str

    effectiveLabels?: {str:str}

    id?: str

    ikeVersion?: float

    labelFingerprint?: str

    labels?: {str:str}

    localTrafficSelector?: [str]

    peerExternalGateway?: str

    peerExternalGatewayInterface?: float

    peerGcpGateway?: str

    peerIp?: str

    project?: str

    region?: str

    remoteTrafficSelector?: [str]

    router?: str

    selfLink?: str

    sharedSecretHash?: str

    targetVpnGateway?: str

    terraformLabels?: {str:str}

    tunnelId?: str

    vpnGateway?: str

    vpnGatewayInterface?: float


schema ComputeGcpUpboundIoV1beta1VPNTunnelStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


