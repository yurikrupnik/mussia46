"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TargetHTTPSProxy:
    r"""
    TargetHTTPSProxy is the Schema for the TargetHTTPSProxys API. Represents a TargetHttpsProxy resource, which is used by one or more global forwarding rule to route incoming HTTPS requests to a URL map.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TargetHTTPSProxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "TargetHTTPSProxy" = "TargetHTTPSProxy"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpec

    status?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatus


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpec:
    r"""
    TargetHTTPSProxySpec defines the desired state of TargetHTTPSProxy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProvider:
    r"""
    compute gcp upbound io v1beta1 target HTTPS proxy spec for provider

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        Certificate manager certificates only apply when the load balancing scheme is set to INTERNAL_MANAGED.
        For EXTERNAL and EXTERNAL_MANAGED, use certificate_map instead.
        sslCertificates and certificateManagerCertificates fields can not be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field is only supported for EXTERNAL and EXTERNAL_MANAGED load balancing schemes.
        For INTERNAL_MANAGED, use certificate_manager_certificates instead.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    description : str, default is Undefined, optional
        An optional description of this resource.
    httpKeepAliveTimeoutSec : float, default is Undefined, optional
        Specifies how long to keep a connection open, after completing a response,
        while there is no matching traffic (in seconds). If an HTTP keepalive is
        not specified, a default value (610 seconds) will be used. For Global
        external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
        the maximum allowed value is 1200 seconds. For Global external HTTP(S)
        load balancer (classic), this option is not available publicly.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyBind : bool, default is Undefined, optional
        This field only applies when the forwarding rule that references
        this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
    quicOverride : str, default is Undefined, optional
        Specifies the QUIC override policy for this resource. This determines
        whether the load balancer will attempt to negotiate QUIC with clients
        or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
        specified, Google manages whether QUIC is used.
        Default value is NONE.
        Possible values are: NONE, ENABLE, DISABLE.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
        sslCertificates and certificateManagerCertificates can not be defined together.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to SSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    tlsEarlyData : str, default is Undefined, optional
        Specifies whether TLS 1.3 0-RTT Data (“Early Data”) should be accepted for this service.
        Early Data allows a TLS resumption handshake to include the initial application payload
        (a HTTP request) alongside the handshake, reducing the effective round trips to “zero”.
        This applies to TLS 1.3 connections over TCP (HTTP/2) as well as over UDP (QUIC/h3).
        Possible values are: STRICT, PERMISSIVE, DISABLED.
    urlMap : str, default is Undefined, optional
        A reference to the UrlMap resource that defines the mapping from URL
        to the BackendService.
    urlMapRef : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRef, default is Undefined, optional
        url map ref
    urlMapSelector : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelector, default is Undefined, optional
        url map selector
    """


    certificateManagerCertificates?: [str]

    certificateMap?: str

    description?: str

    httpKeepAliveTimeoutSec?: float

    project?: str

    proxyBind?: bool

    quicOverride?: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelector

    sslPolicy?: str

    tlsEarlyData?: str

    urlMap?: str

    urlMapRef?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRef

    urlMapSelector?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelector


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelector:
    r"""
    Selector for a list of SSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRef:
    r"""
    Reference to a URLMap in compute to populate urlMap.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelector:
    r"""
    Selector for a URLMap in compute to populate urlMap.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecForProviderURLMapSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        Certificate manager certificates only apply when the load balancing scheme is set to INTERNAL_MANAGED.
        For EXTERNAL and EXTERNAL_MANAGED, use certificate_map instead.
        sslCertificates and certificateManagerCertificates fields can not be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field is only supported for EXTERNAL and EXTERNAL_MANAGED load balancing schemes.
        For INTERNAL_MANAGED, use certificate_manager_certificates instead.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    description : str, default is Undefined, optional
        An optional description of this resource.
    httpKeepAliveTimeoutSec : float, default is Undefined, optional
        Specifies how long to keep a connection open, after completing a response,
        while there is no matching traffic (in seconds). If an HTTP keepalive is
        not specified, a default value (610 seconds) will be used. For Global
        external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
        the maximum allowed value is 1200 seconds. For Global external HTTP(S)
        load balancer (classic), this option is not available publicly.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyBind : bool, default is Undefined, optional
        This field only applies when the forwarding rule that references
        this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
    quicOverride : str, default is Undefined, optional
        Specifies the QUIC override policy for this resource. This determines
        whether the load balancer will attempt to negotiate QUIC with clients
        or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
        specified, Google manages whether QUIC is used.
        Default value is NONE.
        Possible values are: NONE, ENABLE, DISABLE.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
        sslCertificates and certificateManagerCertificates can not be defined together.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to SSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    tlsEarlyData : str, default is Undefined, optional
        Specifies whether TLS 1.3 0-RTT Data (“Early Data”) should be accepted for this service.
        Early Data allows a TLS resumption handshake to include the initial application payload
        (a HTTP request) alongside the handshake, reducing the effective round trips to “zero”.
        This applies to TLS 1.3 connections over TCP (HTTP/2) as well as over UDP (QUIC/h3).
        Possible values are: STRICT, PERMISSIVE, DISABLED.
    urlMap : str, default is Undefined, optional
        A reference to the UrlMap resource that defines the mapping from URL
        to the BackendService.
    urlMapRef : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRef, default is Undefined, optional
        url map ref
    urlMapSelector : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelector, default is Undefined, optional
        url map selector
    """


    certificateManagerCertificates?: [str]

    certificateMap?: str

    description?: str

    httpKeepAliveTimeoutSec?: float

    project?: str

    proxyBind?: bool

    quicOverride?: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelector

    sslPolicy?: str

    tlsEarlyData?: str

    urlMap?: str

    urlMapRef?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRef

    urlMapSelector?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelector


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelector:
    r"""
    Selector for a list of SSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRef:
    r"""
    Reference to a URLMap in compute to populate urlMap.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelector:
    r"""
    Selector for a URLMap in compute to populate urlMap.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelectorPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecInitProviderURLMapSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatus:
    r"""
    TargetHTTPSProxyStatus defines the observed state of TargetHTTPSProxy.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 target HTTPS proxy status at provider

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        Certificate manager certificates only apply when the load balancing scheme is set to INTERNAL_MANAGED.
        For EXTERNAL and EXTERNAL_MANAGED, use certificate_map instead.
        sslCertificates and certificateManagerCertificates fields can not be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    certificateMap : str, default is Undefined, optional
        A reference to the CertificateMap resource uri that identifies a certificate map
        associated with the given target proxy. This field is only supported for EXTERNAL and EXTERNAL_MANAGED load balancing schemes.
        For INTERNAL_MANAGED, use certificate_manager_certificates instead.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    httpKeepAliveTimeoutSec : float, default is Undefined, optional
        Specifies how long to keep a connection open, after completing a response,
        while there is no matching traffic (in seconds). If an HTTP keepalive is
        not specified, a default value (610 seconds) will be used. For Global
        external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
        the maximum allowed value is 1200 seconds. For Global external HTTP(S)
        load balancer (classic), this option is not available publicly.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/targetHttpsProxies/{{name}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyBind : bool, default is Undefined, optional
        This field only applies when the forwarding rule that references
        this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
    proxyId : float, default is Undefined, optional
        The unique identifier for the resource.
    quicOverride : str, default is Undefined, optional
        Specifies the QUIC override policy for this resource. This determines
        whether the load balancer will attempt to negotiate QUIC with clients
        or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
        specified, Google manages whether QUIC is used.
        Default value is NONE.
        Possible values are: NONE, ENABLE, DISABLE.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
        sslCertificates and certificateManagerCertificates can not be defined together.
    sslPolicy : str, default is Undefined, optional
        A reference to the SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    tlsEarlyData : str, default is Undefined, optional
        Specifies whether TLS 1.3 0-RTT Data (“Early Data”) should be accepted for this service.
        Early Data allows a TLS resumption handshake to include the initial application payload
        (a HTTP request) alongside the handshake, reducing the effective round trips to “zero”.
        This applies to TLS 1.3 connections over TCP (HTTP/2) as well as over UDP (QUIC/h3).
        Possible values are: STRICT, PERMISSIVE, DISABLED.
    urlMap : str, default is Undefined, optional
        A reference to the UrlMap resource that defines the mapping from URL
        to the BackendService.
    """


    certificateManagerCertificates?: [str]

    certificateMap?: str

    creationTimestamp?: str

    description?: str

    httpKeepAliveTimeoutSec?: float

    id?: str

    project?: str

    proxyBind?: bool

    proxyId?: float

    quicOverride?: str

    selfLink?: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslPolicy?: str

    tlsEarlyData?: str

    urlMap?: str


schema ComputeGcpUpboundIoV1beta1TargetHTTPSProxyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


