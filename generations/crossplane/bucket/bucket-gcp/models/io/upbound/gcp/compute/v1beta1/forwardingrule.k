"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ForwardingRule:
    r"""
    ForwardingRule is the Schema for the ForwardingRules API. A ForwardingRule resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ForwardingRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1ForwardingRuleSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1ForwardingRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "ForwardingRule" = "ForwardingRule"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1ForwardingRuleSpec

    status?: ComputeGcpUpboundIoV1beta1ForwardingRuleStatus


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpec:
    r"""
    ForwardingRuleSpec defines the desired state of ForwardingRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 forwarding rule spec for provider

    Attributes
    ----------
    allPorts : bool, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The allPorts field has the following limitations:
    allowGlobalAccess : bool, default is Undefined, optional
        This field is used along with the backend_service field for
        internal load balancing or with the target field for internal
        TargetInstance.
        If the field is set to TRUE, clients can access ILB from all
        regions.
        Otherwise only allows access from clients in the same region as the
        internal load balancer.
    allowPscGlobalAccess : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
    backendService : str, default is Undefined, optional
        Identifies the backend service to which the forwarding rule sends traffic.
        Required for Internal TCP/UDP Load Balancing and Network Load Balancing;
        must be omitted for all other load balancer types.
    backendServiceRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelector, default is Undefined, optional
        backend service selector
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target or backendService.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipAddressRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        A Forwarding Rule with protocol L3_DEFAULT can attach with target instance or
        backend service with UNSPECIFIED protocol.
        A forwarding rule with "L3_DEFAULT" IPProtocal cannot be attached to a backend service with TCP or UDP.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP, L3_DEFAULT.
    ipVersion : str, default is Undefined, optional
        The IP address version that will be used by this forwarding rule.
        Valid options are IPV4 and IPV6.
        If not set, the IPv4 address will be used by default.
        Possible values are: IPV4, IPV6.
    isMirroringCollector : bool, default is Undefined, optional
        Indicates whether or not this load balancer can be used as a collector for
        packet mirroring. To prevent mirroring loops, instances behind this
        load balancer will not have their traffic mirrored even if a
        PacketMirroring rule applies to them.
        This can only be set to true for load balancers that have their
        loadBalancingScheme set to INTERNAL.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL, INTERNAL_MANAGED.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    networkRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    networkTier : str, default is Undefined, optional
        This signifies the networking tier used for configuring
        this load balancer and can only take the following values:
        PREMIUM, STANDARD.
        For regional ForwardingRule, the valid values are PREMIUM and
        STANDARD. For GlobalForwardingRule, the valid value is
        PREMIUM.
        If this field is not specified, it is assumed to be PREMIUM.
        If IPAddress is specified, this value must be equal to the
        networkTier of the Address.
        Possible values are: PREMIUM, STANDARD.
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The portRange field has the following limitations:
    ports : [str], default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The ports field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    recreateClosedPsc : bool, default is Undefined, optional
        this is used in psc consumer forwardingrule to make provider recreate the forwardingrule when the status is closed
    region : str, default is Undefined, required
        A reference to the region where the regional forwarding rule resides.
        This field is not applicable to global forwarding rules.
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    serviceLabel : str, default is Undefined, optional
        An optional prefix to the service name for this Forwarding Rule.
        If specified, will be the first label of the fully qualified service
        name.
        The label must be 1-63 characters long, and comply with RFC1035.
        Specifically, the label must be 1-63 characters long and match the
        regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters
        must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
        This field is only used for INTERNAL load balancing.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    subnetworkRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    target : str, default is Undefined, optional
        is set to targetGrpcProxy and
        validateForProxyless is set to true, the
        IPAddress should be set to 0.0.0.0.
    targetRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelector, default is Undefined, optional
        target selector
    """


    allPorts?: bool

    allowGlobalAccess?: bool

    allowPscGlobalAccess?: bool

    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelector

    description?: str

    ipAddress?: str

    ipAddressRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRef

    ipAddressSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelector

    ipProtocol?: str

    ipVersion?: str

    isMirroringCollector?: bool

    labels?: {str:str}

    loadBalancingScheme?: str

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelector

    networkTier?: str

    noAutomateDnsZone?: bool

    portRange?: str

    ports?: [str]

    project?: str

    recreateClosedPsc?: bool

    region: str

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0]

    serviceLabel?: str

    sourceIpRanges?: [str]

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelector

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRef:
    r"""
    Reference to a RegionBackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelector:
    r"""
    Selector for a RegionBackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRef:
    r"""
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelector:
    r"""
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderIPAddressSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 forwarding rule spec for provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    service : str, default is Undefined, optional
        Service Directory service to register the forwarding rule under.
    """


    namespace?: str

    service?: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRef:
    r"""
    Reference to a RegionTargetHTTPProxy in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelector:
    r"""
    Selector for a RegionTargetHTTPProxy in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecForProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allPorts : bool, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The allPorts field has the following limitations:
    allowGlobalAccess : bool, default is Undefined, optional
        This field is used along with the backend_service field for
        internal load balancing or with the target field for internal
        TargetInstance.
        If the field is set to TRUE, clients can access ILB from all
        regions.
        Otherwise only allows access from clients in the same region as the
        internal load balancer.
    allowPscGlobalAccess : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
    backendService : str, default is Undefined, optional
        Identifies the backend service to which the forwarding rule sends traffic.
        Required for Internal TCP/UDP Load Balancing and Network Load Balancing;
        must be omitted for all other load balancer types.
    backendServiceRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelector, default is Undefined, optional
        backend service selector
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target or backendService.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipAddressRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        A Forwarding Rule with protocol L3_DEFAULT can attach with target instance or
        backend service with UNSPECIFIED protocol.
        A forwarding rule with "L3_DEFAULT" IPProtocal cannot be attached to a backend service with TCP or UDP.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP, L3_DEFAULT.
    ipVersion : str, default is Undefined, optional
        The IP address version that will be used by this forwarding rule.
        Valid options are IPV4 and IPV6.
        If not set, the IPv4 address will be used by default.
        Possible values are: IPV4, IPV6.
    isMirroringCollector : bool, default is Undefined, optional
        Indicates whether or not this load balancer can be used as a collector for
        packet mirroring. To prevent mirroring loops, instances behind this
        load balancer will not have their traffic mirrored even if a
        PacketMirroring rule applies to them.
        This can only be set to true for load balancers that have their
        loadBalancingScheme set to INTERNAL.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL, INTERNAL_MANAGED.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    networkRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    networkTier : str, default is Undefined, optional
        This signifies the networking tier used for configuring
        this load balancer and can only take the following values:
        PREMIUM, STANDARD.
        For regional ForwardingRule, the valid values are PREMIUM and
        STANDARD. For GlobalForwardingRule, the valid value is
        PREMIUM.
        If this field is not specified, it is assumed to be PREMIUM.
        If IPAddress is specified, this value must be equal to the
        networkTier of the Address.
        Possible values are: PREMIUM, STANDARD.
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The portRange field has the following limitations:
    ports : [str], default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The ports field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    recreateClosedPsc : bool, default is Undefined, optional
        this is used in psc consumer forwardingrule to make provider recreate the forwardingrule when the status is closed
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    serviceLabel : str, default is Undefined, optional
        An optional prefix to the service name for this Forwarding Rule.
        If specified, will be the first label of the fully qualified service
        name.
        The label must be 1-63 characters long, and comply with RFC1035.
        Specifically, the label must be 1-63 characters long and match the
        regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters
        must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
        This field is only used for INTERNAL load balancing.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    subnetworkRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    target : str, default is Undefined, optional
        is set to targetGrpcProxy and
        validateForProxyless is set to true, the
        IPAddress should be set to 0.0.0.0.
    targetRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelector, default is Undefined, optional
        target selector
    """


    allPorts?: bool

    allowGlobalAccess?: bool

    allowPscGlobalAccess?: bool

    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelector

    description?: str

    ipAddress?: str

    ipAddressRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRef

    ipAddressSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelector

    ipProtocol?: str

    ipVersion?: str

    isMirroringCollector?: bool

    labels?: {str:str}

    loadBalancingScheme?: str

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelector

    networkTier?: str

    noAutomateDnsZone?: bool

    portRange?: str

    ports?: [str]

    project?: str

    recreateClosedPsc?: bool

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0]

    serviceLabel?: str

    sourceIpRanges?: [str]

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelector

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRef:
    r"""
    Reference to a RegionBackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelector:
    r"""
    Selector for a RegionBackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRef:
    r"""
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelector:
    r"""
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderIPAddressSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 forwarding rule spec init provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    service : str, default is Undefined, optional
        Service Directory service to register the forwarding rule under.
    """


    namespace?: str

    service?: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRef:
    r"""
    Reference to a RegionTargetHTTPProxy in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelector:
    r"""
    Selector for a RegionTargetHTTPProxy in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecInitProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleStatus:
    r"""
    ForwardingRuleStatus defines the observed state of ForwardingRule.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1ForwardingRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1ForwardingRuleStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 forwarding rule status at provider

    Attributes
    ----------
    allPorts : bool, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The allPorts field has the following limitations:
    allowGlobalAccess : bool, default is Undefined, optional
        This field is used along with the backend_service field for
        internal load balancing or with the target field for internal
        TargetInstance.
        If the field is set to TRUE, clients can access ILB from all
        regions.
        Otherwise only allows access from clients in the same region as the
        internal load balancer.
    allowPscGlobalAccess : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether the PSC endpoint can be accessed from another region.
    backendService : str, default is Undefined, optional
        Identifies the backend service to which the forwarding rule sends traffic.
        Required for Internal TCP/UDP Load Balancing and Network Load Balancing;
        must be omitted for all other load balancer types.
    baseForwardingRule : str, default is Undefined, optional
        [Output Only] The URL for the corresponding base Forwarding Rule. By base Forwarding Rule, we mean the Forwarding Rule that has the same IP address, protocol, and port settings with the current Forwarding Rule, but without sourceIPRanges specified. Always empty if the current Forwarding Rule does not have sourceIPRanges specified.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    forwardingRuleId : float, default is Undefined, optional
        The unique identifier number for the resource. This identifier is defined by the server.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/forwardingRules/{{name}}
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target or backendService.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        A Forwarding Rule with protocol L3_DEFAULT can attach with target instance or
        backend service with UNSPECIFIED protocol.
        A forwarding rule with "L3_DEFAULT" IPProtocal cannot be attached to a backend service with TCP or UDP.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP, L3_DEFAULT.
    ipVersion : str, default is Undefined, optional
        The IP address version that will be used by this forwarding rule.
        Valid options are IPV4 and IPV6.
        If not set, the IPv4 address will be used by default.
        Possible values are: IPV4, IPV6.
    isMirroringCollector : bool, default is Undefined, optional
        Indicates whether or not this load balancer can be used as a collector for
        packet mirroring. To prevent mirroring loops, instances behind this
        load balancer will not have their traffic mirrored even if a
        PacketMirroring rule applies to them.
        This can only be set to true for load balancers that have their
        loadBalancingScheme set to INTERNAL.
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL, INTERNAL_MANAGED.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    networkTier : str, default is Undefined, optional
        This signifies the networking tier used for configuring
        this load balancer and can only take the following values:
        PREMIUM, STANDARD.
        For regional ForwardingRule, the valid values are PREMIUM and
        STANDARD. For GlobalForwardingRule, the valid value is
        PREMIUM.
        If this field is not specified, it is assumed to be PREMIUM.
        If IPAddress is specified, this value must be equal to the
        networkTier of the Address.
        Possible values are: PREMIUM, STANDARD.
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The portRange field has the following limitations:
    ports : [str], default is Undefined, optional
        The ports, portRange, and allPorts fields are mutually exclusive.
        Only packets addressed to ports in the specified range will be forwarded
        to the backends configured with this forwarding rule.
        The ports field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pscConnectionId : str, default is Undefined, optional
        The PSC connection id of the PSC Forwarding Rule.
    pscConnectionStatus : str, default is Undefined, optional
        The PSC connection status of the PSC Forwarding Rule. Possible values: STATUS_UNSPECIFIED, PENDING, ACCEPTED, REJECTED, CLOSED
    recreateClosedPsc : bool, default is Undefined, optional
        this is used in psc consumer forwardingrule to make provider recreate the forwardingrule when the status is closed
    region : str, default is Undefined, optional
        A reference to the region where the regional forwarding rule resides.
        This field is not applicable to global forwarding rules.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    serviceLabel : str, default is Undefined, optional
        An optional prefix to the service name for this Forwarding Rule.
        If specified, will be the first label of the fully qualified service
        name.
        The label must be 1-63 characters long, and comply with RFC1035.
        Specifically, the label must be 1-63 characters long and match the
        regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters
        must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
        This field is only used for INTERNAL load balancing.
    serviceName : str, default is Undefined, optional
        The internal fully qualified service name for this Forwarding Rule.
        This field is only used for INTERNAL load balancing.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    target : str, default is Undefined, optional
        is set to targetGrpcProxy and
        validateForProxyless is set to true, the
        IPAddress should be set to 0.0.0.0.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    allPorts?: bool

    allowGlobalAccess?: bool

    allowPscGlobalAccess?: bool

    backendService?: str

    baseForwardingRule?: str

    creationTimestamp?: str

    description?: str

    effectiveLabels?: {str:str}

    forwardingRuleId?: float

    id?: str

    ipAddress?: str

    ipProtocol?: str

    ipVersion?: str

    isMirroringCollector?: bool

    labelFingerprint?: str

    labels?: {str:str}

    loadBalancingScheme?: str

    network?: str

    networkTier?: str

    noAutomateDnsZone?: bool

    portRange?: str

    ports?: [str]

    project?: str

    pscConnectionId?: str

    pscConnectionStatus?: str

    recreateClosedPsc?: bool

    region?: str

    selfLink?: str

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0]

    serviceLabel?: str

    serviceName?: str

    sourceIpRanges?: [str]

    subnetwork?: str

    target?: str

    terraformLabels?: {str:str}


schema ComputeGcpUpboundIoV1beta1ForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 forwarding rule status at provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    service : str, default is Undefined, optional
        Service Directory service to register the forwarding rule under.
    """


    namespace?: str

    service?: str


schema ComputeGcpUpboundIoV1beta1ForwardingRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


