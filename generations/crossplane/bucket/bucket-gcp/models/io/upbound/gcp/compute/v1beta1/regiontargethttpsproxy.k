"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionTargetHTTPSProxy:
    r"""
    RegionTargetHTTPSProxy is the Schema for the RegionTargetHTTPSProxys API. Represents a RegionTargetHttpsProxy resource, which is used by one or more forwarding rules to route incoming HTTPS requests to a URL map.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionTargetHTTPSProxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RegionTargetHTTPSProxy" = "RegionTargetHTTPSProxy"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpec

    status?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatus


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpec:
    r"""
    RegionTargetHTTPSProxySpec defines the desired state of RegionTargetHTTPSProxy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProvider:
    r"""
    compute gcp upbound io v1beta1 region target HTTPS proxy spec for provider

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        sslCertificates and certificateManagerCertificates can't be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    description : str, default is Undefined, optional
        An optional description of this resource.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        The Region in which the created target https proxy should reside.
        If it is not provided, the provider region is used.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
        If you remove this field from your configuration at the same time as
        deleting or recreating a referenced ServerTlsPolicy resource, you will
        receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
        within the ServerTlsPolicy resource to avoid this.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
        sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to RegionSSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the Region SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    urlMap : str, default is Undefined, optional
        A reference to the RegionUrlMap resource that defines the mapping from URL
        to the RegionBackendService.
    urlMapRef : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRef, default is Undefined, optional
        url map ref
    urlMapSelector : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelector, default is Undefined, optional
        url map selector
    """


    certificateManagerCertificates?: [str]

    description?: str

    project?: str

    region: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelector

    sslPolicy?: str

    urlMap?: str

    urlMapRef?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRef

    urlMapSelector?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelector


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelector:
    r"""
    Selector for a list of RegionSSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRef:
    r"""
    Reference to a RegionURLMap in compute to populate urlMap.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelector:
    r"""
    Selector for a RegionURLMap in compute to populate urlMap.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecForProviderURLMapSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        sslCertificates and certificateManagerCertificates can't be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    description : str, default is Undefined, optional
        An optional description of this resource.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
        If you remove this field from your configuration at the same time as
        deleting or recreating a referenced ServerTlsPolicy resource, you will
        receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
        within the ServerTlsPolicy resource to avoid this.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
        sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
    sslCertificatesRefs : [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0], default is Undefined, optional
        References to RegionSSLCertificate in compute to populate sslCertificates.
    sslCertificatesSelector : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelector, default is Undefined, optional
        ssl certificates selector
    sslPolicy : str, default is Undefined, optional
        A reference to the Region SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    urlMap : str, default is Undefined, optional
        A reference to the RegionUrlMap resource that defines the mapping from URL
        to the RegionBackendService.
    urlMapRef : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRef, default is Undefined, optional
        url map ref
    urlMapSelector : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelector, default is Undefined, optional
        url map selector
    """


    certificateManagerCertificates?: [str]

    description?: str

    project?: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslCertificatesRefs?: [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0]

    sslCertificatesSelector?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelector

    sslPolicy?: str

    urlMap?: str

    urlMapRef?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRef

    urlMapSelector?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelector


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelector:
    r"""
    Selector for a list of RegionSSLCertificate in compute to populate sslCertificates.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderSslCertificatesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRef:
    r"""
    Reference to a RegionURLMap in compute to populate urlMap.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelector:
    r"""
    Selector for a RegionURLMap in compute to populate urlMap.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecInitProviderURLMapSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatus:
    r"""
    RegionTargetHTTPSProxyStatus defines the observed state of RegionTargetHTTPSProxy.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 region target HTTPS proxy status at provider

    Attributes
    ----------
    certificateManagerCertificates : [str], default is Undefined, optional
        URLs to certificate manager certificate resources that are used to authenticate connections between users and the load balancer.
        sslCertificates and certificateManagerCertificates can't be defined together.
        Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificates/{resourceName} or just the self_link projects/{project}/locations/{location}/certificates/{resourceName}
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/targetHttpsProxies/{{name}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    proxyId : float, default is Undefined, optional
        The unique identifier for the resource.
    region : str, default is Undefined, optional
        The Region in which the created target https proxy should reside.
        If it is not provided, the provider region is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    serverTlsPolicy : str, default is Undefined, optional
        A URL referring to a networksecurity.ServerTlsPolicy
        resource that describes how the proxy should authenticate inbound
        traffic. serverTlsPolicy only applies to a global TargetHttpsProxy
        attached to globalForwardingRules with the loadBalancingScheme
        set to INTERNAL_SELF_MANAGED or EXTERNAL or EXTERNAL_MANAGED.
        For details which ServerTlsPolicy resources are accepted with
        INTERNAL_SELF_MANAGED and which with EXTERNAL, EXTERNAL_MANAGED
        loadBalancingScheme consult ServerTlsPolicy documentation.
        If left blank, communications are not encrypted.
        If you remove this field from your configuration at the same time as
        deleting or recreating a referenced ServerTlsPolicy resource, you will
        receive a resourceInUseByAnotherResource error. Use lifecycle.create_before_destroy
        within the ServerTlsPolicy resource to avoid this.
    sslCertificates : [str], default is Undefined, optional
        URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer.
        At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates.
        sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
    sslPolicy : str, default is Undefined, optional
        A reference to the Region SslPolicy resource that will be associated with
        the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
        resource will not have any SSL policy configured.
    urlMap : str, default is Undefined, optional
        A reference to the RegionUrlMap resource that defines the mapping from URL
        to the RegionBackendService.
    """


    certificateManagerCertificates?: [str]

    creationTimestamp?: str

    description?: str

    id?: str

    project?: str

    proxyId?: float

    region?: str

    selfLink?: str

    serverTlsPolicy?: str

    sslCertificates?: [str]

    sslPolicy?: str

    urlMap?: str


schema ComputeGcpUpboundIoV1beta1RegionTargetHTTPSProxyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


