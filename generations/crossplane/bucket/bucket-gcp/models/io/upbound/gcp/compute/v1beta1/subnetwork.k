"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Subnetwork:
    r"""
    Subnetwork is the Schema for the Subnetworks API. A VPC network is a virtual version of the traditional physical networks that exist within and between physical data centers.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Subnetwork", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1SubnetworkSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1SubnetworkStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "Subnetwork" = "Subnetwork"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1SubnetworkSpec

    status?: ComputeGcpUpboundIoV1beta1SubnetworkStatus


schema ComputeGcpUpboundIoV1beta1SubnetworkSpec:
    r"""
    SubnetworkSpec defines the desired state of Subnetwork

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1SubnetworkSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1SubnetworkSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1SubnetworkSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1SubnetworkSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 subnetwork spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource. This field can be set only at resource
        creation time.
    externalIpv6Prefix : str, default is Undefined, optional
        The range of external IPv6 addresses that are owned by this subnetwork.
    ipCidrRange : str, default is Undefined, optional
        The range of internal addresses that are owned by this subnetwork.
        Provide this property when you create the subnetwork. For example,
        10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
        non-overlapping within a network. Only IPv4 is supported.
    ipv6AccessType : str, default is Undefined, optional
        The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation
        or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet
        cannot enable direct path.
        Possible values are: EXTERNAL, INTERNAL.
    logConfig : [ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderLogConfigItems0], default is Undefined, optional
        This field denotes the VPC flow logging options for this subnetwork. If
        logging is enabled, logs are exported to Cloud Logging. Flow logging
        isn't supported if the subnet purpose field is set to subnetwork is
        REGIONAL_MANAGED_PROXY or GLOBAL_MANAGED_PROXY.
        Structure is documented below.
    network : str, default is Undefined, optional
        The network this subnet belongs to.
        Only networks that are in the distributed mode can have subnetworks.
    networkRef : ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    privateIpGoogleAccess : bool, default is Undefined, optional
        When enabled, VMs in this subnetwork without external IP addresses can
        access Google APIs and services by using Private Google Access.
    privateIpv6GoogleAccess : str, default is Undefined, optional
        The private IPv6 google access type for the VMs in this subnet.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    purpose : str, default is Undefined, optional
        The purpose of the resource. This field can be either PRIVATE_RFC_1918, REGIONAL_MANAGED_PROXY, GLOBAL_MANAGED_PROXY, PRIVATE_SERVICE_CONNECT or PRIVATE_NAT(Beta).
        A subnet with purpose set to REGIONAL_MANAGED_PROXY is a user-created subnetwork that is reserved for regional Envoy-based load balancers.
        A subnetwork in a given region with purpose set to GLOBAL_MANAGED_PROXY is a proxy-only subnet and is shared between all the cross-regional Envoy-based load balancers.
        A subnetwork with purpose set to PRIVATE_SERVICE_CONNECT reserves the subnet for hosting a Private Service Connect published service.
        A subnetwork with purpose set to PRIVATE_NAT is used as source range for Private NAT gateways.
        Note that REGIONAL_MANAGED_PROXY is the preferred setting for all regional Envoy load balancers.
        If unspecified, the purpose defaults to PRIVATE_RFC_1918.
    region : str, default is Undefined, required
        The GCP region for this subnetwork.
    role : str, default is Undefined, optional
        The role of subnetwork.
        Currently, this field is only used when purpose is REGIONAL_MANAGED_PROXY.
        The value can be set to ACTIVE or BACKUP.
        An ACTIVE subnetwork is one that is currently being used for Envoy-based load balancers in a region.
        A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining.
        Possible values are: ACTIVE, BACKUP.
    secondaryIpRange : [ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderSecondaryIPRangeItems0], default is Undefined, optional
        An array of configurations for secondary IP ranges for VM instances
        contained in this subnetwork. The primary IP of such VM must belong
        to the primary ipCidrRange of the subnetwork. The alias IPs may belong
        to either primary or secondary ranges.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
        Structure is documented below.
    sendSecondaryIpRangeIfEmpty : bool, default is Undefined, optional
        Controls the removal behavior of secondary_ip_range.
        When false, removing secondary_ip_range from config will not produce a diff as
        the provider will default to the API's value.
        When true, the provider will treat removing secondary_ip_range as sending an
        empty list of secondary IP ranges to the API.
        Defaults to false.
    stackType : str, default is Undefined, optional
        The stack type for this subnet to identify whether the IPv6 feature is enabled or not.
        If not specified IPV4_ONLY will be used.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    """


    description?: str

    externalIpv6Prefix?: str

    ipCidrRange?: str

    ipv6AccessType?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderLogConfigItems0]

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelector

    privateIpGoogleAccess?: bool

    privateIpv6GoogleAccess?: str

    project?: str

    purpose?: str

    region: str

    role?: str

    secondaryIpRange?: [ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderSecondaryIPRangeItems0]

    sendSecondaryIpRangeIfEmpty?: bool

    stackType?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork spec for provider log config items0

    Attributes
    ----------
    aggregationInterval : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Toggles the aggregation interval for collecting flow logs. Increasing the
        interval time will reduce the amount of generated flow logs for long
        lasting connections. Default is an interval of 5 seconds per connection.
        Default value is INTERVAL_5_SEC.
        Possible values are: INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN, INTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN.
    filterExpr : str, default is Undefined, optional
        Export filter used to define which VPC flow logs should be logged, as as CEL expression. See
        https://cloud.google.com/vpc/docs/flow-logs#filtering for details on how to format this field.
        The default value is 'true', which evaluates to include everything.
    flowSampling : float, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        The value of the field must be in [0, 1]. Set the sampling rate of VPC
        flow logs within the subnetwork where 1.0 means all collected logs are
        reported and 0.0 means no logs are reported. Default is 0.5 which means
        half of all collected logs are reported.
    metadata : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Configures whether metadata fields should be added to the reported VPC
        flow logs.
        Default value is INCLUDE_ALL_METADATA.
        Possible values are: EXCLUDE_ALL_METADATA, INCLUDE_ALL_METADATA, CUSTOM_METADATA.
    metadataFields : [str], default is Undefined, optional
        List of metadata fields that should be added to reported logs.
        Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" is set to CUSTOM_METADATA.
    """


    aggregationInterval?: str

    filterExpr?: str

    flowSampling?: float

    metadata?: str

    metadataFields?: [str]


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecForProviderSecondaryIPRangeItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork spec for provider secondary IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The range of IP addresses belonging to this subnetwork secondary
        range. Provide this property when you create the subnetwork.
        Ranges must be unique and non-overlapping with all primary and
        secondary IP ranges within a network. Only IPv4 is supported.
    rangeName : str, default is Undefined, optional
        The name associated with this subnetwork secondary range, used
        when adding an alias IP range to a VM instance. The name must
        be 1-63 characters long, and comply with RFC1035. The name
        must be unique within the subnetwork.
    """


    ipCidrRange?: str

    rangeName?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource. This field can be set only at resource
        creation time.
    externalIpv6Prefix : str, default is Undefined, optional
        The range of external IPv6 addresses that are owned by this subnetwork.
    ipCidrRange : str, default is Undefined, optional
        The range of internal addresses that are owned by this subnetwork.
        Provide this property when you create the subnetwork. For example,
        10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
        non-overlapping within a network. Only IPv4 is supported.
    ipv6AccessType : str, default is Undefined, optional
        The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation
        or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet
        cannot enable direct path.
        Possible values are: EXTERNAL, INTERNAL.
    logConfig : [ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderLogConfigItems0], default is Undefined, optional
        This field denotes the VPC flow logging options for this subnetwork. If
        logging is enabled, logs are exported to Cloud Logging. Flow logging
        isn't supported if the subnet purpose field is set to subnetwork is
        REGIONAL_MANAGED_PROXY or GLOBAL_MANAGED_PROXY.
        Structure is documented below.
    network : str, default is Undefined, optional
        The network this subnet belongs to.
        Only networks that are in the distributed mode can have subnetworks.
    networkRef : ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    privateIpGoogleAccess : bool, default is Undefined, optional
        When enabled, VMs in this subnetwork without external IP addresses can
        access Google APIs and services by using Private Google Access.
    privateIpv6GoogleAccess : str, default is Undefined, optional
        The private IPv6 google access type for the VMs in this subnet.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    purpose : str, default is Undefined, optional
        The purpose of the resource. This field can be either PRIVATE_RFC_1918, REGIONAL_MANAGED_PROXY, GLOBAL_MANAGED_PROXY, PRIVATE_SERVICE_CONNECT or PRIVATE_NAT(Beta).
        A subnet with purpose set to REGIONAL_MANAGED_PROXY is a user-created subnetwork that is reserved for regional Envoy-based load balancers.
        A subnetwork in a given region with purpose set to GLOBAL_MANAGED_PROXY is a proxy-only subnet and is shared between all the cross-regional Envoy-based load balancers.
        A subnetwork with purpose set to PRIVATE_SERVICE_CONNECT reserves the subnet for hosting a Private Service Connect published service.
        A subnetwork with purpose set to PRIVATE_NAT is used as source range for Private NAT gateways.
        Note that REGIONAL_MANAGED_PROXY is the preferred setting for all regional Envoy load balancers.
        If unspecified, the purpose defaults to PRIVATE_RFC_1918.
    role : str, default is Undefined, optional
        The role of subnetwork.
        Currently, this field is only used when purpose is REGIONAL_MANAGED_PROXY.
        The value can be set to ACTIVE or BACKUP.
        An ACTIVE subnetwork is one that is currently being used for Envoy-based load balancers in a region.
        A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining.
        Possible values are: ACTIVE, BACKUP.
    secondaryIpRange : [ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderSecondaryIPRangeItems0], default is Undefined, optional
        An array of configurations for secondary IP ranges for VM instances
        contained in this subnetwork. The primary IP of such VM must belong
        to the primary ipCidrRange of the subnetwork. The alias IPs may belong
        to either primary or secondary ranges.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
        Structure is documented below.
    sendSecondaryIpRangeIfEmpty : bool, default is Undefined, optional
        Controls the removal behavior of secondary_ip_range.
        When false, removing secondary_ip_range from config will not produce a diff as
        the provider will default to the API's value.
        When true, the provider will treat removing secondary_ip_range as sending an
        empty list of secondary IP ranges to the API.
        Defaults to false.
    stackType : str, default is Undefined, optional
        The stack type for this subnet to identify whether the IPv6 feature is enabled or not.
        If not specified IPV4_ONLY will be used.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    """


    description?: str

    externalIpv6Prefix?: str

    ipCidrRange?: str

    ipv6AccessType?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderLogConfigItems0]

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelector

    privateIpGoogleAccess?: bool

    privateIpv6GoogleAccess?: str

    project?: str

    purpose?: str

    role?: str

    secondaryIpRange?: [ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderSecondaryIPRangeItems0]

    sendSecondaryIpRangeIfEmpty?: bool

    stackType?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork spec init provider log config items0

    Attributes
    ----------
    aggregationInterval : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Toggles the aggregation interval for collecting flow logs. Increasing the
        interval time will reduce the amount of generated flow logs for long
        lasting connections. Default is an interval of 5 seconds per connection.
        Default value is INTERVAL_5_SEC.
        Possible values are: INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN, INTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN.
    filterExpr : str, default is Undefined, optional
        Export filter used to define which VPC flow logs should be logged, as as CEL expression. See
        https://cloud.google.com/vpc/docs/flow-logs#filtering for details on how to format this field.
        The default value is 'true', which evaluates to include everything.
    flowSampling : float, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        The value of the field must be in [0, 1]. Set the sampling rate of VPC
        flow logs within the subnetwork where 1.0 means all collected logs are
        reported and 0.0 means no logs are reported. Default is 0.5 which means
        half of all collected logs are reported.
    metadata : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Configures whether metadata fields should be added to the reported VPC
        flow logs.
        Default value is INCLUDE_ALL_METADATA.
        Possible values are: EXCLUDE_ALL_METADATA, INCLUDE_ALL_METADATA, CUSTOM_METADATA.
    metadataFields : [str], default is Undefined, optional
        List of metadata fields that should be added to reported logs.
        Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" is set to CUSTOM_METADATA.
    """


    aggregationInterval?: str

    filterExpr?: str

    flowSampling?: float

    metadata?: str

    metadataFields?: [str]


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecInitProviderSecondaryIPRangeItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork spec init provider secondary IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The range of IP addresses belonging to this subnetwork secondary
        range. Provide this property when you create the subnetwork.
        Ranges must be unique and non-overlapping with all primary and
        secondary IP ranges within a network. Only IPv4 is supported.
    rangeName : str, default is Undefined, optional
        The name associated with this subnetwork secondary range, used
        when adding an alias IP range to a VM instance. The name must
        be 1-63 characters long, and comply with RFC1035. The name
        must be unique within the subnetwork.
    """


    ipCidrRange?: str

    rangeName?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1SubnetworkStatus:
    r"""
    SubnetworkStatus defines the observed state of Subnetwork.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1SubnetworkStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1SubnetworkStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 subnetwork status at provider

    Attributes
    ----------
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource. This field can be set only at resource
        creation time.
    externalIpv6Prefix : str, default is Undefined, optional
        The range of external IPv6 addresses that are owned by this subnetwork.
    fingerprint : str, default is Undefined, optional
        fingerprint
    gatewayAddress : str, default is Undefined, optional
        The gateway address for default routes to reach destination addresses
        outside this subnetwork.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/subnetworks/{{name}}
    internalIpv6Prefix : str, default is Undefined, optional
        The internal IPv6 address range that is assigned to this subnetwork.
    ipCidrRange : str, default is Undefined, optional
        The range of internal addresses that are owned by this subnetwork.
        Provide this property when you create the subnetwork. For example,
        10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
        non-overlapping within a network. Only IPv4 is supported.
    ipv6AccessType : str, default is Undefined, optional
        The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation
        or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet
        cannot enable direct path.
        Possible values are: EXTERNAL, INTERNAL.
    ipv6CidrRange : str, default is Undefined, optional
        The range of internal IPv6 addresses that are owned by this subnetwork.
    logConfig : [ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderLogConfigItems0], default is Undefined, optional
        This field denotes the VPC flow logging options for this subnetwork. If
        logging is enabled, logs are exported to Cloud Logging. Flow logging
        isn't supported if the subnet purpose field is set to subnetwork is
        REGIONAL_MANAGED_PROXY or GLOBAL_MANAGED_PROXY.
        Structure is documented below.
    network : str, default is Undefined, optional
        The network this subnet belongs to.
        Only networks that are in the distributed mode can have subnetworks.
    privateIpGoogleAccess : bool, default is Undefined, optional
        When enabled, VMs in this subnetwork without external IP addresses can
        access Google APIs and services by using Private Google Access.
    privateIpv6GoogleAccess : str, default is Undefined, optional
        The private IPv6 google access type for the VMs in this subnet.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    purpose : str, default is Undefined, optional
        The purpose of the resource. This field can be either PRIVATE_RFC_1918, REGIONAL_MANAGED_PROXY, GLOBAL_MANAGED_PROXY, PRIVATE_SERVICE_CONNECT or PRIVATE_NAT(Beta).
        A subnet with purpose set to REGIONAL_MANAGED_PROXY is a user-created subnetwork that is reserved for regional Envoy-based load balancers.
        A subnetwork in a given region with purpose set to GLOBAL_MANAGED_PROXY is a proxy-only subnet and is shared between all the cross-regional Envoy-based load balancers.
        A subnetwork with purpose set to PRIVATE_SERVICE_CONNECT reserves the subnet for hosting a Private Service Connect published service.
        A subnetwork with purpose set to PRIVATE_NAT is used as source range for Private NAT gateways.
        Note that REGIONAL_MANAGED_PROXY is the preferred setting for all regional Envoy load balancers.
        If unspecified, the purpose defaults to PRIVATE_RFC_1918.
    region : str, default is Undefined, optional
        The GCP region for this subnetwork.
    role : str, default is Undefined, optional
        The role of subnetwork.
        Currently, this field is only used when purpose is REGIONAL_MANAGED_PROXY.
        The value can be set to ACTIVE or BACKUP.
        An ACTIVE subnetwork is one that is currently being used for Envoy-based load balancers in a region.
        A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining.
        Possible values are: ACTIVE, BACKUP.
    secondaryIpRange : [ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderSecondaryIPRangeItems0], default is Undefined, optional
        An array of configurations for secondary IP ranges for VM instances
        contained in this subnetwork. The primary IP of such VM must belong
        to the primary ipCidrRange of the subnetwork. The alias IPs may belong
        to either primary or secondary ranges.
        Note: This field uses attr-as-block mode to avoid
        breaking users during the 0.12 upgrade. To explicitly send a list
        of zero objects you must use the following syntax:
        example=[]
        For more details about this behavior, see this section.
        Structure is documented below.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    sendSecondaryIpRangeIfEmpty : bool, default is Undefined, optional
        Controls the removal behavior of secondary_ip_range.
        When false, removing secondary_ip_range from config will not produce a diff as
        the provider will default to the API's value.
        When true, the provider will treat removing secondary_ip_range as sending an
        empty list of secondary IP ranges to the API.
        Defaults to false.
    stackType : str, default is Undefined, optional
        The stack type for this subnet to identify whether the IPv6 feature is enabled or not.
        If not specified IPV4_ONLY will be used.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    """


    creationTimestamp?: str

    description?: str

    externalIpv6Prefix?: str

    fingerprint?: str

    gatewayAddress?: str

    id?: str

    internalIpv6Prefix?: str

    ipCidrRange?: str

    ipv6AccessType?: str

    ipv6CidrRange?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderLogConfigItems0]

    network?: str

    privateIpGoogleAccess?: bool

    privateIpv6GoogleAccess?: str

    project?: str

    purpose?: str

    region?: str

    role?: str

    secondaryIpRange?: [ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderSecondaryIPRangeItems0]

    selfLink?: str

    sendSecondaryIpRangeIfEmpty?: bool

    stackType?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork status at provider log config items0

    Attributes
    ----------
    aggregationInterval : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Toggles the aggregation interval for collecting flow logs. Increasing the
        interval time will reduce the amount of generated flow logs for long
        lasting connections. Default is an interval of 5 seconds per connection.
        Default value is INTERVAL_5_SEC.
        Possible values are: INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN, INTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN.
    filterExpr : str, default is Undefined, optional
        Export filter used to define which VPC flow logs should be logged, as as CEL expression. See
        https://cloud.google.com/vpc/docs/flow-logs#filtering for details on how to format this field.
        The default value is 'true', which evaluates to include everything.
    flowSampling : float, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        The value of the field must be in [0, 1]. Set the sampling rate of VPC
        flow logs within the subnetwork where 1.0 means all collected logs are
        reported and 0.0 means no logs are reported. Default is 0.5 which means
        half of all collected logs are reported.
    metadata : str, default is Undefined, optional
        Can only be specified if VPC flow logging for this subnetwork is enabled.
        Configures whether metadata fields should be added to the reported VPC
        flow logs.
        Default value is INCLUDE_ALL_METADATA.
        Possible values are: EXCLUDE_ALL_METADATA, INCLUDE_ALL_METADATA, CUSTOM_METADATA.
    metadataFields : [str], default is Undefined, optional
        List of metadata fields that should be added to reported logs.
        Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" is set to CUSTOM_METADATA.
    """


    aggregationInterval?: str

    filterExpr?: str

    flowSampling?: float

    metadata?: str

    metadataFields?: [str]


schema ComputeGcpUpboundIoV1beta1SubnetworkStatusAtProviderSecondaryIPRangeItems0:
    r"""
    compute gcp upbound io v1beta1 subnetwork status at provider secondary IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The range of IP addresses belonging to this subnetwork secondary
        range. Provide this property when you create the subnetwork.
        Ranges must be unique and non-overlapping with all primary and
        secondary IP ranges within a network. Only IPv4 is supported.
    rangeName : str, default is Undefined, optional
        The name associated with this subnetwork secondary range, used
        when adding an alias IP range to a VM instance. The name must
        be 1-63 characters long, and comply with RFC1035. The name
        must be unique within the subnetwork.
    """


    ipCidrRange?: str

    rangeName?: str


schema ComputeGcpUpboundIoV1beta1SubnetworkStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


