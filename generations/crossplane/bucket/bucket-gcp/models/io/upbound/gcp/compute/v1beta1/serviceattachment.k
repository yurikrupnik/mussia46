"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ServiceAttachment:
    r"""
    ServiceAttachment is the Schema for the ServiceAttachments API. Represents a ServiceAttachment resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServiceAttachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1ServiceAttachmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "ServiceAttachment" = "ServiceAttachment"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpec

    status?: ComputeGcpUpboundIoV1beta1ServiceAttachmentStatus


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpec:
    r"""
    ServiceAttachmentSpec defines the desired state of ServiceAttachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 service attachment spec for provider

    Attributes
    ----------
    connectionPreference : str, default is Undefined, optional
        The connection preference to use for this service attachment. Valid
        values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
    consumerAcceptLists : [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0], default is Undefined, optional
        An array of projects that are allowed to connect to this service
        attachment.
        Structure is documented below.
    consumerRejectLists : [str], default is Undefined, optional
        An array of projects that are not allowed to connect to this service
        attachment.
    description : str, default is Undefined, optional
        An optional description of this resource.
    domainNames : [str], default is Undefined, optional
        If specified, the domain name will be used during the integration between
        the PSC connected endpoints and the Cloud DNS. For example, this is a
        valid domain name: "p.mycompany.com.". Current max number of domain names
        supported is 1.
    enableProxyProtocol : bool, default is Undefined, optional
        If true, enable the proxy protocol which is for supplying client TCP/IP
        address data in TCP connections that traverse proxies on their way to
        destination servers.
    natSubnets : [str], default is Undefined, optional
        An array of subnets that is provided for NAT in this service attachment.
    natSubnetsRefs : [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0], default is Undefined, optional
        References to Subnetwork in compute to populate natSubnets.
    natSubnetsSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelector, default is Undefined, optional
        nat subnets selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    reconcileConnections : bool, default is Undefined, optional
        This flag determines whether a consumer accept/reject list change can reconcile the statuses of existing ACCEPTED or REJECTED PSC endpoints.
        If false, connection policy update will only affect existing PENDING PSC endpoints. Existing ACCEPTED/REJECTED endpoints will remain untouched regardless how the connection policy is modified .
        If true, update will affect both PENDING and ACCEPTED/REJECTED PSC endpoints. For example, an ACCEPTED PSC endpoint will be moved to REJECTED if its project is added to the reject list.
    region : str, default is Undefined, required
        URL of the region where the resource resides.
    targetService : str, default is Undefined, optional
        The URL of a service serving the endpoint identified by this service attachment.
    targetServiceRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRef, default is Undefined, optional
        target service ref
    targetServiceSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelector, default is Undefined, optional
        target service selector
    """


    connectionPreference?: str

    consumerAcceptLists?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0]

    consumerRejectLists?: [str]

    description?: str

    domainNames?: [str]

    enableProxyProtocol?: bool

    natSubnets?: [str]

    natSubnetsRefs?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0]

    natSubnetsSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelector

    project?: str

    reconcileConnections?: bool

    region: str

    targetService?: str

    targetServiceRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRef

    targetServiceSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelector


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0:
    r"""
    compute gcp upbound io v1beta1 service attachment spec for provider consumer accept lists items0

    Attributes
    ----------
    connectionLimit : float, default is Undefined, optional
        The number of consumer forwarding rules the consumer project can
        create.
    networkUrl : str, default is Undefined, optional
        The network that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    networkUrlRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    projectIdOrNum : str, default is Undefined, optional
        A project that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    """


    connectionLimit?: float

    networkUrl?: str

    networkUrlRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRef

    networkUrlSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelector

    projectIdOrNum?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRef:
    r"""
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelector:
    r"""
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelector:
    r"""
    Selector for a list of Subnetwork in compute to populate natSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderNatSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRef:
    r"""
    Reference to a ForwardingRule in compute to populate targetService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelector:
    r"""
    Selector for a ForwardingRule in compute to populate targetService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecForProviderTargetServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    connectionPreference : str, default is Undefined, optional
        The connection preference to use for this service attachment. Valid
        values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
    consumerAcceptLists : [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0], default is Undefined, optional
        An array of projects that are allowed to connect to this service
        attachment.
        Structure is documented below.
    consumerRejectLists : [str], default is Undefined, optional
        An array of projects that are not allowed to connect to this service
        attachment.
    description : str, default is Undefined, optional
        An optional description of this resource.
    domainNames : [str], default is Undefined, optional
        If specified, the domain name will be used during the integration between
        the PSC connected endpoints and the Cloud DNS. For example, this is a
        valid domain name: "p.mycompany.com.". Current max number of domain names
        supported is 1.
    enableProxyProtocol : bool, default is Undefined, optional
        If true, enable the proxy protocol which is for supplying client TCP/IP
        address data in TCP connections that traverse proxies on their way to
        destination servers.
    natSubnets : [str], default is Undefined, optional
        An array of subnets that is provided for NAT in this service attachment.
    natSubnetsRefs : [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0], default is Undefined, optional
        References to Subnetwork in compute to populate natSubnets.
    natSubnetsSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelector, default is Undefined, optional
        nat subnets selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    reconcileConnections : bool, default is Undefined, optional
        This flag determines whether a consumer accept/reject list change can reconcile the statuses of existing ACCEPTED or REJECTED PSC endpoints.
        If false, connection policy update will only affect existing PENDING PSC endpoints. Existing ACCEPTED/REJECTED endpoints will remain untouched regardless how the connection policy is modified .
        If true, update will affect both PENDING and ACCEPTED/REJECTED PSC endpoints. For example, an ACCEPTED PSC endpoint will be moved to REJECTED if its project is added to the reject list.
    targetService : str, default is Undefined, optional
        The URL of a service serving the endpoint identified by this service attachment.
    targetServiceRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRef, default is Undefined, optional
        target service ref
    targetServiceSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelector, default is Undefined, optional
        target service selector
    """


    connectionPreference?: str

    consumerAcceptLists?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0]

    consumerRejectLists?: [str]

    description?: str

    domainNames?: [str]

    enableProxyProtocol?: bool

    natSubnets?: [str]

    natSubnetsRefs?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0]

    natSubnetsSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelector

    project?: str

    reconcileConnections?: bool

    targetService?: str

    targetServiceRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRef

    targetServiceSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelector


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0:
    r"""
    compute gcp upbound io v1beta1 service attachment spec init provider consumer accept lists items0

    Attributes
    ----------
    connectionLimit : float, default is Undefined, optional
        The number of consumer forwarding rules the consumer project can
        create.
    networkUrl : str, default is Undefined, optional
        The network that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    networkUrlRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    projectIdOrNum : str, default is Undefined, optional
        A project that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    """


    connectionLimit?: float

    networkUrl?: str

    networkUrlRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRef

    networkUrlSelector?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelector

    projectIdOrNum?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRef:
    r"""
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelector:
    r"""
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderConsumerAcceptListsItems0NetworkURLSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelector:
    r"""
    Selector for a list of Subnetwork in compute to populate natSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderNatSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRef:
    r"""
    Reference to a ForwardingRule in compute to populate targetService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelector:
    r"""
    Selector for a ForwardingRule in compute to populate targetService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecInitProviderTargetServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentStatus:
    r"""
    ServiceAttachmentStatus defines the observed state of ServiceAttachment.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 service attachment status at provider

    Attributes
    ----------
    connectedEndpoints : [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConnectedEndpointsItems0], default is Undefined, optional
        An array of the consumer forwarding rules connected to this service
        attachment.
        Structure is documented below.
    connectionPreference : str, default is Undefined, optional
        The connection preference to use for this service attachment. Valid
        values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
    consumerAcceptLists : [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConsumerAcceptListsItems0], default is Undefined, optional
        An array of projects that are allowed to connect to this service
        attachment.
        Structure is documented below.
    consumerRejectLists : [str], default is Undefined, optional
        An array of projects that are not allowed to connect to this service
        attachment.
    description : str, default is Undefined, optional
        An optional description of this resource.
    domainNames : [str], default is Undefined, optional
        If specified, the domain name will be used during the integration between
        the PSC connected endpoints and the Cloud DNS. For example, this is a
        valid domain name: "p.mycompany.com.". Current max number of domain names
        supported is 1.
    enableProxyProtocol : bool, default is Undefined, optional
        If true, enable the proxy protocol which is for supplying client TCP/IP
        address data in TCP connections that traverse proxies on their way to
        destination servers.
    fingerprint : str, default is Undefined, optional
        Fingerprint of this resource. This field is used internally during
        updates of this resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/serviceAttachments/{{name}}
    natSubnets : [str], default is Undefined, optional
        An array of subnets that is provided for NAT in this service attachment.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    reconcileConnections : bool, default is Undefined, optional
        This flag determines whether a consumer accept/reject list change can reconcile the statuses of existing ACCEPTED or REJECTED PSC endpoints.
        If false, connection policy update will only affect existing PENDING PSC endpoints. Existing ACCEPTED/REJECTED endpoints will remain untouched regardless how the connection policy is modified .
        If true, update will affect both PENDING and ACCEPTED/REJECTED PSC endpoints. For example, an ACCEPTED PSC endpoint will be moved to REJECTED if its project is added to the reject list.
    region : str, default is Undefined, optional
        URL of the region where the resource resides.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    targetService : str, default is Undefined, optional
        The URL of a service serving the endpoint identified by this service attachment.
    """


    connectedEndpoints?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConnectedEndpointsItems0]

    connectionPreference?: str

    consumerAcceptLists?: [ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConsumerAcceptListsItems0]

    consumerRejectLists?: [str]

    description?: str

    domainNames?: [str]

    enableProxyProtocol?: bool

    fingerprint?: str

    id?: str

    natSubnets?: [str]

    project?: str

    reconcileConnections?: bool

    region?: str

    selfLink?: str

    targetService?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConnectedEndpointsItems0:
    r"""
    compute gcp upbound io v1beta1 service attachment status at provider connected endpoints items0

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        (Output)
        The URL of the consumer forwarding rule.
    status : str, default is Undefined, optional
        (Output)
        The status of the connection from the consumer forwarding rule to
        this service attachment.
    """


    endpoint?: str

    status?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusAtProviderConsumerAcceptListsItems0:
    r"""
    compute gcp upbound io v1beta1 service attachment status at provider consumer accept lists items0

    Attributes
    ----------
    connectionLimit : float, default is Undefined, optional
        The number of consumer forwarding rules the consumer project can
        create.
    networkUrl : str, default is Undefined, optional
        The network that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    projectIdOrNum : str, default is Undefined, optional
        A project that is allowed to connect to this service attachment.
        Only one of project_id_or_num and network_url may be set.
    """


    connectionLimit?: float

    networkUrl?: str

    projectIdOrNum?: str


schema ComputeGcpUpboundIoV1beta1ServiceAttachmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


