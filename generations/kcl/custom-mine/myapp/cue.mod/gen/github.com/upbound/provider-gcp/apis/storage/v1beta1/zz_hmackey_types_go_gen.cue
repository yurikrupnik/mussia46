// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/storage/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#HMACKeyInitParameters: {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The email address of the key's associated service account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("email",true)
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.
	// +kubebuilder:validation:Optional
	serviceAccountEmailRef?: null | v1.#Reference @go(ServiceAccountEmailRef,*v1.Reference)

	// Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.
	// +kubebuilder:validation:Optional
	serviceAccountEmailSelector?: null | v1.#Selector @go(ServiceAccountEmailSelector,*v1.Selector)

	// The state of the key. Can be set to one of ACTIVE, INACTIVE.
	// Default value is ACTIVE.
	// Possible values are: ACTIVE, INACTIVE.
	state?: null | string @go(State,*string)
}

#HMACKeyObservation: {
	// The access ID of the HMAC Key.
	accessId?: null | string @go(AccessID,*string)

	// an identifier for the resource with format projects/{{project}}/hmacKeys/{{access_id}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The email address of the key's associated service account.
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// The state of the key. Can be set to one of ACTIVE, INACTIVE.
	// Default value is ACTIVE.
	// Possible values are: ACTIVE, INACTIVE.
	state?: null | string @go(State,*string)

	// 'The creation time of the HMAC key in RFC 3339 format. '
	timeCreated?: null | string @go(TimeCreated,*string)

	// 'The last modification time of the HMAC key metadata in RFC 3339 format.'
	updated?: null | string @go(Updated,*string)
}

#HMACKeyParameters: {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The email address of the key's associated service account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("email",true)
	// +kubebuilder:validation:Optional
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.
	// +kubebuilder:validation:Optional
	serviceAccountEmailRef?: null | v1.#Reference @go(ServiceAccountEmailRef,*v1.Reference)

	// Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.
	// +kubebuilder:validation:Optional
	serviceAccountEmailSelector?: null | v1.#Selector @go(ServiceAccountEmailSelector,*v1.Selector)

	// The state of the key. Can be set to one of ACTIVE, INACTIVE.
	// Default value is ACTIVE.
	// Possible values are: ACTIVE, INACTIVE.
	// +kubebuilder:validation:Optional
	state?: null | string @go(State,*string)
}

// HMACKeySpec defines the desired state of HMACKey
#HMACKeySpec: {
	v1.#ResourceSpec
	forProvider: #HMACKeyParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #HMACKeyInitParameters @go(InitProvider)
}

// HMACKeyStatus defines the observed state of HMACKey.
#HMACKeyStatus: {
	v1.#ResourceStatus
	atProvider?: #HMACKeyObservation @go(AtProvider)
}

// HMACKey is the Schema for the HMACKeys API. The hmacKeys resource represents an HMAC key within Cloud Storage.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#HMACKey: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #HMACKeySpec       @go(Spec)
	status?:   #HMACKeyStatus     @go(Status)
}

// HMACKeyList contains a list of HMACKeys
#HMACKeyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#HMACKey] @go(Items,[]HMACKey)
}
