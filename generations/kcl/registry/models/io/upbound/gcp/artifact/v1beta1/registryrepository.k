"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegistryRepository:
    r"""
    RegistryRepository is the Schema for the RegistryRepositorys API. A repository for storing artifacts

    Attributes
    ----------
    apiVersion : str, default is "artifact.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegistryRepository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpec, default is Undefined, required
        spec
    status : ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "artifact.gcp.upbound.io/v1beta1" = "artifact.gcp.upbound.io/v1beta1"

    kind: "RegistryRepository" = "RegistryRepository"

    metadata?: v1.ObjectMeta

    spec: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpec

    status?: ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatus


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpec:
    r"""
    RegistryRepositorySpec defines the desired state of RegistryRepository

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProvider, default is Undefined, required
        for provider
    initProvider : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProvider

    initProvider?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRef

    publishConnectionDetailsTo?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecWriteConnectionSecretToRef


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProvider:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider

    Attributes
    ----------
    cleanupPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0], default is Undefined, optional
        Cleanup policies for this repository. Cleanup policies indicate when
        certain package versions can be automatically deleted.
        Map keys are policy IDs supplied by users during policy creation. They must
        unique within a repository and be under 128 characters in length.
        Structure is documented below.
    cleanupPolicyDryRun : bool, default is Undefined, optional
        If true, the cleanup pipeline is prevented from deleting versions in this
        repository.
    description : str, default is Undefined, optional
        The user-provided description of the repository.
    dockerConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderDockerConfigItems0], default is Undefined, optional
        Docker repository config contains repository level configuration for the repositories of docker type.
        Structure is documented below.
    format : str, default is Undefined, optional
        The format of packages that are stored in the repository. Supported formats
        can be found here.
        You can only create alpha formats if you are a member of the
        alpha user group.
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource name of the customer managed encryption key thatâ€™s
        used to encrypt the contents of the Repository. Has the form:
        projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
        This value may not be changed after the Repository has been created.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        This field may contain up to 64 entries. Label keys and values may be no
        longer than 63 characters. Label keys must begin with a lowercase letter
        and may only contain lowercase letters, numeric characters, underscores,
        and dashes.
    location : str, default is Undefined, optional
        The name of the location this repository is located in.
    mavenConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderMavenConfigItems0], default is Undefined, optional
        MavenRepositoryConfig is maven related repository details.
        Provides additional configuration details for repositories of the maven
        format type.
        Structure is documented below.
    mode : str, default is Undefined, optional
        The mode configures the repository to serve artifacts from different sources.
        Default value is STANDARD_REPOSITORY.
        Possible values are: STANDARD_REPOSITORY, VIRTUAL_REPOSITORY, REMOTE_REPOSITORY.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Remote Repository.
        Structure is documented below.
    virtualRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Virtual Repository.
        Structure is documented below.
    """


    cleanupPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0]

    cleanupPolicyDryRun?: bool

    description?: str

    dockerConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderDockerConfigItems0]

    format?: str

    kmsKeyName?: str

    labels?: {str:str}

    location?: str

    mavenConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderMavenConfigItems0]

    mode?: str

    project?: str

    remoteRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0]

    virtualRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider cleanup policies items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Policy action.
        Possible values are: DELETE, KEEP.
    condition : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0ConditionItems0], default is Undefined, optional
        Policy condition for matching versions.
        Structure is documented below.
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    mostRecentVersions : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0MostRecentVersionsItems0], default is Undefined, optional
        Policy condition for retaining a minimum number of versions. May only be
        specified with a Keep action.
        Structure is documented below.
    """


    action?: str

    condition?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0ConditionItems0]

    id?: str

    mostRecentVersions?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0MostRecentVersionsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0ConditionItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider cleanup policies items0 condition items0

    Attributes
    ----------
    newerThan : str, default is Undefined, optional
        Match versions newer than a duration.
    olderThan : str, default is Undefined, optional
        Match versions older than a duration.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    tagPrefixes : [str], default is Undefined, optional
        Match versions by tag prefix. Applied on any prefix match.
    tagState : str, default is Undefined, optional
        Match versions by tag status.
        Default value is ANY.
        Possible values are: TAGGED, UNTAGGED, ANY.
    versionNamePrefixes : [str], default is Undefined, optional
        Match versions by version name prefix. Applied on any prefix match.
    """


    newerThan?: str

    olderThan?: str

    packageNamePrefixes?: [str]

    tagPrefixes?: [str]

    tagState?: str

    versionNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderCleanupPoliciesItems0MostRecentVersionsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider cleanup policies items0 most recent versions items0

    Attributes
    ----------
    keepCount : float, default is Undefined, optional
        Minimum number of versions to keep.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    """


    keepCount?: float

    packageNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderDockerConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider docker config items0

    Attributes
    ----------
    immutableTags : bool, default is Undefined, optional
        The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.
    """


    immutableTags?: bool


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderMavenConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider maven config items0

    Attributes
    ----------
    allowSnapshotOverwrites : bool, default is Undefined, optional
        The repository with this flag will allow publishing the same
        snapshot versions.
    versionPolicy : str, default is Undefined, optional
        Version policy defines the versions that the registry will accept.
        Default value is VERSION_POLICY_UNSPECIFIED.
        Possible values are: VERSION_POLICY_UNSPECIFIED, RELEASE, SNAPSHOT.
    """


    allowSnapshotOverwrites?: bool

    versionPolicy?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0

    Attributes
    ----------
    aptRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0], default is Undefined, optional
        Specific settings for an Apt remote repository.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the remote source.
    disableUpstreamValidation : bool, default is Undefined, optional
        If true, the remote repository upstream and upstream credentials will
        not be validated.
    dockerRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0], default is Undefined, optional
        Specific settings for a Docker remote repository.
        Structure is documented below.
    mavenRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0], default is Undefined, optional
        Specific settings for a Maven remote repository.
        Structure is documented below.
    npmRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0], default is Undefined, optional
        Specific settings for an Npm remote repository.
        Structure is documented below.
    pythonRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0], default is Undefined, optional
        Specific settings for a Python remote repository.
        Structure is documented below.
    upstreamCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0], default is Undefined, optional
        The credentials used to access the remote repository.
        Structure is documented below.
    yumRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0], default is Undefined, optional
        Specific settings for an Yum remote repository.
        Structure is documented below.
    """


    aptRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0]

    description?: str

    disableUpstreamValidation?: bool

    dockerRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0]

    mavenRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0]

    npmRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0]

    pythonRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0]

    upstreamCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0]

    yumRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 apt repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 apt repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 docker repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 docker repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 maven repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 maven repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 npm repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 npm repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 python repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 python repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 upstream credentials items0

    Attributes
    ----------
    usernamePasswordCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0], default is Undefined, optional
        Use username and password to access the remote repository.
        Structure is documented below.
    """


    usernamePasswordCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 upstream credentials items0 username password credentials items0

    Attributes
    ----------
    passwordSecretVersion : str, default is Undefined, optional
        The Secret Manager key version that holds the password to access the
        remote repository. Must be in the format of
        projects/{project}/secrets/{secret}/versions/{version}.
    passwordSecretVersionRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef, default is Undefined, optional
        password secret version ref
    passwordSecretVersionSelector : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector, default is Undefined, optional
        password secret version selector
    username : str, default is Undefined, optional
        The username to access the remote repository.
    """


    passwordSecretVersion?: str

    passwordSecretVersionRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef

    passwordSecretVersionSelector?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector

    username?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef:
    r"""
    Reference to a SecretVersion in secretmanager to populate passwordSecretVersion.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector:
    r"""
    Selector for a SecretVersion in secretmanager to populate passwordSecretVersion.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 yum repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider remote repository config items0 yum repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider virtual repository config items0

    Attributes
    ----------
    upstreamPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0], default is Undefined, optional
        Policies that configure the upstream artifacts distributed by the Virtual
        Repository. Upstream policies cannot be set on a standard repository.
        Structure is documented below.
    """


    upstreamPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec for provider virtual repository config items0 upstream policies items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The user-provided ID of the upstream policy.
    priority : float, default is Undefined, optional
        Entries with a greater priority value take precedence in the pull order.
    repository : str, default is Undefined, optional
        A reference to the repository resource, for example:
        "projects/p1/locations/us-central1/repository/repo1".
    repositoryRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef, default is Undefined, optional
        repository ref
    repositorySelector : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector, default is Undefined, optional
        repository selector
    """


    id?: str

    priority?: float

    repository?: str

    repositoryRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef

    repositorySelector?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef:
    r"""
    Reference to a RegistryRepository in artifact to populate repository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector:
    r"""
    Selector for a RegistryRepository in artifact to populate repository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecForProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cleanupPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0], default is Undefined, optional
        Cleanup policies for this repository. Cleanup policies indicate when
        certain package versions can be automatically deleted.
        Map keys are policy IDs supplied by users during policy creation. They must
        unique within a repository and be under 128 characters in length.
        Structure is documented below.
    cleanupPolicyDryRun : bool, default is Undefined, optional
        If true, the cleanup pipeline is prevented from deleting versions in this
        repository.
    description : str, default is Undefined, optional
        The user-provided description of the repository.
    dockerConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderDockerConfigItems0], default is Undefined, optional
        Docker repository config contains repository level configuration for the repositories of docker type.
        Structure is documented below.
    format : str, default is Undefined, optional
        The format of packages that are stored in the repository. Supported formats
        can be found here.
        You can only create alpha formats if you are a member of the
        alpha user group.
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource name of the customer managed encryption key thatâ€™s
        used to encrypt the contents of the Repository. Has the form:
        projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
        This value may not be changed after the Repository has been created.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        This field may contain up to 64 entries. Label keys and values may be no
        longer than 63 characters. Label keys must begin with a lowercase letter
        and may only contain lowercase letters, numeric characters, underscores,
        and dashes.
    mavenConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderMavenConfigItems0], default is Undefined, optional
        MavenRepositoryConfig is maven related repository details.
        Provides additional configuration details for repositories of the maven
        format type.
        Structure is documented below.
    mode : str, default is Undefined, optional
        The mode configures the repository to serve artifacts from different sources.
        Default value is STANDARD_REPOSITORY.
        Possible values are: STANDARD_REPOSITORY, VIRTUAL_REPOSITORY, REMOTE_REPOSITORY.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Remote Repository.
        Structure is documented below.
    virtualRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Virtual Repository.
        Structure is documented below.
    """


    cleanupPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0]

    cleanupPolicyDryRun?: bool

    description?: str

    dockerConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderDockerConfigItems0]

    format?: str

    kmsKeyName?: str

    labels?: {str:str}

    mavenConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderMavenConfigItems0]

    mode?: str

    project?: str

    remoteRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0]

    virtualRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider cleanup policies items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Policy action.
        Possible values are: DELETE, KEEP.
    condition : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0ConditionItems0], default is Undefined, optional
        Policy condition for matching versions.
        Structure is documented below.
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    mostRecentVersions : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0MostRecentVersionsItems0], default is Undefined, optional
        Policy condition for retaining a minimum number of versions. May only be
        specified with a Keep action.
        Structure is documented below.
    """


    action?: str

    condition?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0ConditionItems0]

    id?: str

    mostRecentVersions?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0MostRecentVersionsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0ConditionItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider cleanup policies items0 condition items0

    Attributes
    ----------
    newerThan : str, default is Undefined, optional
        Match versions newer than a duration.
    olderThan : str, default is Undefined, optional
        Match versions older than a duration.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    tagPrefixes : [str], default is Undefined, optional
        Match versions by tag prefix. Applied on any prefix match.
    tagState : str, default is Undefined, optional
        Match versions by tag status.
        Default value is ANY.
        Possible values are: TAGGED, UNTAGGED, ANY.
    versionNamePrefixes : [str], default is Undefined, optional
        Match versions by version name prefix. Applied on any prefix match.
    """


    newerThan?: str

    olderThan?: str

    packageNamePrefixes?: [str]

    tagPrefixes?: [str]

    tagState?: str

    versionNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderCleanupPoliciesItems0MostRecentVersionsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider cleanup policies items0 most recent versions items0

    Attributes
    ----------
    keepCount : float, default is Undefined, optional
        Minimum number of versions to keep.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    """


    keepCount?: float

    packageNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderDockerConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider docker config items0

    Attributes
    ----------
    immutableTags : bool, default is Undefined, optional
        The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.
    """


    immutableTags?: bool


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderMavenConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider maven config items0

    Attributes
    ----------
    allowSnapshotOverwrites : bool, default is Undefined, optional
        The repository with this flag will allow publishing the same
        snapshot versions.
    versionPolicy : str, default is Undefined, optional
        Version policy defines the versions that the registry will accept.
        Default value is VERSION_POLICY_UNSPECIFIED.
        Possible values are: VERSION_POLICY_UNSPECIFIED, RELEASE, SNAPSHOT.
    """


    allowSnapshotOverwrites?: bool

    versionPolicy?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0

    Attributes
    ----------
    aptRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0], default is Undefined, optional
        Specific settings for an Apt remote repository.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the remote source.
    disableUpstreamValidation : bool, default is Undefined, optional
        If true, the remote repository upstream and upstream credentials will
        not be validated.
    dockerRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0], default is Undefined, optional
        Specific settings for a Docker remote repository.
        Structure is documented below.
    mavenRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0], default is Undefined, optional
        Specific settings for a Maven remote repository.
        Structure is documented below.
    npmRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0], default is Undefined, optional
        Specific settings for an Npm remote repository.
        Structure is documented below.
    pythonRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0], default is Undefined, optional
        Specific settings for a Python remote repository.
        Structure is documented below.
    upstreamCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0], default is Undefined, optional
        The credentials used to access the remote repository.
        Structure is documented below.
    yumRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0], default is Undefined, optional
        Specific settings for an Yum remote repository.
        Structure is documented below.
    """


    aptRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0]

    description?: str

    disableUpstreamValidation?: bool

    dockerRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0]

    mavenRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0]

    npmRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0]

    pythonRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0]

    upstreamCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0]

    yumRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 apt repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 apt repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 docker repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 docker repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 maven repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 maven repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 npm repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 npm repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 python repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 python repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 upstream credentials items0

    Attributes
    ----------
    usernamePasswordCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0], default is Undefined, optional
        Use username and password to access the remote repository.
        Structure is documented below.
    """


    usernamePasswordCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 upstream credentials items0 username password credentials items0

    Attributes
    ----------
    passwordSecretVersion : str, default is Undefined, optional
        The Secret Manager key version that holds the password to access the
        remote repository. Must be in the format of
        projects/{project}/secrets/{secret}/versions/{version}.
    passwordSecretVersionRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef, default is Undefined, optional
        password secret version ref
    passwordSecretVersionSelector : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector, default is Undefined, optional
        password secret version selector
    username : str, default is Undefined, optional
        The username to access the remote repository.
    """


    passwordSecretVersion?: str

    passwordSecretVersionRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef

    passwordSecretVersionSelector?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector

    username?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRef:
    r"""
    Reference to a SecretVersion in secretmanager to populate passwordSecretVersion.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelector:
    r"""
    Selector for a SecretVersion in secretmanager to populate passwordSecretVersion.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0PasswordSecretVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 yum repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider remote repository config items0 yum repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider virtual repository config items0

    Attributes
    ----------
    upstreamPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0], default is Undefined, optional
        Policies that configure the upstream artifacts distributed by the Virtual
        Repository. Upstream policies cannot be set on a standard repository.
        Structure is documented below.
    """


    upstreamPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository spec init provider virtual repository config items0 upstream policies items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The user-provided ID of the upstream policy.
    priority : float, default is Undefined, optional
        Entries with a greater priority value take precedence in the pull order.
    repository : str, default is Undefined, optional
        A reference to the repository resource, for example:
        "projects/p1/locations/us-central1/repository/repo1".
    repositoryRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef, default is Undefined, optional
        repository ref
    repositorySelector : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector, default is Undefined, optional
        repository selector
    """


    id?: str

    priority?: float

    repository?: str

    repositoryRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef

    repositorySelector?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRef:
    r"""
    Reference to a RegistryRepository in artifact to populate repository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelector:
    r"""
    Selector for a RegistryRepository in artifact to populate repository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecInitProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0RepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRef

    metadata?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToMetadata

    name: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRefPolicy


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatus:
    r"""
    RegistryRepositoryStatus defines the observed state of RegistryRepository.

    Attributes
    ----------
    atProvider : ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProvider

    conditions?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusConditionsItems0]

    observedGeneration?: int


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProvider:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider

    Attributes
    ----------
    cleanupPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0], default is Undefined, optional
        Cleanup policies for this repository. Cleanup policies indicate when
        certain package versions can be automatically deleted.
        Map keys are policy IDs supplied by users during policy creation. They must
        unique within a repository and be under 128 characters in length.
        Structure is documented below.
    cleanupPolicyDryRun : bool, default is Undefined, optional
        If true, the cleanup pipeline is prevented from deleting versions in this
        repository.
    createTime : str, default is Undefined, optional
        The time when the repository was created.
    description : str, default is Undefined, optional
        The user-provided description of the repository.
    dockerConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderDockerConfigItems0], default is Undefined, optional
        Docker repository config contains repository level configuration for the repositories of docker type.
        Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    format : str, default is Undefined, optional
        The format of packages that are stored in the repository. Supported formats
        can be found here.
        You can only create alpha formats if you are a member of the
        alpha user group.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource name of the customer managed encryption key thatâ€™s
        used to encrypt the contents of the Repository. Has the form:
        projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
        This value may not be changed after the Repository has been created.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        This field may contain up to 64 entries. Label keys and values may be no
        longer than 63 characters. Label keys must begin with a lowercase letter
        and may only contain lowercase letters, numeric characters, underscores,
        and dashes.
    location : str, default is Undefined, optional
        The name of the location this repository is located in.
    mavenConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderMavenConfigItems0], default is Undefined, optional
        MavenRepositoryConfig is maven related repository details.
        Provides additional configuration details for repositories of the maven
        format type.
        Structure is documented below.
    mode : str, default is Undefined, optional
        The mode configures the repository to serve artifacts from different sources.
        Default value is STANDARD_REPOSITORY.
        Possible values are: STANDARD_REPOSITORY, VIRTUAL_REPOSITORY, REMOTE_REPOSITORY.
    name : str, default is Undefined, optional
        The name of the repository, for example:
        "repo1"
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Remote Repository.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The time when the repository was last updated.
    virtualRepositoryConfig : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0], default is Undefined, optional
        Configuration specific for a Virtual Repository.
        Structure is documented below.
    """


    cleanupPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0]

    cleanupPolicyDryRun?: bool

    createTime?: str

    description?: str

    dockerConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderDockerConfigItems0]

    effectiveLabels?: {str:str}

    format?: str

    id?: str

    kmsKeyName?: str

    labels?: {str:str}

    location?: str

    mavenConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderMavenConfigItems0]

    mode?: str

    name?: str

    project?: str

    remoteRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0]

    terraformLabels?: {str:str}

    updateTime?: str

    virtualRepositoryConfig?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider cleanup policies items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Policy action.
        Possible values are: DELETE, KEEP.
    condition : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0ConditionItems0], default is Undefined, optional
        Policy condition for matching versions.
        Structure is documented below.
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    mostRecentVersions : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0MostRecentVersionsItems0], default is Undefined, optional
        Policy condition for retaining a minimum number of versions. May only be
        specified with a Keep action.
        Structure is documented below.
    """


    action?: str

    condition?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0ConditionItems0]

    id?: str

    mostRecentVersions?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0MostRecentVersionsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0ConditionItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider cleanup policies items0 condition items0

    Attributes
    ----------
    newerThan : str, default is Undefined, optional
        Match versions newer than a duration.
    olderThan : str, default is Undefined, optional
        Match versions older than a duration.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    tagPrefixes : [str], default is Undefined, optional
        Match versions by tag prefix. Applied on any prefix match.
    tagState : str, default is Undefined, optional
        Match versions by tag status.
        Default value is ANY.
        Possible values are: TAGGED, UNTAGGED, ANY.
    versionNamePrefixes : [str], default is Undefined, optional
        Match versions by version name prefix. Applied on any prefix match.
    """


    newerThan?: str

    olderThan?: str

    packageNamePrefixes?: [str]

    tagPrefixes?: [str]

    tagState?: str

    versionNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderCleanupPoliciesItems0MostRecentVersionsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider cleanup policies items0 most recent versions items0

    Attributes
    ----------
    keepCount : float, default is Undefined, optional
        Minimum number of versions to keep.
    packageNamePrefixes : [str], default is Undefined, optional
        Match versions by package prefix. Applied on any prefix match.
    """


    keepCount?: float

    packageNamePrefixes?: [str]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderDockerConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider docker config items0

    Attributes
    ----------
    immutableTags : bool, default is Undefined, optional
        The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.
    """


    immutableTags?: bool


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderMavenConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider maven config items0

    Attributes
    ----------
    allowSnapshotOverwrites : bool, default is Undefined, optional
        The repository with this flag will allow publishing the same
        snapshot versions.
    versionPolicy : str, default is Undefined, optional
        Version policy defines the versions that the registry will accept.
        Default value is VERSION_POLICY_UNSPECIFIED.
        Possible values are: VERSION_POLICY_UNSPECIFIED, RELEASE, SNAPSHOT.
    """


    allowSnapshotOverwrites?: bool

    versionPolicy?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0

    Attributes
    ----------
    aptRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0], default is Undefined, optional
        Specific settings for an Apt remote repository.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the remote source.
    disableUpstreamValidation : bool, default is Undefined, optional
        If true, the remote repository upstream and upstream credentials will
        not be validated.
    dockerRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0], default is Undefined, optional
        Specific settings for a Docker remote repository.
        Structure is documented below.
    mavenRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0], default is Undefined, optional
        Specific settings for a Maven remote repository.
        Structure is documented below.
    npmRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0], default is Undefined, optional
        Specific settings for an Npm remote repository.
        Structure is documented below.
    pythonRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0], default is Undefined, optional
        Specific settings for a Python remote repository.
        Structure is documented below.
    upstreamCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0], default is Undefined, optional
        The credentials used to access the remote repository.
        Structure is documented below.
    yumRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0], default is Undefined, optional
        Specific settings for an Yum remote repository.
        Structure is documented below.
    """


    aptRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0]

    description?: str

    disableUpstreamValidation?: bool

    dockerRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0]

    mavenRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0]

    npmRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0]

    pythonRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0]

    upstreamCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0]

    yumRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 apt repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0AptRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 apt repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 docker repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0DockerRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 docker repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 maven repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0MavenRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 maven repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 npm repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0NpmRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 npm repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 python repository items0

    Attributes
    ----------
    customRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0], default is Undefined, optional
        Settings for a remote repository with a custom uri.
        Structure is documented below.
    publicRepository : str, default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    customRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0]

    publicRepository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0PythonRepositoryItems0CustomRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 python repository items0 custom repository items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        Specific uri to the registry, e.g. "https://registry-1.docker.io"
    """


    uri?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 upstream credentials items0

    Attributes
    ----------
    usernamePasswordCredentials : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0], default is Undefined, optional
        Use username and password to access the remote repository.
        Structure is documented below.
    """


    usernamePasswordCredentials?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0UpstreamCredentialsItems0UsernamePasswordCredentialsItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 upstream credentials items0 username password credentials items0

    Attributes
    ----------
    passwordSecretVersion : str, default is Undefined, optional
        The Secret Manager key version that holds the password to access the
        remote repository. Must be in the format of
        projects/{project}/secrets/{secret}/versions/{version}.
    username : str, default is Undefined, optional
        The username to access the remote repository.
    """


    passwordSecretVersion?: str

    username?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 yum repository items0

    Attributes
    ----------
    publicRepository : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0], default is Undefined, optional
        One of the publicly available Yum repositories supported by Artifact Registry.
        Structure is documented below.
    """


    publicRepository?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderRemoteRepositoryConfigItems0YumRepositoryItems0PublicRepositoryItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider remote repository config items0 yum repository items0 public repository items0

    Attributes
    ----------
    repositoryBase : str, default is Undefined, optional
        A common public repository base for Yum.
        Possible values are: CENTOS, CENTOS_DEBUG, CENTOS_VAULT, CENTOS_STREAM, ROCKY, EPEL.
    repositoryPath : str, default is Undefined, optional
        Specific repository from the base, e.g. "centos/8-stream/BaseOS/x86_64/os"
    """


    repositoryBase?: str

    repositoryPath?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider virtual repository config items0

    Attributes
    ----------
    upstreamPolicies : [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0], default is Undefined, optional
        Policies that configure the upstream artifacts distributed by the Virtual
        Repository. Upstream policies cannot be set on a standard repository.
        Structure is documented below.
    """


    upstreamPolicies?: [ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0]


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusAtProviderVirtualRepositoryConfigItems0UpstreamPoliciesItems0:
    r"""
    artifact gcp upbound io v1beta1 registry repository status at provider virtual repository config items0 upstream policies items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The user-provided ID of the upstream policy.
    priority : float, default is Undefined, optional
        Entries with a greater priority value take precedence in the pull order.
    repository : str, default is Undefined, optional
        A reference to the repository resource, for example:
        "projects/p1/locations/us-central1/repository/repo1".
    """


    id?: str

    priority?: float

    repository?: str


schema ArtifactGcpUpboundIoV1beta1RegistryRepositoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


