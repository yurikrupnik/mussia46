"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema Bucket:
    r"""
    Bucket is the Schema for the Buckets API. Creates a new bucket in Google Cloud Storage.

    Attributes
    ----------
    apiVersion : str, default is "storage.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Bucket", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageGcpUpboundIoV1beta1BucketSpec, default is Undefined, required
        spec
    status : StorageGcpUpboundIoV1beta1BucketStatus, default is Undefined, optional
        status
    """
    apiVersion: "storage.gcp.upbound.io/v1beta1" = "storage.gcp.upbound.io/v1beta1"

    kind: "Bucket" = "Bucket"

    metadata?: v1.ObjectMeta
    spec: StorageGcpUpboundIoV1beta1BucketSpec

    status?: StorageGcpUpboundIoV1beta1BucketStatus

schema StorageGcpUpboundIoV1beta1BucketSpec:
    r"""
    BucketSpec defines the desired state of Bucket

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageGcpUpboundIoV1beta1BucketSpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageGcpUpboundIoV1beta1BucketSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageGcpUpboundIoV1beta1BucketSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: StorageGcpUpboundIoV1beta1BucketSpecForProvider

    initProvider?: StorageGcpUpboundIoV1beta1BucketSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRef
    publishConnectionDetailsTo?: StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: StorageGcpUpboundIoV1beta1BucketSpecWriteConnectionSecretToRef

schema StorageGcpUpboundIoV1beta1BucketSpecForProvider:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider

    Attributes
    ----------
    autoclass : [StorageGcpUpboundIoV1beta1BucketSpecForProviderAutoclassItems0], default is Undefined, optional
        The bucket's Autoclass configuration.  Structure is documented below.
    cors : [StorageGcpUpboundIoV1beta1BucketSpecForProviderCorsItems0], default is Undefined, optional
        The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    customPlacementConfig : [StorageGcpUpboundIoV1beta1BucketSpecForProviderCustomPlacementConfigItems0], default is Undefined, optional
        The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    defaultEventBasedHold : bool, default is Undefined, optional
        Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    enableObjectRetention : bool, default is Undefined, optional
        Enables object retention on a storage bucket.
    encryption : [StorageGcpUpboundIoV1beta1BucketSpecForProviderEncryptionItems0], default is Undefined, optional
        The bucket's encryption configuration. Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        When deleting a bucket, this
        boolean option will delete all contained objects.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the bucket.
    lifecycleRule : [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0], default is Undefined, optional
        The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    location : str, default is Undefined, optional
        The GCS location.
    logging : [StorageGcpUpboundIoV1beta1BucketSpecForProviderLoggingItems0], default is Undefined, optional
        The bucket's Access & Storage Logs configuration. Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    publicAccessPrevention : str, default is Undefined, optional
        Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    requesterPays : bool, default is Undefined, optional
        Enables Requester Pays on a storage bucket.
    retentionPolicy : [StorageGcpUpboundIoV1beta1BucketSpecForProviderRetentionPolicyItems0], default is Undefined, optional
        Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    rpo : str, default is Undefined, optional
        The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    softDeletePolicy : [StorageGcpUpboundIoV1beta1BucketSpecForProviderSoftDeletePolicyItems0], default is Undefined, optional
        The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    uniformBucketLevelAccess : bool, default is Undefined, optional
        Enables Uniform bucket-level access access to a bucket.
    versioning : [StorageGcpUpboundIoV1beta1BucketSpecForProviderVersioningItems0], default is Undefined, optional
        The bucket's Versioning configuration.  Structure is documented below.
    website : [StorageGcpUpboundIoV1beta1BucketSpecForProviderWebsiteItems0], default is Undefined, optional
        Configuration if the bucket acts as a website. Structure is documented below.
    """
    autoclass?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderAutoclassItems0]
    cors?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderCorsItems0]
    customPlacementConfig?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderCustomPlacementConfigItems0]
    defaultEventBasedHold?: bool
    enableObjectRetention?: bool
    encryption?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderEncryptionItems0]
    forceDestroy?: bool
    labels?: {str:str}
    lifecycleRule?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0]
    location?: str
    logging?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderLoggingItems0]
    project?: str
    publicAccessPrevention?: str
    requesterPays?: bool
    retentionPolicy?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderRetentionPolicyItems0]
    rpo?: str
    softDeletePolicy?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderSoftDeletePolicyItems0]
    storageClass?: str
    uniformBucketLevelAccess?: bool
    versioning?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderVersioningItems0]
    website?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderWebsiteItems0]

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderAutoclassItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider autoclass items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.
    terminalStorageClass : str, default is Undefined, optional
        The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.
    """
    enabled?: bool
    terminalStorageClass?: str

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderCorsItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider cors items0

    Attributes
    ----------
    maxAgeSeconds : float, default is Undefined, optional
        The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
    method : [str], default is Undefined, optional
        The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    origin : [str], default is Undefined, optional
        The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    responseHeader : [str], default is Undefined, optional
        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    """
    maxAgeSeconds?: float
    method?: [str]
    origin?: [str]
    responseHeader?: [str]

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderCustomPlacementConfigItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider custom placement config items0

    Attributes
    ----------
    dataLocations : [str], default is Undefined, optional
        The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.
    """
    dataLocations?: [str]

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderEncryptionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider encryption items0

    Attributes
    ----------
    defaultKmsKeyName : str, default is Undefined, optional
        : The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
        You must pay attention to whether the crypto key is available in the location that this bucket is created in.
        See the docs for more details.
    """
    defaultKmsKeyName?: str

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider lifecycle rule items0

    Attributes
    ----------
    action : [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ActionItems0], default is Undefined, optional
        The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
    condition : [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ConditionItems0], default is Undefined, optional
        The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
    """
    action?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ActionItems0]
    condition?: [StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ConditionItems0]

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ActionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider lifecycle rule items0 action items0

    Attributes
    ----------
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    $type : str, default is Undefined, optional
        The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.
    """
    storageClass?: str
    $type?: str

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderLifecycleRuleItems0ConditionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider lifecycle rule items0 condition items0

    Attributes
    ----------
    age : float, default is Undefined, optional
        Minimum age of an object in days to satisfy this condition.
    createdBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
    customTimeBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
    daysSinceCustomTime : float, default is Undefined, optional
        Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime.
    daysSinceNoncurrentTime : float, default is Undefined, optional
        Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
    matchesPrefix : [str], default is Undefined, optional
        One or more matching name prefixes to satisfy this condition.
    matchesStorageClass : [str], default is Undefined, optional
        Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.
    matchesSuffix : [str], default is Undefined, optional
        One or more matching name suffixes to satisfy this condition.
    noAge : bool, default is Undefined, optional
        While set true, age value will be omitted. Note Required to set true when age is unset in the config file.
    noncurrentTimeBefore : str, default is Undefined, optional
        Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent.
    numNewerVersions : float, default is Undefined, optional
        Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
    sendAgeIfZero : bool, default is Undefined, optional
        While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.
    sendDaysSinceCustomTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.
    sendDaysSinceNoncurrentTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.
    sendNumNewerVersionsIfZero : bool, default is Undefined, optional
        While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.
    withState : str, default is Undefined, optional
        Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: "LIVE", "ARCHIVED", "ANY".
    """
    age?: float
    createdBefore?: str
    customTimeBefore?: str
    daysSinceCustomTime?: float
    daysSinceNoncurrentTime?: float
    matchesPrefix?: [str]
    matchesStorageClass?: [str]
    matchesSuffix?: [str]
    noAge?: bool
    noncurrentTimeBefore?: str
    numNewerVersions?: float
    sendAgeIfZero?: bool
    sendDaysSinceCustomTimeIfZero?: bool
    sendDaysSinceNoncurrentTimeIfZero?: bool
    sendNumNewerVersionsIfZero?: bool
    withState?: str

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderLoggingItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider logging items0

    Attributes
    ----------
    logBucket : str, default is Undefined, optional
        The bucket that will receive log objects.
    logObjectPrefix : str, default is Undefined, optional
        The object prefix for log objects. If it's not provided,
        by default GCS sets this to this bucket's name.
    """
    logBucket?: str
    logObjectPrefix?: str

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderRetentionPolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider retention policy items0

    Attributes
    ----------
    isLocked : bool, default is Undefined, optional
        If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
    retentionPeriod : float, default is Undefined, optional
        The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
    """
    isLocked?: bool
    retentionPeriod?: float

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderSoftDeletePolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider soft delete policy items0

    Attributes
    ----------
    retentionDurationSeconds : float, default is Undefined, optional
        The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.
    """
    retentionDurationSeconds?: float

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderVersioningItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider versioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, versioning is fully enabled for this bucket.
    """
    enabled?: bool

schema StorageGcpUpboundIoV1beta1BucketSpecForProviderWebsiteItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec for provider website items0

    Attributes
    ----------
    mainPageSuffix : str, default is Undefined, optional
        Behaves as the bucket's directory index where
        missing objects are treated as potential directories.
    notFoundPage : str, default is Undefined, optional
        The custom object to return when a requested
        resource is not found.
    """
    mainPageSuffix?: str
    notFoundPage?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoclass : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderAutoclassItems0], default is Undefined, optional
        The bucket's Autoclass configuration.  Structure is documented below.
    cors : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderCorsItems0], default is Undefined, optional
        The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    customPlacementConfig : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderCustomPlacementConfigItems0], default is Undefined, optional
        The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    defaultEventBasedHold : bool, default is Undefined, optional
        Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    enableObjectRetention : bool, default is Undefined, optional
        Enables object retention on a storage bucket.
    encryption : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderEncryptionItems0], default is Undefined, optional
        The bucket's encryption configuration. Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        When deleting a bucket, this
        boolean option will delete all contained objects.
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the bucket.
    lifecycleRule : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0], default is Undefined, optional
        The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    location : str, default is Undefined, optional
        The GCS location.
    logging : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLoggingItems0], default is Undefined, optional
        The bucket's Access & Storage Logs configuration. Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    publicAccessPrevention : str, default is Undefined, optional
        Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    requesterPays : bool, default is Undefined, optional
        Enables Requester Pays on a storage bucket.
    retentionPolicy : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderRetentionPolicyItems0], default is Undefined, optional
        Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    rpo : str, default is Undefined, optional
        The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    softDeletePolicy : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderSoftDeletePolicyItems0], default is Undefined, optional
        The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    uniformBucketLevelAccess : bool, default is Undefined, optional
        Enables Uniform bucket-level access access to a bucket.
    versioning : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderVersioningItems0], default is Undefined, optional
        The bucket's Versioning configuration.  Structure is documented below.
    website : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderWebsiteItems0], default is Undefined, optional
        Configuration if the bucket acts as a website. Structure is documented below.
    """
    autoclass?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderAutoclassItems0]
    cors?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderCorsItems0]
    customPlacementConfig?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderCustomPlacementConfigItems0]
    defaultEventBasedHold?: bool
    enableObjectRetention?: bool
    encryption?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderEncryptionItems0]
    forceDestroy?: bool
    labels?: {str:str}
    lifecycleRule?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0]
    location?: str
    logging?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLoggingItems0]
    project?: str
    publicAccessPrevention?: str
    requesterPays?: bool
    retentionPolicy?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderRetentionPolicyItems0]
    rpo?: str
    softDeletePolicy?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderSoftDeletePolicyItems0]
    storageClass?: str
    uniformBucketLevelAccess?: bool
    versioning?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderVersioningItems0]
    website?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderWebsiteItems0]

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderAutoclassItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider autoclass items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.
    terminalStorageClass : str, default is Undefined, optional
        The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.
    """
    enabled?: bool
    terminalStorageClass?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderCorsItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider cors items0

    Attributes
    ----------
    maxAgeSeconds : float, default is Undefined, optional
        The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
    method : [str], default is Undefined, optional
        The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    origin : [str], default is Undefined, optional
        The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    responseHeader : [str], default is Undefined, optional
        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    """
    maxAgeSeconds?: float
    method?: [str]
    origin?: [str]
    responseHeader?: [str]

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderCustomPlacementConfigItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider custom placement config items0

    Attributes
    ----------
    dataLocations : [str], default is Undefined, optional
        The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.
    """
    dataLocations?: [str]

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderEncryptionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider encryption items0

    Attributes
    ----------
    defaultKmsKeyName : str, default is Undefined, optional
        : The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
        You must pay attention to whether the crypto key is available in the location that this bucket is created in.
        See the docs for more details.
    """
    defaultKmsKeyName?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider lifecycle rule items0

    Attributes
    ----------
    action : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ActionItems0], default is Undefined, optional
        The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
    condition : [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ConditionItems0], default is Undefined, optional
        The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
    """
    action?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ActionItems0]
    condition?: [StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ConditionItems0]

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ActionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider lifecycle rule items0 action items0

    Attributes
    ----------
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    $type : str, default is Undefined, optional
        The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.
    """
    storageClass?: str
    $type?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderLifecycleRuleItems0ConditionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider lifecycle rule items0 condition items0

    Attributes
    ----------
    age : float, default is Undefined, optional
        Minimum age of an object in days to satisfy this condition.
    createdBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
    customTimeBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
    daysSinceCustomTime : float, default is Undefined, optional
        Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime.
    daysSinceNoncurrentTime : float, default is Undefined, optional
        Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
    matchesPrefix : [str], default is Undefined, optional
        One or more matching name prefixes to satisfy this condition.
    matchesStorageClass : [str], default is Undefined, optional
        Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.
    matchesSuffix : [str], default is Undefined, optional
        One or more matching name suffixes to satisfy this condition.
    noAge : bool, default is Undefined, optional
        While set true, age value will be omitted. Note Required to set true when age is unset in the config file.
    noncurrentTimeBefore : str, default is Undefined, optional
        Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent.
    numNewerVersions : float, default is Undefined, optional
        Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
    sendAgeIfZero : bool, default is Undefined, optional
        While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.
    sendDaysSinceCustomTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.
    sendDaysSinceNoncurrentTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.
    sendNumNewerVersionsIfZero : bool, default is Undefined, optional
        While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.
    withState : str, default is Undefined, optional
        Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: "LIVE", "ARCHIVED", "ANY".
    """
    age?: float
    createdBefore?: str
    customTimeBefore?: str
    daysSinceCustomTime?: float
    daysSinceNoncurrentTime?: float
    matchesPrefix?: [str]
    matchesStorageClass?: [str]
    matchesSuffix?: [str]
    noAge?: bool
    noncurrentTimeBefore?: str
    numNewerVersions?: float
    sendAgeIfZero?: bool
    sendDaysSinceCustomTimeIfZero?: bool
    sendDaysSinceNoncurrentTimeIfZero?: bool
    sendNumNewerVersionsIfZero?: bool
    withState?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderLoggingItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider logging items0

    Attributes
    ----------
    logBucket : str, default is Undefined, optional
        The bucket that will receive log objects.
    logObjectPrefix : str, default is Undefined, optional
        The object prefix for log objects. If it's not provided,
        by default GCS sets this to this bucket's name.
    """
    logBucket?: str
    logObjectPrefix?: str

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderRetentionPolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider retention policy items0

    Attributes
    ----------
    isLocked : bool, default is Undefined, optional
        If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
    retentionPeriod : float, default is Undefined, optional
        The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
    """
    isLocked?: bool
    retentionPeriod?: float

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderSoftDeletePolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider soft delete policy items0

    Attributes
    ----------
    retentionDurationSeconds : float, default is Undefined, optional
        The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.
    """
    retentionDurationSeconds?: float

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderVersioningItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider versioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, versioning is fully enabled for this bucket.
    """
    enabled?: bool

schema StorageGcpUpboundIoV1beta1BucketSpecInitProviderWebsiteItems0:
    r"""
    storage gcp upbound io v1beta1 bucket spec init provider website items0

    Attributes
    ----------
    mainPageSuffix : str, default is Undefined, optional
        Behaves as the bucket's directory index where
        missing objects are treated as potential directories.
    notFoundPage : str, default is Undefined, optional
        The custom object to return when a requested
        resource is not found.
    """
    mainPageSuffix?: str
    notFoundPage?: str

schema StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRefPolicy

schema StorageGcpUpboundIoV1beta1BucketSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRef
    metadata?: StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToMetadata
    name: str

schema StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRefPolicy

schema StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1BucketSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema StorageGcpUpboundIoV1beta1BucketSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta1BucketStatus:
    r"""
    BucketStatus defines the observed state of Bucket.

    Attributes
    ----------
    atProvider : StorageGcpUpboundIoV1beta1BucketStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageGcpUpboundIoV1beta1BucketStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """
    atProvider?: StorageGcpUpboundIoV1beta1BucketStatusAtProvider
    conditions?: [StorageGcpUpboundIoV1beta1BucketStatusConditionsItems0]
    observedGeneration?: int

schema StorageGcpUpboundIoV1beta1BucketStatusAtProvider:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider

    Attributes
    ----------
    autoclass : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderAutoclassItems0], default is Undefined, optional
        The bucket's Autoclass configuration.  Structure is documented below.
    cors : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderCorsItems0], default is Undefined, optional
        The bucket's Cross-Origin Resource Sharing (CORS) configuration. Multiple blocks of this type are permitted. Structure is documented below.
    customPlacementConfig : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderCustomPlacementConfigItems0], default is Undefined, optional
        The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket. If the bucket is designated a single or multi-region, the parameters are empty. Structure is documented below.
    defaultEventBasedHold : bool, default is Undefined, optional
        Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
    effectiveLabels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the bucket.
    enableObjectRetention : bool, default is Undefined, optional
        Enables object retention on a storage bucket.
    encryption : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderEncryptionItems0], default is Undefined, optional
        The bucket's encryption configuration. Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        When deleting a bucket, this
        boolean option will delete all contained objects.
    id : str, default is Undefined, optional
        id
    labels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the bucket.
    lifecycleRule : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0], default is Undefined, optional
        The bucket's Lifecycle Rules configuration. Multiple blocks of this type are permitted. Structure is documented below.
    location : str, default is Undefined, optional
        The GCS location.
    logging : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLoggingItems0], default is Undefined, optional
        The bucket's Access & Storage Logs configuration. Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    projectNumber : float, default is Undefined, optional
        project number
    publicAccessPrevention : str, default is Undefined, optional
        Prevents public access to a bucket. Acceptable values are "inherited" or "enforced". If "inherited", the bucket uses public access prevention. only if the bucket is subject to the public access prevention organization policy constraint. Defaults to "inherited".
    requesterPays : bool, default is Undefined, optional
        Enables Requester Pays on a storage bucket.
    retentionPolicy : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderRetentionPolicyItems0], default is Undefined, optional
        Configuration of the bucket's data retention policy for how long objects in the bucket should be retained. Structure is documented below.
    rpo : str, default is Undefined, optional
        The recovery point objective for cross-region replication of the bucket. Applicable only for dual and multi-region buckets. "DEFAULT" sets default replication. "ASYNC_TURBO" value enables turbo replication, valid for dual-region buckets only. See Turbo Replication for more information. If rpo is not specified at bucket creation, it defaults to "DEFAULT" for dual and multi-region buckets. NOTE If used with single-region bucket, It will throw an error.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    softDeletePolicy : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderSoftDeletePolicyItems0], default is Undefined, optional
        The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot be permanently deleted. Structure is documented below.
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    terraformLabels : {str:str}, default is Undefined, optional
        A map of key/value label pairs to assign to the bucket.
    uniformBucketLevelAccess : bool, default is Undefined, optional
        Enables Uniform bucket-level access access to a bucket.
    url : str, default is Undefined, optional
        The base URL of the bucket, in the format gs://<bucket-name>.
    versioning : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderVersioningItems0], default is Undefined, optional
        The bucket's Versioning configuration.  Structure is documented below.
    website : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderWebsiteItems0], default is Undefined, optional
        Configuration if the bucket acts as a website. Structure is documented below.
    """
    autoclass?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderAutoclassItems0]
    cors?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderCorsItems0]
    customPlacementConfig?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderCustomPlacementConfigItems0]
    defaultEventBasedHold?: bool
    effectiveLabels?: {str:str}
    enableObjectRetention?: bool
    encryption?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderEncryptionItems0]
    forceDestroy?: bool
    id?: str
    labels?: {str:str}
    lifecycleRule?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0]
    location?: str
    logging?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLoggingItems0]
    project?: str
    projectNumber?: float
    publicAccessPrevention?: str
    requesterPays?: bool
    retentionPolicy?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderRetentionPolicyItems0]
    rpo?: str
    selfLink?: str
    softDeletePolicy?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderSoftDeletePolicyItems0]
    storageClass?: str
    terraformLabels?: {str:str}
    uniformBucketLevelAccess?: bool
    url?: str
    versioning?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderVersioningItems0]
    website?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderWebsiteItems0]

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderAutoclassItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider autoclass items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, autoclass automatically transitions objects in your bucket to appropriate storage classes based on each object's access pattern.
    terminalStorageClass : str, default is Undefined, optional
        The storage class that objects in the bucket eventually transition to if they are not read for a certain length of time. Supported values include: NEARLINE, ARCHIVE.
    """
    enabled?: bool
    terminalStorageClass?: str

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderCorsItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider cors items0

    Attributes
    ----------
    maxAgeSeconds : float, default is Undefined, optional
        The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
    method : [str], default is Undefined, optional
        The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
    origin : [str], default is Undefined, optional
        The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
    responseHeader : [str], default is Undefined, optional
        The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
    """
    maxAgeSeconds?: float
    method?: [str]
    origin?: [str]
    responseHeader?: [str]

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderCustomPlacementConfigItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider custom placement config items0

    Attributes
    ----------
    dataLocations : [str], default is Undefined, optional
        The list of individual regions that comprise a dual-region bucket. See Cloud Storage bucket locations for a list of acceptable regions. Note: If any of the data_locations changes, it will recreate the bucket.
    """
    dataLocations?: [str]

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderEncryptionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider encryption items0

    Attributes
    ----------
    defaultKmsKeyName : str, default is Undefined, optional
        : The id of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
        You must pay attention to whether the crypto key is available in the location that this bucket is created in.
        See the docs for more details.
    """
    defaultKmsKeyName?: str

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider lifecycle rule items0

    Attributes
    ----------
    action : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ActionItems0], default is Undefined, optional
        The Lifecycle Rule's action configuration. A single block of this type is supported. Structure is documented below.
    condition : [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ConditionItems0], default is Undefined, optional
        The Lifecycle Rule's condition configuration. A single block of this type is supported. Structure is documented below.
    """
    action?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ActionItems0]
    condition?: [StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ConditionItems0]

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ActionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider lifecycle rule items0 action items0

    Attributes
    ----------
    storageClass : str, default is Undefined, optional
        The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.
    $type : str, default is Undefined, optional
        The type of the action of this Lifecycle Rule. Supported values include: Delete, SetStorageClass and AbortIncompleteMultipartUpload.
    """
    storageClass?: str
    $type?: str

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderLifecycleRuleItems0ConditionItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider lifecycle rule items0 condition items0

    Attributes
    ----------
    age : float, default is Undefined, optional
        Minimum age of an object in days to satisfy this condition.
    createdBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
    customTimeBefore : str, default is Undefined, optional
        A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
    daysSinceCustomTime : float, default is Undefined, optional
        Days since the date set in the customTime metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the customTime.
    daysSinceNoncurrentTime : float, default is Undefined, optional
        Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
    matchesPrefix : [str], default is Undefined, optional
        One or more matching name prefixes to satisfy this condition.
    matchesStorageClass : [str], default is Undefined, optional
        Storage Class of objects to satisfy this condition. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.
    matchesSuffix : [str], default is Undefined, optional
        One or more matching name suffixes to satisfy this condition.
    noAge : bool, default is Undefined, optional
        While set true, age value will be omitted. Note Required to set true when age is unset in the config file.
    noncurrentTimeBefore : str, default is Undefined, optional
        Relevant only for versioned objects. The date in RFC 3339 (e.g. 2017-06-13) when the object became nonconcurrent.
    numNewerVersions : float, default is Undefined, optional
        Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
    sendAgeIfZero : bool, default is Undefined, optional
        While set true, age value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the age field. It can be used alone or together with age attribute. NOTE age attibute with 0 value will be ommitted from the API request if send_age_if_zero field is having false value.
    sendDaysSinceCustomTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_custom_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_custom_time field. It can be used alone or together with days_since_custom_time.
    sendDaysSinceNoncurrentTimeIfZero : bool, default is Undefined, optional
        While set true, days_since_noncurrent_time value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the days_since_noncurrent_time field. It can be used alone or together with days_since_noncurrent_time.
    sendNumNewerVersionsIfZero : bool, default is Undefined, optional
        While set true, num_newer_versions value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the num_newer_versions field. It can be used alone or together with num_newer_versions.
    withState : str, default is Undefined, optional
        Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: "LIVE", "ARCHIVED", "ANY".
    """
    age?: float
    createdBefore?: str
    customTimeBefore?: str
    daysSinceCustomTime?: float
    daysSinceNoncurrentTime?: float
    matchesPrefix?: [str]
    matchesStorageClass?: [str]
    matchesSuffix?: [str]
    noAge?: bool
    noncurrentTimeBefore?: str
    numNewerVersions?: float
    sendAgeIfZero?: bool
    sendDaysSinceCustomTimeIfZero?: bool
    sendDaysSinceNoncurrentTimeIfZero?: bool
    sendNumNewerVersionsIfZero?: bool
    withState?: str

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderLoggingItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider logging items0

    Attributes
    ----------
    logBucket : str, default is Undefined, optional
        The bucket that will receive log objects.
    logObjectPrefix : str, default is Undefined, optional
        The object prefix for log objects. If it's not provided,
        by default GCS sets this to this bucket's name.
    """
    logBucket?: str
    logObjectPrefix?: str

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderRetentionPolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider retention policy items0

    Attributes
    ----------
    isLocked : bool, default is Undefined, optional
        If set to true, the bucket will be locked and permanently restrict edits to the bucket's retention policy.  Caution: Locking a bucket is an irreversible action.
    retentionPeriod : float, default is Undefined, optional
        The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
    """
    isLocked?: bool
    retentionPeriod?: float

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderSoftDeletePolicyItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider soft delete policy items0

    Attributes
    ----------
    effectiveTime : str, default is Undefined, optional
        (Computed) Server-determined value that indicates the time from which the policy, or one with a greater retention, was effective. This value is in RFC 3339 format.
    retentionDurationSeconds : float, default is Undefined, optional
        The duration in seconds that soft-deleted objects in the bucket will be retained and cannot be permanently deleted. Default value is 604800. The value must be in between 604800(7 days) and 7776000(90 days). Note: To disable the soft delete policy on a bucket, This field must be set to 0.
    """
    effectiveTime?: str
    retentionDurationSeconds?: float

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderVersioningItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider versioning items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        While set to true, versioning is fully enabled for this bucket.
    """
    enabled?: bool

schema StorageGcpUpboundIoV1beta1BucketStatusAtProviderWebsiteItems0:
    r"""
    storage gcp upbound io v1beta1 bucket status at provider website items0

    Attributes
    ----------
    mainPageSuffix : str, default is Undefined, optional
        Behaves as the bucket's directory index where
        missing objects are treated as potential directories.
    notFoundPage : str, default is Undefined, optional
        The custom object to return when a requested
        resource is not found.
    """
    mainPageSuffix?: str
    notFoundPage?: str

schema StorageGcpUpboundIoV1beta1BucketStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

