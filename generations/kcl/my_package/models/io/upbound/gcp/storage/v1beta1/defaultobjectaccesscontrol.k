"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1

schema DefaultObjectAccessControl:
    r"""
    DefaultObjectAccessControl is the Schema for the DefaultObjectAccessControls API. The DefaultObjectAccessControls resources represent the Access Control Lists (ACLs) applied to a new object within a Google Cloud Storage bucket when no ACL was provided for that object.

    Attributes
    ----------
    apiVersion : str, default is "storage.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DefaultObjectAccessControl", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpec, default is Undefined, required
        spec
    status : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatus, default is Undefined, optional
        status
    """
    apiVersion: "storage.gcp.upbound.io/v1beta1" = "storage.gcp.upbound.io/v1beta1"

    kind: "DefaultObjectAccessControl" = "DefaultObjectAccessControl"

    metadata?: v1.ObjectMeta
    spec: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpec

    status?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatus

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpec:
    r"""
    DefaultObjectAccessControlSpec defines the desired state of DefaultObjectAccessControl

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProvider, default is Undefined, required
        for provider
    initProvider : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """
    deletionPolicy?: "Orphan" | "Delete" = "Delete"
    forProvider: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProvider

    initProvider?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProvider
    managementPolicies?: [str] = ["*"]
    providerConfigRef?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRef
    publishConnectionDetailsTo?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsTo
    writeConnectionSecretToRef?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecWriteConnectionSecretToRef

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProvider:
    r"""
    storage gcp upbound io v1beta1 default object access control spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    bucketRef : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    entity : str, default is Undefined, optional
        The entity holding the permission, in one of the following forms:
    object : str, default is Undefined, optional
        The name of the object, if applied to an object.
    role : str, default is Undefined, optional
        The access permission for the entity.
        Possible values are: OWNER, READER.
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelector
    entity?: str
    object?: str
    role?: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    bucketRef : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    entity : str, default is Undefined, optional
        The entity holding the permission, in one of the following forms:
    object : str, default is Undefined, optional
        The name of the object, if applied to an object.
    role : str, default is Undefined, optional
        The access permission for the entity.
        Possible values are: OWNER, READER.
    """
    bucket?: str
    bucketRef?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRef
    bucketSelector?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelector
    entity?: str
    object?: str
    role?: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRefPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """
    matchControllerRef?: bool
    matchLabels?: {str:str}
    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelectorPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRefPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """
    configRef?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRef
    metadata?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToMetadata
    name: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """
    name: str

    policy?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRefPolicy

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """
    resolution?: "Required" | "Optional" = "Required"
    resolve?: "Always" | "IfNotPresent"

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """
    annotations?: {str:str}
    labels?: {str:str}
    $type?: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """
    name: str

    namespace: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatus:
    r"""
    DefaultObjectAccessControlStatus defines the observed state of DefaultObjectAccessControl.

    Attributes
    ----------
    atProvider : StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """
    atProvider?: StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProvider
    conditions?: [StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusConditionsItems0]
    observedGeneration?: int

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProvider:
    r"""
    storage gcp upbound io v1beta1 default object access control status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the bucket.
    domain : str, default is Undefined, optional
        The domain associated with the entity.
    email : str, default is Undefined, optional
        The email address associated with the entity.
    entity : str, default is Undefined, optional
        The entity holding the permission, in one of the following forms:
    entityId : str, default is Undefined, optional
        The ID for the entity
    generation : float, default is Undefined, optional
        The content generation of the object, if applied to an object.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{bucket}}/{{entity}}
    object : str, default is Undefined, optional
        The name of the object, if applied to an object.
    projectTeam : [StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProviderProjectTeamItems0], default is Undefined, optional
        The project team associated with the entity
        Structure is documented below.
    role : str, default is Undefined, optional
        The access permission for the entity.
        Possible values are: OWNER, READER.
    """
    bucket?: str
    domain?: str
    email?: str
    entity?: str
    entityId?: str
    generation?: float
    id?: str
    object?: str
    projectTeam?: [StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProviderProjectTeamItems0]
    role?: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusAtProviderProjectTeamItems0:
    r"""
    storage gcp upbound io v1beta1 default object access control status at provider project team items0

    Attributes
    ----------
    projectNumber : str, default is Undefined, optional
        The project team associated with the entity
    team : str, default is Undefined, optional
        The team.
        Possible values are: editors, owners, viewers.
    """
    projectNumber?: str
    team?: str

schema StorageGcpUpboundIoV1beta1DefaultObjectAccessControlStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """
    lastTransitionTime: str

    message?: str
    observedGeneration?: int
    reason: str

    status: str

    $type: str

