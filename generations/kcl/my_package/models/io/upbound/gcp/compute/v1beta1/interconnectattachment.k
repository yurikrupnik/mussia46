"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InterconnectAttachment:
    r"""
    InterconnectAttachment is the Schema for the InterconnectAttachments API. Represents an InterconnectAttachment (VLAN attachment) resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InterconnectAttachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "InterconnectAttachment" = "InterconnectAttachment"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpec

    status?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatus


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpec:
    r"""
    InterconnectAttachmentSpec defines the desired state of InterconnectAttachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 interconnect attachment spec for provider

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether the VLAN attachment is enabled or disabled.  When using
        PARTNER type this will Pre-Activate the interconnect attachment
    bandwidth : str, default is Undefined, optional
        Provisioned bandwidth capacity for the interconnect attachment.
        For attachments of type DEDICATED, the user can set the bandwidth.
        For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.
        Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,
        Defaults to BPS_10G
        Possible values are: BPS_50M, BPS_100M, BPS_200M, BPS_300M, BPS_400M, BPS_500M, BPS_1G, BPS_2G, BPS_5G, BPS_10G, BPS_20G, BPS_50G.
    candidateSubnets : [str], default is Undefined, optional
        Up to 16 candidate prefixes that can be used to restrict the allocation
        of cloudRouterIpAddress and customerRouterIpAddress for this attachment.
        All prefixes must be within link-local address space (169.254.0.0/16)
        and must be /29 or shorter (/28, /27, etc). Google will attempt to select
        an unused /29 from the supplied candidate prefix(es). The request will
        fail if all possible /29s are in use on Google's edge. If not supplied,
        Google will randomly select an unused /29 from all of link-local space.
    description : str, default is Undefined, optional
        An optional description of this resource.
    edgeAvailabilityDomain : str, default is Undefined, optional
        Desired availability domain for the attachment. Only available for type
        PARTNER, at creation time. For improved reliability, customers should
        configure a pair of attachments with one per availability domain. The
        selected availability domain will be provided to the Partner via the
        pairing key so that the provisioned circuit will lie in the specified
        domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    encryption : str, default is Undefined, optional
        Indicates the user-supplied encryption option of this interconnect
        attachment. Can only be specified at attachment creation for PARTNER or
        DEDICATED attachments.
    interconnect : str, default is Undefined, optional
        URL of the underlying Interconnect object that this attachment's
        traffic will traverse through. Required if type is DEDICATED, must not
        be set if type is PARTNER.
    ipsecInternalAddresses : [str], default is Undefined, optional
        URL of addresses that have been reserved for the interconnect attachment,
        Used only for interconnect attachment that has the encryption option as
        IPSEC.
        The addresses must be RFC 1918 IP address ranges. When creating HA VPN
        gateway over the interconnect attachment, if the attachment is configured
        to use an RFC 1918 IP address, then the VPN gateway's IP address will be
        allocated from the IP address range specified here.
        For example, if the HA VPN gateway's interface 0 is paired to this
        interconnect attachment, then an RFC 1918 IP address for the VPN gateway
        interface 0 will be allocated from the IP address specified for this
        interconnect attachment.
        If this field is not specified for interconnect attachment that has
        encryption option as IPSEC, later on when creating HA VPN gateway on this
        interconnect attachment, the HA VPN gateway's IP address will be
        allocated from regional external IP address pool.
    ipsecInternalAddressesRefs : [ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0], default is Undefined, optional
        References to Address in compute to populate ipsecInternalAddresses.
    ipsecInternalAddressesSelector : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelector, default is Undefined, optional
        ipsec internal addresses selector
    mtu : str, default is Undefined, optional
        Maximum Transmission Unit (MTU), in bytes, of packets passing through
        this interconnect attachment. Currently, only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        Region where the regional interconnect attachment resides.
    router : str, default is Undefined, optional
        URL of the cloud router to be used for dynamic routing. This router must be in
        the same region as this InterconnectAttachment. The InterconnectAttachment will
        automatically connect the Interconnect to the network & region within which the
        Cloud Router is configured.
    routerRef : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelector, default is Undefined, optional
        router selector
    stackType : str, default is Undefined, optional
        The stack type for this interconnect attachment to identify whether the IPv6
        feature is enabled or not. If not specified, IPV4_ONLY will be used.
        This field can be both set at interconnect attachments creation and update
        interconnect attachment operations.
        Possible values are: IPV4_IPV6, IPV4_ONLY.
    subnetLength : float, default is Undefined, optional
        Length of the IPv4 subnet mask. Allowed values: 29 (default), 30. The default value is 29,
        except for Cross-Cloud Interconnect connections that use an InterconnectRemoteLocation with a
        constraints.subnetLengthRange.min equal to 30. For example, connections that use an Azure
        remote location fall into this category. In these cases, the default value is 30, and
        requesting 29 returns an error. Where both 29 and 30 are allowed, 29 is preferred, because it
        gives Google Cloud Support more debugging visibility.
    $type : str, default is Undefined, optional
        The type of InterconnectAttachment you wish to create. Defaults to
        DEDICATED.
        Possible values are: DEDICATED, PARTNER, PARTNER_PROVIDER.
    vlanTag8021Q : float, default is Undefined, optional
        The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When
        using PARTNER type this will be managed upstream.
    """


    adminEnabled?: bool

    bandwidth?: str

    candidateSubnets?: [str]

    description?: str

    edgeAvailabilityDomain?: str

    encryption?: str

    interconnect?: str

    ipsecInternalAddresses?: [str]

    ipsecInternalAddressesRefs?: [ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0]

    ipsecInternalAddressesSelector?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelector

    mtu?: str

    project?: str

    region: str

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelector

    stackType?: str

    subnetLength?: float

    $type?: str

    vlanTag8021Q?: float


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelector:
    r"""
    Selector for a list of Address in compute to populate ipsecInternalAddresses.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderIpsecInternalAddressesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRef:
    r"""
    Reference to a Router in compute to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelector:
    r"""
    Selector for a Router in compute to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecForProviderRouterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether the VLAN attachment is enabled or disabled.  When using
        PARTNER type this will Pre-Activate the interconnect attachment
    bandwidth : str, default is Undefined, optional
        Provisioned bandwidth capacity for the interconnect attachment.
        For attachments of type DEDICATED, the user can set the bandwidth.
        For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.
        Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,
        Defaults to BPS_10G
        Possible values are: BPS_50M, BPS_100M, BPS_200M, BPS_300M, BPS_400M, BPS_500M, BPS_1G, BPS_2G, BPS_5G, BPS_10G, BPS_20G, BPS_50G.
    candidateSubnets : [str], default is Undefined, optional
        Up to 16 candidate prefixes that can be used to restrict the allocation
        of cloudRouterIpAddress and customerRouterIpAddress for this attachment.
        All prefixes must be within link-local address space (169.254.0.0/16)
        and must be /29 or shorter (/28, /27, etc). Google will attempt to select
        an unused /29 from the supplied candidate prefix(es). The request will
        fail if all possible /29s are in use on Google's edge. If not supplied,
        Google will randomly select an unused /29 from all of link-local space.
    description : str, default is Undefined, optional
        An optional description of this resource.
    edgeAvailabilityDomain : str, default is Undefined, optional
        Desired availability domain for the attachment. Only available for type
        PARTNER, at creation time. For improved reliability, customers should
        configure a pair of attachments with one per availability domain. The
        selected availability domain will be provided to the Partner via the
        pairing key so that the provisioned circuit will lie in the specified
        domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    encryption : str, default is Undefined, optional
        Indicates the user-supplied encryption option of this interconnect
        attachment. Can only be specified at attachment creation for PARTNER or
        DEDICATED attachments.
    interconnect : str, default is Undefined, optional
        URL of the underlying Interconnect object that this attachment's
        traffic will traverse through. Required if type is DEDICATED, must not
        be set if type is PARTNER.
    ipsecInternalAddresses : [str], default is Undefined, optional
        URL of addresses that have been reserved for the interconnect attachment,
        Used only for interconnect attachment that has the encryption option as
        IPSEC.
        The addresses must be RFC 1918 IP address ranges. When creating HA VPN
        gateway over the interconnect attachment, if the attachment is configured
        to use an RFC 1918 IP address, then the VPN gateway's IP address will be
        allocated from the IP address range specified here.
        For example, if the HA VPN gateway's interface 0 is paired to this
        interconnect attachment, then an RFC 1918 IP address for the VPN gateway
        interface 0 will be allocated from the IP address specified for this
        interconnect attachment.
        If this field is not specified for interconnect attachment that has
        encryption option as IPSEC, later on when creating HA VPN gateway on this
        interconnect attachment, the HA VPN gateway's IP address will be
        allocated from regional external IP address pool.
    ipsecInternalAddressesRefs : [ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0], default is Undefined, optional
        References to Address in compute to populate ipsecInternalAddresses.
    ipsecInternalAddressesSelector : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelector, default is Undefined, optional
        ipsec internal addresses selector
    mtu : str, default is Undefined, optional
        Maximum Transmission Unit (MTU), in bytes, of packets passing through
        this interconnect attachment. Currently, only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    router : str, default is Undefined, optional
        URL of the cloud router to be used for dynamic routing. This router must be in
        the same region as this InterconnectAttachment. The InterconnectAttachment will
        automatically connect the Interconnect to the network & region within which the
        Cloud Router is configured.
    routerRef : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelector, default is Undefined, optional
        router selector
    stackType : str, default is Undefined, optional
        The stack type for this interconnect attachment to identify whether the IPv6
        feature is enabled or not. If not specified, IPV4_ONLY will be used.
        This field can be both set at interconnect attachments creation and update
        interconnect attachment operations.
        Possible values are: IPV4_IPV6, IPV4_ONLY.
    subnetLength : float, default is Undefined, optional
        Length of the IPv4 subnet mask. Allowed values: 29 (default), 30. The default value is 29,
        except for Cross-Cloud Interconnect connections that use an InterconnectRemoteLocation with a
        constraints.subnetLengthRange.min equal to 30. For example, connections that use an Azure
        remote location fall into this category. In these cases, the default value is 30, and
        requesting 29 returns an error. Where both 29 and 30 are allowed, 29 is preferred, because it
        gives Google Cloud Support more debugging visibility.
    $type : str, default is Undefined, optional
        The type of InterconnectAttachment you wish to create. Defaults to
        DEDICATED.
        Possible values are: DEDICATED, PARTNER, PARTNER_PROVIDER.
    vlanTag8021Q : float, default is Undefined, optional
        The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When
        using PARTNER type this will be managed upstream.
    """


    adminEnabled?: bool

    bandwidth?: str

    candidateSubnets?: [str]

    description?: str

    edgeAvailabilityDomain?: str

    encryption?: str

    interconnect?: str

    ipsecInternalAddresses?: [str]

    ipsecInternalAddressesRefs?: [ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0]

    ipsecInternalAddressesSelector?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelector

    mtu?: str

    project?: str

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelector

    stackType?: str

    subnetLength?: float

    $type?: str

    vlanTag8021Q?: float


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelector:
    r"""
    Selector for a list of Address in compute to populate ipsecInternalAddresses.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelectorPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderIpsecInternalAddressesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRef:
    r"""
    Reference to a Router in compute to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelector:
    r"""
    Selector for a Router in compute to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecInitProviderRouterSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatus:
    r"""
    InterconnectAttachmentStatus defines the observed state of InterconnectAttachment.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 interconnect attachment status at provider

    Attributes
    ----------
    adminEnabled : bool, default is Undefined, optional
        Whether the VLAN attachment is enabled or disabled.  When using
        PARTNER type this will Pre-Activate the interconnect attachment
    bandwidth : str, default is Undefined, optional
        Provisioned bandwidth capacity for the interconnect attachment.
        For attachments of type DEDICATED, the user can set the bandwidth.
        For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.
        Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED,
        Defaults to BPS_10G
        Possible values are: BPS_50M, BPS_100M, BPS_200M, BPS_300M, BPS_400M, BPS_500M, BPS_1G, BPS_2G, BPS_5G, BPS_10G, BPS_20G, BPS_50G.
    candidateSubnets : [str], default is Undefined, optional
        Up to 16 candidate prefixes that can be used to restrict the allocation
        of cloudRouterIpAddress and customerRouterIpAddress for this attachment.
        All prefixes must be within link-local address space (169.254.0.0/16)
        and must be /29 or shorter (/28, /27, etc). Google will attempt to select
        an unused /29 from the supplied candidate prefix(es). The request will
        fail if all possible /29s are in use on Google's edge. If not supplied,
        Google will randomly select an unused /29 from all of link-local space.
    cloudRouterIpAddress : str, default is Undefined, optional
        IPv4 address + prefix length to be configured on Cloud Router
        Interface for this interconnect attachment.
    cloudRouterIpv6Address : str, default is Undefined, optional
        IPv6 address + prefix length to be configured on Cloud Router
        Interface for this interconnect attachment.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    customerRouterIpAddress : str, default is Undefined, optional
        IPv4 address + prefix length to be configured on the customer
        router subinterface for this interconnect attachment.
    customerRouterIpv6Address : str, default is Undefined, optional
        IPv6 address + prefix length to be configured on the customer
        router subinterface for this interconnect attachment.
    description : str, default is Undefined, optional
        An optional description of this resource.
    edgeAvailabilityDomain : str, default is Undefined, optional
        Desired availability domain for the attachment. Only available for type
        PARTNER, at creation time. For improved reliability, customers should
        configure a pair of attachments with one per availability domain. The
        selected availability domain will be provided to the Partner via the
        pairing key so that the provisioned circuit will lie in the specified
        domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    encryption : str, default is Undefined, optional
        Indicates the user-supplied encryption option of this interconnect
        attachment. Can only be specified at attachment creation for PARTNER or
        DEDICATED attachments.
    googleReferenceId : str, default is Undefined, optional
        Google reference ID, to be used when raising support tickets with
        Google or otherwise to debug backend connectivity issues.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/interconnectAttachments/{{name}}
    interconnect : str, default is Undefined, optional
        URL of the underlying Interconnect object that this attachment's
        traffic will traverse through. Required if type is DEDICATED, must not
        be set if type is PARTNER.
    ipsecInternalAddresses : [str], default is Undefined, optional
        URL of addresses that have been reserved for the interconnect attachment,
        Used only for interconnect attachment that has the encryption option as
        IPSEC.
        The addresses must be RFC 1918 IP address ranges. When creating HA VPN
        gateway over the interconnect attachment, if the attachment is configured
        to use an RFC 1918 IP address, then the VPN gateway's IP address will be
        allocated from the IP address range specified here.
        For example, if the HA VPN gateway's interface 0 is paired to this
        interconnect attachment, then an RFC 1918 IP address for the VPN gateway
        interface 0 will be allocated from the IP address specified for this
        interconnect attachment.
        If this field is not specified for interconnect attachment that has
        encryption option as IPSEC, later on when creating HA VPN gateway on this
        interconnect attachment, the HA VPN gateway's IP address will be
        allocated from regional external IP address pool.
    mtu : str, default is Undefined, optional
        Maximum Transmission Unit (MTU), in bytes, of packets passing through
        this interconnect attachment. Currently, only 1440 and 1500 are allowed. If not specified, the value will default to 1440.
    pairingKey : str, default is Undefined, optional
        [Output only for type PARTNER. Not present for DEDICATED]. The opaque
        identifier of an PARTNER attachment used to initiate provisioning with
        a selected partner. Of the form "XXXXX/region/domain"
    partnerAsn : str, default is Undefined, optional
        [Output only for type PARTNER. Not present for DEDICATED]. Optional
        BGP ASN for the router that should be supplied by a layer 3 Partner if
        they configured BGP on behalf of the customer.
    privateInterconnectInfo : [ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProviderPrivateInterconnectInfoItems0], default is Undefined, optional
        Information specific to an InterconnectAttachment. This property
        is populated if the interconnect that this is attached to is of type DEDICATED.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where the regional interconnect attachment resides.
    router : str, default is Undefined, optional
        URL of the cloud router to be used for dynamic routing. This router must be in
        the same region as this InterconnectAttachment. The InterconnectAttachment will
        automatically connect the Interconnect to the network & region within which the
        Cloud Router is configured.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    stackType : str, default is Undefined, optional
        The stack type for this interconnect attachment to identify whether the IPv6
        feature is enabled or not. If not specified, IPV4_ONLY will be used.
        This field can be both set at interconnect attachments creation and update
        interconnect attachment operations.
        Possible values are: IPV4_IPV6, IPV4_ONLY.
    state : str, default is Undefined, optional
        [Output Only] The current state of this attachment's functionality.
    subnetLength : float, default is Undefined, optional
        Length of the IPv4 subnet mask. Allowed values: 29 (default), 30. The default value is 29,
        except for Cross-Cloud Interconnect connections that use an InterconnectRemoteLocation with a
        constraints.subnetLengthRange.min equal to 30. For example, connections that use an Azure
        remote location fall into this category. In these cases, the default value is 30, and
        requesting 29 returns an error. Where both 29 and 30 are allowed, 29 is preferred, because it
        gives Google Cloud Support more debugging visibility.
    $type : str, default is Undefined, optional
        The type of InterconnectAttachment you wish to create. Defaults to
        DEDICATED.
        Possible values are: DEDICATED, PARTNER, PARTNER_PROVIDER.
    vlanTag8021Q : float, default is Undefined, optional
        The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When
        using PARTNER type this will be managed upstream.
    """


    adminEnabled?: bool

    bandwidth?: str

    candidateSubnets?: [str]

    cloudRouterIpAddress?: str

    cloudRouterIpv6Address?: str

    creationTimestamp?: str

    customerRouterIpAddress?: str

    customerRouterIpv6Address?: str

    description?: str

    edgeAvailabilityDomain?: str

    encryption?: str

    googleReferenceId?: str

    id?: str

    interconnect?: str

    ipsecInternalAddresses?: [str]

    mtu?: str

    pairingKey?: str

    partnerAsn?: str

    privateInterconnectInfo?: [ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProviderPrivateInterconnectInfoItems0]

    project?: str

    region?: str

    router?: str

    selfLink?: str

    stackType?: str

    state?: str

    subnetLength?: float

    $type?: str

    vlanTag8021Q?: float


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusAtProviderPrivateInterconnectInfoItems0:
    r"""
    compute gcp upbound io v1beta1 interconnect attachment status at provider private interconnect info items0

    Attributes
    ----------
    tag8021q : float, default is Undefined, optional
        (Output)
        802.1q encapsulation tag to be used for traffic between
        Google and the customer, going to and from this network and region.
    """


    tag8021q?: float


schema ComputeGcpUpboundIoV1beta1InterconnectAttachmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


