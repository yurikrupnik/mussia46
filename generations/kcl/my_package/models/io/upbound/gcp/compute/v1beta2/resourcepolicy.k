"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ResourcePolicy:
    r"""
    ResourcePolicy is the Schema for the ResourcePolicys API. A policy that can be attached to a resource to specify or schedule actions on that resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ResourcePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2ResourcePolicySpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2ResourcePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "ResourcePolicy" = "ResourcePolicy"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2ResourcePolicySpec

    status?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatus


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpec:
    r"""
    ResourcePolicySpec defines the desired state of ResourcePolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2ResourcePolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProvider:
    r"""
    compute gcp upbound io v1beta2 resource policy spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create the resource.
    diskConsistencyGroupPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderDiskConsistencyGroupPolicy, default is Undefined, optional
        disk consistency group policy
    groupPlacementPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderGroupPlacementPolicy, default is Undefined, optional
        group placement policy
    instanceSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicy, default is Undefined, optional
        instance schedule policy
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        Region where resource policy resides.
    snapshotSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicy, default is Undefined, optional
        snapshot schedule policy
    """


    description?: str

    diskConsistencyGroupPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderDiskConsistencyGroupPolicy

    groupPlacementPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderGroupPlacementPolicy

    instanceSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicy

    project?: str

    region: str

    snapshotSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicy


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderDiskConsistencyGroupPolicy:
    r"""
    Replication consistency group for asynchronous disk replication.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enable disk consistency on the resource policy.
    """


    enabled?: bool


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderGroupPlacementPolicy:
    r"""
    Resource policy for instances used for placement configuration.
    Structure is documented below.

    Attributes
    ----------
    availabilityDomainCount : float, default is Undefined, optional
        The number of availability domains instances will be spread across. If two instances are in different
        availability domain, they will not be put in the same low latency network
    collocation : str, default is Undefined, optional
        Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
        Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created
        with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy
        attached.
        Possible values are: COLLOCATED.
    vmCount : float, default is Undefined, optional
        Number of VMs in this placement group. Google does not recommend that you use this field
        unless you use a compact policy and you want your policy to work only if it contains this
        exact number of VMs.
    """


    availabilityDomainCount?: float

    collocation?: str

    vmCount?: float


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicy:
    r"""
    Resource policy for scheduling instance operations.
    Structure is documented below.

    Attributes
    ----------
    expirationTime : str, default is Undefined, optional
        The expiration time of the schedule. The timestamp is an RFC3339 string.
    startTime : str, default is Undefined, optional
        The start time of the schedule. The timestamp is an RFC3339 string.
    timeZone : str, default is Undefined, optional
        Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
        from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    vmStartSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStartSchedule, default is Undefined, optional
        vm start schedule
    vmStopSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStopSchedule, default is Undefined, optional
        vm stop schedule
    """


    expirationTime?: str

    startTime?: str

    timeZone?: str

    vmStartSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStartSchedule

    vmStopSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStopSchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStartSchedule:
    r"""
    Specifies the schedule for starting instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderInstanceSchedulePolicyVMStopSchedule:
    r"""
    Specifies the schedule for stopping instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicy:
    r"""
    Policy for creating snapshots of persistent disks.
    Structure is documented below.

    Attributes
    ----------
    retentionPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyRetentionPolicy, default is Undefined, optional
        retention policy
    schedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySchedule, default is Undefined, optional
        schedule
    snapshotProperties : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySnapshotProperties, default is Undefined, optional
        snapshot properties
    """


    retentionPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyRetentionPolicy

    schedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySchedule

    snapshotProperties?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySnapshotProperties


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyRetentionPolicy:
    r"""
    Retention policy applied to snapshots created by this resource policy.
    Structure is documented below.

    Attributes
    ----------
    maxRetentionDays : float, default is Undefined, optional
        Maximum age of the snapshot that is allowed to be kept.
    onSourceDiskDelete : str, default is Undefined, optional
        Specifies the behavior to apply to scheduled snapshots when
        the source disk is deleted.
        Default value is KEEP_AUTO_SNAPSHOTS.
        Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.
    """


    maxRetentionDays?: float

    onSourceDiskDelete?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySchedule:
    r"""
    Contains one of an hourlySchedule, dailySchedule, or weeklySchedule.
    Structure is documented below.

    Attributes
    ----------
    dailySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleDailySchedule, default is Undefined, optional
        daily schedule
    hourlySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleHourlySchedule, default is Undefined, optional
        hourly schedule
    weeklySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklySchedule, default is Undefined, optional
        weekly schedule
    """


    dailySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleDailySchedule

    hourlySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleHourlySchedule

    weeklySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklySchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleDailySchedule:
    r"""
    The policy will execute every nth day at the specified time.
    Structure is documented below.

    Attributes
    ----------
    daysInCycle : float, default is Undefined, optional
        Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    daysInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleHourlySchedule:
    r"""
    The policy will execute every nth hour starting at the specified time.
    Structure is documented below.

    Attributes
    ----------
    hoursInCycle : float, default is Undefined, optional
        The number of hours between snapshots.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    hoursInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklySchedule:
    r"""
    Allows specifying a snapshot time for each day of the week.
    Structure is documented below.

    Attributes
    ----------
    dayOfWeeks : [ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0], default is Undefined, optional
        May contain up to seven (one for each day of the week) snapshot times.
        Structure is documented below.
    """


    dayOfWeeks?: [ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0]


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0:
    r"""
    compute gcp upbound io v1beta2 resource policy spec for provider snapshot schedule policy schedule weekly schedule day of weeks items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        The day of the week to create the snapshot. e.g. MONDAY
        Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    day?: str

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecForProviderSnapshotSchedulePolicySnapshotProperties:
    r"""
    Properties with which the snapshots are created, such as labels.
    Structure is documented below.

    Attributes
    ----------
    chainName : str, default is Undefined, optional
        Creates the new snapshot in the snapshot chain labeled with the
        specified name. The chain name must be 1-63 characters long and comply
        with RFC1035.
    guestFlush : bool, default is Undefined, optional
        Whether to perform a 'guest aware' snapshot.
    labels : {str:str}, default is Undefined, optional
        A set of key-value pairs.
    storageLocations : [str], default is Undefined, optional
        Cloud Storage bucket location to store the auto snapshot
        (regional or multi-regional)
    """


    chainName?: str

    guestFlush?: bool

    labels?: {str:str}

    storageLocations?: [str]


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create the resource.
    diskConsistencyGroupPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderDiskConsistencyGroupPolicy, default is Undefined, optional
        disk consistency group policy
    groupPlacementPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderGroupPlacementPolicy, default is Undefined, optional
        group placement policy
    instanceSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicy, default is Undefined, optional
        instance schedule policy
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    snapshotSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicy, default is Undefined, optional
        snapshot schedule policy
    """


    description?: str

    diskConsistencyGroupPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderDiskConsistencyGroupPolicy

    groupPlacementPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderGroupPlacementPolicy

    instanceSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicy

    project?: str

    snapshotSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicy


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderDiskConsistencyGroupPolicy:
    r"""
    Replication consistency group for asynchronous disk replication.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enable disk consistency on the resource policy.
    """


    enabled?: bool


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderGroupPlacementPolicy:
    r"""
    Resource policy for instances used for placement configuration.
    Structure is documented below.

    Attributes
    ----------
    availabilityDomainCount : float, default is Undefined, optional
        The number of availability domains instances will be spread across. If two instances are in different
        availability domain, they will not be put in the same low latency network
    collocation : str, default is Undefined, optional
        Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
        Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created
        with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy
        attached.
        Possible values are: COLLOCATED.
    vmCount : float, default is Undefined, optional
        Number of VMs in this placement group. Google does not recommend that you use this field
        unless you use a compact policy and you want your policy to work only if it contains this
        exact number of VMs.
    """


    availabilityDomainCount?: float

    collocation?: str

    vmCount?: float


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicy:
    r"""
    Resource policy for scheduling instance operations.
    Structure is documented below.

    Attributes
    ----------
    expirationTime : str, default is Undefined, optional
        The expiration time of the schedule. The timestamp is an RFC3339 string.
    startTime : str, default is Undefined, optional
        The start time of the schedule. The timestamp is an RFC3339 string.
    timeZone : str, default is Undefined, optional
        Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
        from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    vmStartSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStartSchedule, default is Undefined, optional
        vm start schedule
    vmStopSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStopSchedule, default is Undefined, optional
        vm stop schedule
    """


    expirationTime?: str

    startTime?: str

    timeZone?: str

    vmStartSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStartSchedule

    vmStopSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStopSchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStartSchedule:
    r"""
    Specifies the schedule for starting instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderInstanceSchedulePolicyVMStopSchedule:
    r"""
    Specifies the schedule for stopping instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicy:
    r"""
    Policy for creating snapshots of persistent disks.
    Structure is documented below.

    Attributes
    ----------
    retentionPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyRetentionPolicy, default is Undefined, optional
        retention policy
    schedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySchedule, default is Undefined, optional
        schedule
    snapshotProperties : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySnapshotProperties, default is Undefined, optional
        snapshot properties
    """


    retentionPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyRetentionPolicy

    schedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySchedule

    snapshotProperties?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySnapshotProperties


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyRetentionPolicy:
    r"""
    Retention policy applied to snapshots created by this resource policy.
    Structure is documented below.

    Attributes
    ----------
    maxRetentionDays : float, default is Undefined, optional
        Maximum age of the snapshot that is allowed to be kept.
    onSourceDiskDelete : str, default is Undefined, optional
        Specifies the behavior to apply to scheduled snapshots when
        the source disk is deleted.
        Default value is KEEP_AUTO_SNAPSHOTS.
        Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.
    """


    maxRetentionDays?: float

    onSourceDiskDelete?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySchedule:
    r"""
    Contains one of an hourlySchedule, dailySchedule, or weeklySchedule.
    Structure is documented below.

    Attributes
    ----------
    dailySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleDailySchedule, default is Undefined, optional
        daily schedule
    hourlySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleHourlySchedule, default is Undefined, optional
        hourly schedule
    weeklySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklySchedule, default is Undefined, optional
        weekly schedule
    """


    dailySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleDailySchedule

    hourlySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleHourlySchedule

    weeklySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklySchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleDailySchedule:
    r"""
    The policy will execute every nth day at the specified time.
    Structure is documented below.

    Attributes
    ----------
    daysInCycle : float, default is Undefined, optional
        Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    daysInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleHourlySchedule:
    r"""
    The policy will execute every nth hour starting at the specified time.
    Structure is documented below.

    Attributes
    ----------
    hoursInCycle : float, default is Undefined, optional
        The number of hours between snapshots.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    hoursInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklySchedule:
    r"""
    Allows specifying a snapshot time for each day of the week.
    Structure is documented below.

    Attributes
    ----------
    dayOfWeeks : [ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0], default is Undefined, optional
        May contain up to seven (one for each day of the week) snapshot times.
        Structure is documented below.
    """


    dayOfWeeks?: [ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0]


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0:
    r"""
    compute gcp upbound io v1beta2 resource policy spec init provider snapshot schedule policy schedule weekly schedule day of weeks items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        The day of the week to create the snapshot. e.g. MONDAY
        Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    day?: str

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecInitProviderSnapshotSchedulePolicySnapshotProperties:
    r"""
    Properties with which the snapshots are created, such as labels.
    Structure is documented below.

    Attributes
    ----------
    chainName : str, default is Undefined, optional
        Creates the new snapshot in the snapshot chain labeled with the
        specified name. The chain name must be 1-63 characters long and comply
        with RFC1035.
    guestFlush : bool, default is Undefined, optional
        Whether to perform a 'guest aware' snapshot.
    labels : {str:str}, default is Undefined, optional
        A set of key-value pairs.
    storageLocations : [str], default is Undefined, optional
        Cloud Storage bucket location to store the auto snapshot
        (regional or multi-regional)
    """


    chainName?: str

    guestFlush?: bool

    labels?: {str:str}

    storageLocations?: [str]


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatus:
    r"""
    ResourcePolicyStatus defines the observed state of ResourcePolicy.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2ResourcePolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2ResourcePolicyStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 resource policy status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create the resource.
    diskConsistencyGroupPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderDiskConsistencyGroupPolicy, default is Undefined, optional
        disk consistency group policy
    groupPlacementPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderGroupPlacementPolicy, default is Undefined, optional
        group placement policy
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/resourcePolicies/{{name}}
    instanceSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicy, default is Undefined, optional
        instance schedule policy
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        Region where resource policy resides.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    snapshotSchedulePolicy : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicy, default is Undefined, optional
        snapshot schedule policy
    """


    description?: str

    diskConsistencyGroupPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderDiskConsistencyGroupPolicy

    groupPlacementPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderGroupPlacementPolicy

    id?: str

    instanceSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicy

    project?: str

    region?: str

    selfLink?: str

    snapshotSchedulePolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicy


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderDiskConsistencyGroupPolicy:
    r"""
    Replication consistency group for asynchronous disk replication.
    Structure is documented below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enable disk consistency on the resource policy.
    """


    enabled?: bool


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderGroupPlacementPolicy:
    r"""
    Resource policy for instances used for placement configuration.
    Structure is documented below.

    Attributes
    ----------
    availabilityDomainCount : float, default is Undefined, optional
        The number of availability domains instances will be spread across. If two instances are in different
        availability domain, they will not be put in the same low latency network
    collocation : str, default is Undefined, optional
        Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
        Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created
        with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy
        attached.
        Possible values are: COLLOCATED.
    vmCount : float, default is Undefined, optional
        Number of VMs in this placement group. Google does not recommend that you use this field
        unless you use a compact policy and you want your policy to work only if it contains this
        exact number of VMs.
    """


    availabilityDomainCount?: float

    collocation?: str

    vmCount?: float


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicy:
    r"""
    Resource policy for scheduling instance operations.
    Structure is documented below.

    Attributes
    ----------
    expirationTime : str, default is Undefined, optional
        The expiration time of the schedule. The timestamp is an RFC3339 string.
    startTime : str, default is Undefined, optional
        The start time of the schedule. The timestamp is an RFC3339 string.
    timeZone : str, default is Undefined, optional
        Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
        from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    vmStartSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStartSchedule, default is Undefined, optional
        vm start schedule
    vmStopSchedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStopSchedule, default is Undefined, optional
        vm stop schedule
    """


    expirationTime?: str

    startTime?: str

    timeZone?: str

    vmStartSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStartSchedule

    vmStopSchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStopSchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStartSchedule:
    r"""
    Specifies the schedule for starting instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderInstanceSchedulePolicyVMStopSchedule:
    r"""
    Specifies the schedule for stopping instances.
    Structure is documented below.

    Attributes
    ----------
    schedule : str, default is Undefined, optional
        Specifies the frequency for the operation, using the unix-cron format.
    """


    schedule?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicy:
    r"""
    Policy for creating snapshots of persistent disks.
    Structure is documented below.

    Attributes
    ----------
    retentionPolicy : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyRetentionPolicy, default is Undefined, optional
        retention policy
    schedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySchedule, default is Undefined, optional
        schedule
    snapshotProperties : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySnapshotProperties, default is Undefined, optional
        snapshot properties
    """


    retentionPolicy?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyRetentionPolicy

    schedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySchedule

    snapshotProperties?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySnapshotProperties


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyRetentionPolicy:
    r"""
    Retention policy applied to snapshots created by this resource policy.
    Structure is documented below.

    Attributes
    ----------
    maxRetentionDays : float, default is Undefined, optional
        Maximum age of the snapshot that is allowed to be kept.
    onSourceDiskDelete : str, default is Undefined, optional
        Specifies the behavior to apply to scheduled snapshots when
        the source disk is deleted.
        Default value is KEEP_AUTO_SNAPSHOTS.
        Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.
    """


    maxRetentionDays?: float

    onSourceDiskDelete?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySchedule:
    r"""
    Contains one of an hourlySchedule, dailySchedule, or weeklySchedule.
    Structure is documented below.

    Attributes
    ----------
    dailySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleDailySchedule, default is Undefined, optional
        daily schedule
    hourlySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleHourlySchedule, default is Undefined, optional
        hourly schedule
    weeklySchedule : ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklySchedule, default is Undefined, optional
        weekly schedule
    """


    dailySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleDailySchedule

    hourlySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleHourlySchedule

    weeklySchedule?: ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklySchedule


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleDailySchedule:
    r"""
    The policy will execute every nth day at the specified time.
    Structure is documented below.

    Attributes
    ----------
    daysInCycle : float, default is Undefined, optional
        Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    daysInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleHourlySchedule:
    r"""
    The policy will execute every nth hour starting at the specified time.
    Structure is documented below.

    Attributes
    ----------
    hoursInCycle : float, default is Undefined, optional
        The number of hours between snapshots.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    hoursInCycle?: float

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklySchedule:
    r"""
    Allows specifying a snapshot time for each day of the week.
    Structure is documented below.

    Attributes
    ----------
    dayOfWeeks : [ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0], default is Undefined, optional
        May contain up to seven (one for each day of the week) snapshot times.
        Structure is documented below.
    """


    dayOfWeeks?: [ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0]


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicyScheduleWeeklyScheduleDayOfWeeksItems0:
    r"""
    compute gcp upbound io v1beta2 resource policy status at provider snapshot schedule policy schedule weekly schedule day of weeks items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        The day of the week to create the snapshot. e.g. MONDAY
        Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
    startTime : str, default is Undefined, optional
        Time within the window to start the operations.
        It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
    """


    day?: str

    startTime?: str


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusAtProviderSnapshotSchedulePolicySnapshotProperties:
    r"""
    Properties with which the snapshots are created, such as labels.
    Structure is documented below.

    Attributes
    ----------
    chainName : str, default is Undefined, optional
        Creates the new snapshot in the snapshot chain labeled with the
        specified name. The chain name must be 1-63 characters long and comply
        with RFC1035.
    guestFlush : bool, default is Undefined, optional
        Whether to perform a 'guest aware' snapshot.
    labels : {str:str}, default is Undefined, optional
        A set of key-value pairs.
    storageLocations : [str], default is Undefined, optional
        Cloud Storage bucket location to store the auto snapshot
        (regional or multi-regional)
    """


    chainName?: str

    guestFlush?: bool

    labels?: {str:str}

    storageLocations?: [str]


schema ComputeGcpUpboundIoV1beta2ResourcePolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


