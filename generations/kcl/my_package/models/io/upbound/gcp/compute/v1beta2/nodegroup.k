"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodeGroup:
    r"""
    NodeGroup is the Schema for the NodeGroups API. Represents a NodeGroup resource to manage a group of sole-tenant nodes.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodeGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2NodeGroupSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2NodeGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "NodeGroup" = "NodeGroup"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2NodeGroupSpec

    status?: ComputeGcpUpboundIoV1beta2NodeGroupStatus


schema ComputeGcpUpboundIoV1beta2NodeGroupSpec:
    r"""
    NodeGroupSpec defines the desired state of NodeGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 node group spec for provider

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    description : str, default is Undefined, optional
        An optional textual description of the resource.
    initialSize : float, default is Undefined, optional
        The initial number of nodes in the node group. One of initial_size or autoscaling_policy must be configured on resource creation.
    maintenancePolicy : str, default is Undefined, optional
        Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.
    maintenanceWindow : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    nodeTemplate : str, default is Undefined, optional
        The URL of the node template to which this node group belongs.
    nodeTemplateRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRef, default is Undefined, optional
        node template ref
    nodeTemplateSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelector, default is Undefined, optional
        node template selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    shareSettings : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettings, default is Undefined, optional
        share settings
    zone : str, default is Undefined, required
        Zone where this node group is located
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderAutoscalingPolicy

    description?: str

    initialSize?: float

    maintenancePolicy?: str

    maintenanceWindow?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderMaintenanceWindow

    nodeTemplate?: str

    nodeTemplateRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRef

    nodeTemplateSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelector

    project?: str

    shareSettings?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettings

    zone: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderAutoscalingPolicy:
    r"""
    If you use sole-tenant nodes for your workloads, you can use the node
    group autoscaler to automatically manage the sizes of your node groups.
    One of initial_size or autoscaling_policy must be configured on resource creation.
    Structure is documented below.

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Maximum size of the node group. Set to a value less than or equal
        to 100 and greater than or equal to min-nodes.
    minNodes : float, default is Undefined, optional
        Minimum size of the node group. Must be less
        than or equal to max-nodes. The default value is 0.
    mode : str, default is Undefined, optional
        The autoscaling mode. Set to one of the following:
    """


    maxNodes?: float

    minNodes?: float

    mode?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderMaintenanceWindow:
    r"""
    contains properties for the timeframe of maintenance
    Structure is documented below.

    Attributes
    ----------
    startTime : str, default is Undefined, optional
        instances.start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
    """


    startTime?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRef:
    r"""
    Reference to a NodeTemplate in compute to populate nodeTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelector:
    r"""
    Selector for a NodeTemplate in compute to populate nodeTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderNodeTemplateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettings:
    r"""
    Share settings for the node group.
    Structure is documented below.

    Attributes
    ----------
    projectMap : [ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0], default is Undefined, optional
        A map of project id and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        Structure is documented below.
    shareType : str, default is Undefined, optional
        Node group sharing type.
        Possible values are: ORGANIZATION, SPECIFIC_PROJECTS, LOCAL.
    """


    projectMap?: [ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0]

    shareType?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0:
    r"""
    compute gcp upbound io v1beta2 node group spec for provider share settings project map items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    idRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRef, default is Undefined, optional
        id ref
    idSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelector, default is Undefined, optional
        id selector
    projectId : str, default is Undefined, optional
        The project id/number should be the same as the key of this project config in the project map.
    projectIdRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    id?: str

    idRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRef

    idSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelector

    projectId?: str

    projectIdRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRef

    projectIdSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelector


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRef:
    r"""
    Reference to a Project in cloudplatform to populate id.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelector:
    r"""
    Selector for a Project in cloudplatform to populate id.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0IDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRef:
    r"""
    Reference to a Project in cloudplatform to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelector:
    r"""
    Selector for a Project in cloudplatform to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecForProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    description : str, default is Undefined, optional
        An optional textual description of the resource.
    initialSize : float, default is Undefined, optional
        The initial number of nodes in the node group. One of initial_size or autoscaling_policy must be configured on resource creation.
    maintenancePolicy : str, default is Undefined, optional
        Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.
    maintenanceWindow : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    nodeTemplate : str, default is Undefined, optional
        The URL of the node template to which this node group belongs.
    nodeTemplateRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRef, default is Undefined, optional
        node template ref
    nodeTemplateSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelector, default is Undefined, optional
        node template selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    shareSettings : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettings, default is Undefined, optional
        share settings
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderAutoscalingPolicy

    description?: str

    initialSize?: float

    maintenancePolicy?: str

    maintenanceWindow?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderMaintenanceWindow

    nodeTemplate?: str

    nodeTemplateRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRef

    nodeTemplateSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelector

    project?: str

    shareSettings?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettings


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderAutoscalingPolicy:
    r"""
    If you use sole-tenant nodes for your workloads, you can use the node
    group autoscaler to automatically manage the sizes of your node groups.
    One of initial_size or autoscaling_policy must be configured on resource creation.
    Structure is documented below.

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Maximum size of the node group. Set to a value less than or equal
        to 100 and greater than or equal to min-nodes.
    minNodes : float, default is Undefined, optional
        Minimum size of the node group. Must be less
        than or equal to max-nodes. The default value is 0.
    mode : str, default is Undefined, optional
        The autoscaling mode. Set to one of the following:
    """


    maxNodes?: float

    minNodes?: float

    mode?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderMaintenanceWindow:
    r"""
    contains properties for the timeframe of maintenance
    Structure is documented below.

    Attributes
    ----------
    startTime : str, default is Undefined, optional
        instances.start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
    """


    startTime?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRef:
    r"""
    Reference to a NodeTemplate in compute to populate nodeTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelector:
    r"""
    Selector for a NodeTemplate in compute to populate nodeTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderNodeTemplateSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettings:
    r"""
    Share settings for the node group.
    Structure is documented below.

    Attributes
    ----------
    projectMap : [ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0], default is Undefined, optional
        A map of project id and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        Structure is documented below.
    shareType : str, default is Undefined, optional
        Node group sharing type.
        Possible values are: ORGANIZATION, SPECIFIC_PROJECTS, LOCAL.
    """


    projectMap?: [ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0]

    shareType?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0:
    r"""
    compute gcp upbound io v1beta2 node group spec init provider share settings project map items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    idRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRef, default is Undefined, optional
        id ref
    idSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelector, default is Undefined, optional
        id selector
    projectId : str, default is Undefined, optional
        The project id/number should be the same as the key of this project config in the project map.
    projectIdRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    id?: str

    idRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRef

    idSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelector

    projectId?: str

    projectIdRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRef

    projectIdSelector?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelector


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRef:
    r"""
    Reference to a Project in cloudplatform to populate id.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelector:
    r"""
    Selector for a Project in cloudplatform to populate id.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0IDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRef:
    r"""
    Reference to a Project in cloudplatform to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelector:
    r"""
    Selector for a Project in cloudplatform to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecInitProviderShareSettingsProjectMapItems0ProjectIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatus:
    r"""
    NodeGroupStatus defines the observed state of NodeGroup.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2NodeGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2NodeGroupStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 node group status at provider

    Attributes
    ----------
    autoscalingPolicy : ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderAutoscalingPolicy, default is Undefined, optional
        autoscaling policy
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional textual description of the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/nodeGroups/{{name}}
    initialSize : float, default is Undefined, optional
        The initial number of nodes in the node group. One of initial_size or autoscaling_policy must be configured on resource creation.
    maintenancePolicy : str, default is Undefined, optional
        Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.
    maintenanceWindow : ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderMaintenanceWindow, default is Undefined, optional
        maintenance window
    nodeTemplate : str, default is Undefined, optional
        The URL of the node template to which this node group belongs.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    shareSettings : ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettings, default is Undefined, optional
        share settings
    size : float, default is Undefined, optional
        The total number of nodes in the node group.
    zone : str, default is Undefined, optional
        Zone where this node group is located
    """


    autoscalingPolicy?: ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderAutoscalingPolicy

    creationTimestamp?: str

    description?: str

    id?: str

    initialSize?: float

    maintenancePolicy?: str

    maintenanceWindow?: ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderMaintenanceWindow

    nodeTemplate?: str

    project?: str

    selfLink?: str

    shareSettings?: ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettings

    size?: float

    zone?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderAutoscalingPolicy:
    r"""
    If you use sole-tenant nodes for your workloads, you can use the node
    group autoscaler to automatically manage the sizes of your node groups.
    One of initial_size or autoscaling_policy must be configured on resource creation.
    Structure is documented below.

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Maximum size of the node group. Set to a value less than or equal
        to 100 and greater than or equal to min-nodes.
    minNodes : float, default is Undefined, optional
        Minimum size of the node group. Must be less
        than or equal to max-nodes. The default value is 0.
    mode : str, default is Undefined, optional
        The autoscaling mode. Set to one of the following:
    """


    maxNodes?: float

    minNodes?: float

    mode?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderMaintenanceWindow:
    r"""
    contains properties for the timeframe of maintenance
    Structure is documented below.

    Attributes
    ----------
    startTime : str, default is Undefined, optional
        instances.start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.
    """


    startTime?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettings:
    r"""
    Share settings for the node group.
    Structure is documented below.

    Attributes
    ----------
    projectMap : [ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettingsProjectMapItems0], default is Undefined, optional
        A map of project id and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        Structure is documented below.
    shareType : str, default is Undefined, optional
        Node group sharing type.
        Possible values are: ORGANIZATION, SPECIFIC_PROJECTS, LOCAL.
    """


    projectMap?: [ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettingsProjectMapItems0]

    shareType?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusAtProviderShareSettingsProjectMapItems0:
    r"""
    compute gcp upbound io v1beta2 node group status at provider share settings project map items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    projectId : str, default is Undefined, optional
        The project id/number should be the same as the key of this project config in the project map.
    """


    id?: str

    projectId?: str


schema ComputeGcpUpboundIoV1beta2NodeGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


