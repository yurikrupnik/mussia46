"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GlobalForwardingRule:
    r"""
    GlobalForwardingRule is the Schema for the GlobalForwardingRules API. Represents a GlobalForwardingRule resource.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GlobalForwardingRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "GlobalForwardingRule" = "GlobalForwardingRule"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpec

    status?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatus


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpec:
    r"""
    GlobalForwardingRuleSpec defines the desired state of GlobalForwardingRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipAddressRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP.
    ipVersion : str, default is Undefined, optional
        The IP Version that will be used by this global forwarding rule.
        Possible values are: IPV4, IPV6.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED.
    metadataFilters : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing
        configuration to a limited set xDS compliant clients. In their xDS
        requests to Loadbalancer, xDS clients present node metadata. If a
        match takes place, the relevant routing configuration is made available
        to those proxies.
        For each metadataFilter in this list, if its filterMatchCriteria is set
        to MATCH_ANY, at least one of the filterLabels must match the
        corresponding label provided in the metadata. If its filterMatchCriteria
        is set to MATCH_ALL, then all of its filterLabels must match with
        corresponding labels in the provided metadata.
        metadataFilters specified here can be overridden by those specified in
        the UrlMap that this ForwardingRule references.
        metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    networkRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The portRange field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    subnetworkRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    target : str, default is Undefined, optional
        The URL of the target resource to receive the matched traffic.  For
        regional forwarding rules, this target must be in the same region as the
        forwarding rule. For global forwarding rules, this target must be a global
        load balancing resource.
        The forwarded traffic must be of a type appropriate to the target object.
    targetRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelector, default is Undefined, optional
        target selector
    """


    description?: str

    ipAddress?: str

    ipAddressRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRef

    ipAddressSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelector

    ipProtocol?: str

    ipVersion?: str

    labels?: {str:str}

    loadBalancingScheme?: str

    metadataFilters?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0]

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelector

    noAutomateDnsZone?: bool

    portRange?: str

    project?: str

    projectRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRef

    projectSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelector

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0]

    sourceIpRanges?: [str]

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelector

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRef:
    r"""
    Reference to a GlobalAddress in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelector:
    r"""
    Selector for a GlobalAddress in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderIPAddressSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec for provider metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the
        provided metadata based on filterMatchCriteria
        This list must not be empty and can have at the most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of
        filterLabels contribute towards the overall metadataFilter match.
        MATCH_ANY - At least one of the filterLabels must have a matching
        label in the provided metadata.
        MATCH_ALL - All filterLabels must have matching labels in the
        provided metadata.
        Possible values are: MATCH_ANY, MATCH_ALL.
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderMetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec for provider metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource; provided by the client when the resource is created.
        The name must be 1-63 characters long, and comply with
        RFC1035.
        Specifically, the name must be 1-63 characters long and match the regular
        expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters must
        be a dash, lowercase letter, or digit, except the last character, which
        cannot be a dash.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, the forwarding rule name must be a 1-20 characters string with
        lowercase letters and numbers and must start with a letter.
    value : str, default is Undefined, optional
        The value that the label must match. The value has a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRef:
    r"""
    Reference to a Network in compute to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelector:
    r"""
    Selector for a Network in compute to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderProjectSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec for provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    serviceDirectoryRegion : str, default is Undefined, optional
        [Optional] Service Directory region to register this global forwarding rule under.
        Default to "us-central1". Only used for PSC for Google APIs. All PSC for
        Google APIs Forwarding Rules on the same network should use the same Service
        Directory region.
    """


    namespace?: str

    serviceDirectoryRegion?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRef:
    r"""
    Reference to a TargetSSLProxy in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelector:
    r"""
    Selector for a TargetSSLProxy in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecForProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipAddressRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP.
    ipVersion : str, default is Undefined, optional
        The IP Version that will be used by this global forwarding rule.
        Possible values are: IPV4, IPV6.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED.
    metadataFilters : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing
        configuration to a limited set xDS compliant clients. In their xDS
        requests to Loadbalancer, xDS clients present node metadata. If a
        match takes place, the relevant routing configuration is made available
        to those proxies.
        For each metadataFilter in this list, if its filterMatchCriteria is set
        to MATCH_ANY, at least one of the filterLabels must match the
        corresponding label provided in the metadata. If its filterMatchCriteria
        is set to MATCH_ALL, then all of its filterLabels must match with
        corresponding labels in the provided metadata.
        metadataFilters specified here can be overridden by those specified in
        the UrlMap that this ForwardingRule references.
        metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    networkRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The portRange field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelector, default is Undefined, optional
        project selector
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    subnetworkRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelector, default is Undefined, optional
        subnetwork selector
    target : str, default is Undefined, optional
        The URL of the target resource to receive the matched traffic.  For
        regional forwarding rules, this target must be in the same region as the
        forwarding rule. For global forwarding rules, this target must be a global
        load balancing resource.
        The forwarded traffic must be of a type appropriate to the target object.
    targetRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelector, default is Undefined, optional
        target selector
    """


    description?: str

    ipAddress?: str

    ipAddressRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRef

    ipAddressSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelector

    ipProtocol?: str

    ipVersion?: str

    labels?: {str:str}

    loadBalancingScheme?: str

    metadataFilters?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0]

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelector

    noAutomateDnsZone?: bool

    portRange?: str

    project?: str

    projectRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRef

    projectSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelector

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0]

    sourceIpRanges?: [str]

    subnetwork?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelector

    target?: str

    targetRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRef

    targetSelector?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelector


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRef:
    r"""
    Reference to a GlobalAddress in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelector:
    r"""
    Selector for a GlobalAddress in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderIPAddressSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec init provider metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the
        provided metadata based on filterMatchCriteria
        This list must not be empty and can have at the most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of
        filterLabels contribute towards the overall metadataFilter match.
        MATCH_ANY - At least one of the filterLabels must have a matching
        label in the provided metadata.
        MATCH_ALL - All filterLabels must have matching labels in the
        provided metadata.
        Possible values are: MATCH_ANY, MATCH_ALL.
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderMetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec init provider metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource; provided by the client when the resource is created.
        The name must be 1-63 characters long, and comply with
        RFC1035.
        Specifically, the name must be 1-63 characters long and match the regular
        expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters must
        be a dash, lowercase letter, or digit, except the last character, which
        cannot be a dash.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, the forwarding rule name must be a 1-20 characters string with
        lowercase letters and numbers and must start with a letter.
    value : str, default is Undefined, optional
        The value that the label must match. The value has a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderNetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRef:
    r"""
    Reference to a Network in compute to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelector:
    r"""
    Selector for a Network in compute to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderProjectSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule spec init provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    serviceDirectoryRegion : str, default is Undefined, optional
        [Optional] Service Directory region to register this global forwarding rule under.
        Default to "us-central1". Only used for PSC for Google APIs. All PSC for
        Google APIs Forwarding Rules on the same network should use the same Service
        Directory region.
    """


    namespace?: str

    serviceDirectoryRegion?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderSubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRef:
    r"""
    Reference to a TargetSSLProxy in compute to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelector:
    r"""
    Selector for a TargetSSLProxy in compute to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelectorPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecInitProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatus:
    r"""
    GlobalForwardingRuleStatus defines the observed state of GlobalForwardingRule.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule status at provider

    Attributes
    ----------
    baseForwardingRule : str, default is Undefined, optional
        [Output Only] The URL for the corresponding base Forwarding Rule. By base Forwarding Rule, we mean the Forwarding Rule that has the same IP address, protocol, and port settings with the current Forwarding Rule, but without sourceIPRanges specified. Always empty if the current Forwarding Rule does not have sourceIPRanges specified.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/forwardingRules/{{name}}
    ipAddress : str, default is Undefined, optional
        IP address for which this forwarding rule accepts traffic. When a client
        sends traffic to this IP address, the forwarding rule directs the traffic
        to the referenced target.
        While creating a forwarding rule, specifying an IPAddress is
        required under the following circumstances:
    ipProtocol : str, default is Undefined, optional
        The IP protocol to which this rule applies.
        For protocol forwarding, valid
        options are TCP, UDP, ESP,
        AH, SCTP, ICMP and
        L3_DEFAULT.
        The valid IP protocols are different for different load balancing products
        as described in Load balancing
        features.
        Possible values are: TCP, UDP, ESP, AH, SCTP, ICMP.
    ipVersion : str, default is Undefined, optional
        The IP Version that will be used by this global forwarding rule.
        Possible values are: IPV4, IPV6.
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this forwarding rule.  A list of key->value pairs.
    loadBalancingScheme : str, default is Undefined, optional
        Specifies the forwarding rule type.
        For more information about forwarding rules, refer to
        Forwarding rule concepts.
        Default value is EXTERNAL.
        Possible values are: EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED.
    metadataFilters : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing
        configuration to a limited set xDS compliant clients. In their xDS
        requests to Loadbalancer, xDS clients present node metadata. If a
        match takes place, the relevant routing configuration is made available
        to those proxies.
        For each metadataFilter in this list, if its filterMatchCriteria is set
        to MATCH_ANY, at least one of the filterLabels must match the
        corresponding label provided in the metadata. If its filterMatchCriteria
        is set to MATCH_ALL, then all of its filterLabels must match with
        corresponding labels in the provided metadata.
        metadataFilters specified here can be overridden by those specified in
        the UrlMap that this ForwardingRule references.
        metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    network : str, default is Undefined, optional
        This field is not used for external load balancing.
        For Internal TCP/UDP Load Balancing, this field identifies the network that
        the load balanced IP should belong to for this Forwarding Rule.
        If the subnetwork is specified, the network of the subnetwork will be used.
        If neither subnetwork nor this field is specified, the default network will
        be used.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, a network must be provided.
    noAutomateDnsZone : bool, default is Undefined, optional
        This is used in PSC consumer ForwardingRule to control whether it should try to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this field.
    portRange : str, default is Undefined, optional
        The portRange field has the following limitations:
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pscConnectionId : str, default is Undefined, optional
        The PSC connection id of the PSC Forwarding Rule.
    pscConnectionStatus : str, default is Undefined, optional
        The PSC connection status of the PSC Forwarding Rule. Possible values: STATUS_UNSPECIFIED, PENDING, ACCEPTED, REJECTED, CLOSED
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    serviceDirectoryRegistrations : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0], default is Undefined, optional
        Service Directory resources to register this forwarding rule with.
        Currently, only supports a single Service Directory resource.
        Structure is documented below.
    sourceIpRanges : [str], default is Undefined, optional
        If not empty, this Forwarding Rule will only forward the traffic when the source IP address matches one of the IP addresses or CIDR ranges set here. Note that a Forwarding Rule can only have up to 64 source IP ranges, and this field can only be used with a regional Forwarding Rule whose scheme is EXTERNAL. Each sourceIpRange entry should be either an IP address (for example, 1.2.3.4) or a CIDR range (for example, 1.2.3.0/24).
    subnetwork : str, default is Undefined, optional
        This field identifies the subnetwork that the load balanced IP should
        belong to for this Forwarding Rule, used in internal load balancing and
        network load balancing with IPv6.
        If the network specified is in auto subnet mode, this field is optional.
        However, a subnetwork must be specified if the network is in custom subnet
        mode or when creating external forwarding rule with IPv6.
    target : str, default is Undefined, optional
        The URL of the target resource to receive the matched traffic.  For
        regional forwarding rules, this target must be in the same region as the
        forwarding rule. For global forwarding rules, this target must be a global
        load balancing resource.
        The forwarded traffic must be of a type appropriate to the target object.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    baseForwardingRule?: str

    description?: str

    effectiveLabels?: {str:str}

    id?: str

    ipAddress?: str

    ipProtocol?: str

    ipVersion?: str

    labelFingerprint?: str

    labels?: {str:str}

    loadBalancingScheme?: str

    metadataFilters?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0]

    network?: str

    noAutomateDnsZone?: bool

    portRange?: str

    project?: str

    pscConnectionId?: str

    pscConnectionStatus?: str

    selfLink?: str

    serviceDirectoryRegistrations?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0]

    sourceIpRanges?: [str]

    subnetwork?: str

    target?: str

    terraformLabels?: {str:str}


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule status at provider metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the
        provided metadata based on filterMatchCriteria
        This list must not be empty and can have at the most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of
        filterLabels contribute towards the overall metadataFilter match.
        MATCH_ANY - At least one of the filterLabels must have a matching
        label in the provided metadata.
        MATCH_ALL - All filterLabels must have matching labels in the
        provided metadata.
        Possible values are: MATCH_ANY, MATCH_ALL.
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderMetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule status at provider metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource; provided by the client when the resource is created.
        The name must be 1-63 characters long, and comply with
        RFC1035.
        Specifically, the name must be 1-63 characters long and match the regular
        expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first
        character must be a lowercase letter, and all following characters must
        be a dash, lowercase letter, or digit, except the last character, which
        cannot be a dash.
        For Private Service Connect forwarding rules that forward traffic to Google
        APIs, the forwarding rule name must be a 1-20 characters string with
        lowercase letters and numbers and must start with a letter.
    value : str, default is Undefined, optional
        The value that the label must match. The value has a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusAtProviderServiceDirectoryRegistrationsItems0:
    r"""
    compute gcp upbound io v1beta1 global forwarding rule status at provider service directory registrations items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Service Directory namespace to register the forwarding rule under.
    serviceDirectoryRegion : str, default is Undefined, optional
        [Optional] Service Directory region to register this global forwarding rule under.
        Default to "us-central1". Only used for PSC for Google APIs. All PSC for
        Google APIs Forwarding Rules on the same network should use the same Service
        Directory region.
    """


    namespace?: str

    serviceDirectoryRegion?: str


schema ComputeGcpUpboundIoV1beta1GlobalForwardingRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


