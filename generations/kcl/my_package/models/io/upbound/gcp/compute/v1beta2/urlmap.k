"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema URLMap:
    r"""
    URLMap is the Schema for the URLMaps API. UrlMaps are used to route requests to a backend service based on rules that you define for the host and path of an incoming URL.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "URLMap", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2URLMapSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2URLMapStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "URLMap" = "URLMap"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2URLMapSpec

    status?: ComputeGcpUpboundIoV1beta2URLMapStatus


schema ComputeGcpUpboundIoV1beta2URLMapSpec:
    r"""
    URLMapSpec defines the desired state of URLMap

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2URLMapSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2URLMapSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2URLMapSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2URLMapSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2URLMapSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider

    Attributes
    ----------
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderAction, default is Undefined, optional
        header action
    hostRule : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    pathMatcher : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    test : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteAction

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelector

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultURLRedirect

    description?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderAction

    hostRule?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHostRuleItems0]

    pathMatcher?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0]

    project?: str

    test?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
    like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
    If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
    is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see
    W3C Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
    As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
    percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
    by the Loadbalancer for a percentage of requests.
    timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
    Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
    the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time the request has been
    fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
    If not specified, will use the largest timeout among all backend services associated with the route.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to the matched service.
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderDefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. The headerAction specified here take effect after
    headerAction specified under pathMatcher.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderAction, default is Undefined, optional
        header action
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteAction

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultURLRedirect

    description?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderAction

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
    advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
    to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
    Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0DefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. HeaderAction specified here are applied after the
    matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    paths?: [str]

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteAction

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector, default is Undefined, optional
        backend service selector
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 path rule items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 path rule items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 path rule items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderAction, default is Undefined, optional
        header action
    matchRules : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderAction

    matchRules?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteAction

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch, default is Undefined, optional
        range match
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch:
    r"""
    The header value must be an integer and its value must be in the range specified
    in rangeMatch. If the header does not contain an integer, number or is empty,
    the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
    not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
    exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
    must be set.
    Structure is documented below.

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider path matcher items0 route rules items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef:
    r"""
    Reference to a BackendService in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector:
    r"""
    Selector for a BackendService in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec for provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelector, default is Undefined, optional
        service selector
    """


    description?: str

    host?: str

    path?: str

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelector


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecForProviderTestItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderAction, default is Undefined, optional
        header action
    hostRule : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    pathMatcher : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    test : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteAction

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelector

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultURLRedirect

    description?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderAction

    hostRule?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHostRuleItems0]

    pathMatcher?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0]

    project?: str

    test?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
    like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
    If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
    is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see
    W3C Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
    As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
    percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
    by the Loadbalancer for a percentage of requests.
    timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
    Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
    the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time the request has been
    fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
    If not specified, will use the largest timeout among all backend services associated with the route.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to the matched service.
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderDefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. The headerAction specified here take effect after
    headerAction specified under pathMatcher.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderAction, default is Undefined, optional
        header action
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteAction

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirect

    description?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderAction

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
    advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
    to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
    Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. HeaderAction specified here are applied after the
    matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    paths?: [str]

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteAction

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector, default is Undefined, optional
        backend service selector
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicyBackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 path rule items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 path rule items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 path rule items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderAction, default is Undefined, optional
        header action
    matchRules : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderAction

    matchRules?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteAction

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch, default is Undefined, optional
        range match
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch:
    r"""
    The header value must be an integer and its value must be in the range specified
    in rangeMatch. If the header does not contain an integer, number or is empty,
    the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
    not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
    exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
    must be set.
    Structure is documented below.

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider path matcher items0 route rules items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef:
    r"""
    Reference to a BackendService in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector:
    r"""
    Selector for a BackendService in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0:
    r"""
    compute gcp upbound io v1beta2 URL map spec init provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelector, default is Undefined, optional
        service selector
    """


    description?: str

    host?: str

    path?: str

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelector


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecInitProviderTestItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2URLMapSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2URLMapSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2URLMapStatus:
    r"""
    URLMapStatus defines the observed state of URLMap.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2URLMapStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2URLMapStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2URLMapStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider

    Attributes
    ----------
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    fingerprint : str, default is Undefined, optional
        Fingerprint of this resource. A hash of the contents stored in this object. This
        field is used in optimistic locking.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderAction, default is Undefined, optional
        header action
    hostRule : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/urlMaps/{{name}}
    mapId : float, default is Undefined, optional
        The unique identifier for the resource.
    pathMatcher : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    test : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    creationTimestamp?: str

    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteAction

    defaultService?: str

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultURLRedirect

    description?: str

    fingerprint?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderAction

    hostRule?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHostRuleItems0]

    id?: str

    mapId?: float

    pathMatcher?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0]

    project?: str

    selfLink?: str

    test?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderTestItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
    like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
    If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
    is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see
    W3C Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
    As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
    percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
    by the Loadbalancer for a percentage of requests.
    timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
    Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
    the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time the request has been
    fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
    If not specified, will use the largest timeout among all backend services associated with the route.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to the matched service.
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderDefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. The headerAction specified here take effect after
    headerAction specified under pathMatcher.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteAction, default is Undefined, optional
        default route action
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultUrlRedirect : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirect, default is Undefined, optional
        default Url redirect
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderAction, default is Undefined, optional
        header action
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteAction

    defaultService?: str

    defaultUrlRedirect?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirect

    description?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderAction

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteAction:
    r"""
    defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
    advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
    to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
    Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
    Only one of defaultRouteAction or defaultUrlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 default route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 default route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 default route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirect:
    r"""
    When none of the specified hostRules match, the request is redirected to a URL specified
    by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
    defaultRouteAction must not be set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. HeaderAction specified here are applied after the
    matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    paths?: [str]

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteAction

    service?: str

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 path rule items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 path rule items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 path rule items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderAction, default is Undefined, optional
        header action
    matchRules : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteAction, default is Undefined, optional
        route action
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    urlRedirect : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirect, default is Undefined, optional
        url redirect
    """


    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderAction

    matchRules?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteAction

    service?: str

    urlRedirect?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirect


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch, default is Undefined, optional
        range match
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatch:
    r"""
    The header value must be an integer and its value must be in the range specified
    in rangeMatch. If the header does not contain an integer, number or is empty,
    the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
    not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
    exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
    must be set.
    Structure is documented below.

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteAction:
    r"""
    In response to a matching matchRule, the load balancer performs advanced routing
    actions like URL rewrites, header transformations, etc. prior to forwarding the
    request to the selected backend. If  routeAction specifies any
    weightedBackendServices, service must not be set. Conversely if service is set,
    routeAction cannot contain any  weightedBackendServices. Only one of routeAction
    or urlRedirect must be set.
    Structure is documented below.

    Attributes
    ----------
    corsPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy, default is Undefined, optional
        cors policy
    faultInjectionPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy, default is Undefined, optional
        fault injection policy
    requestMirrorPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy, default is Undefined, optional
        request mirror policy
    retryPolicy : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy, default is Undefined, optional
        retry policy
    timeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout, default is Undefined, optional
        timeout
    urlRewrite : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite, default is Undefined, optional
        url rewrite
    weightedBackendServices : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy

    faultInjectionPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy

    requestMirrorPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy

    retryPolicy?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy

    timeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout

    urlRewrite?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionCorsPolicy:
    r"""
    The specification for allowing client side cross-origin requests. Please see W3C
    Recommendation for Cross Origin Resource Sharing
    Structure is documented below.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicy:
    r"""
    The specification for fault injection introduced into traffic to test the
    resiliency of clients to backend service failure. As part of fault injection,
    when clients send requests to a backend service, delays can be introduced by
    Loadbalancer on a percentage of requests before sending those request to the
    backend service. Similarly requests from clients can be aborted by the
    Loadbalancer for a percentage of requests. timeout and retry_policy will be
    ignored by clients that are configured with a fault_injection_policy.
    Structure is documented below.

    Attributes
    ----------
    abort : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort, default is Undefined, optional
        abort
    delay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay, default is Undefined, optional
        delay
    """


    abort?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort

    delay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyAbort:
    r"""
    The specification for how client requests are aborted as part of fault
    injection.
    Structure is documented below.

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelay:
    r"""
    The specification for how client requests are delayed as part of fault
    injection, before being sent to a backend service.
    Structure is documented below.

    Attributes
    ----------
    fixedDelay : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay, default is Undefined, optional
        fixed delay
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay

    percentage?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionFaultInjectionPolicyDelayFixedDelay:
    r"""
    Specifies the value of the fixed delay interval.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRequestMirrorPolicy:
    r"""
    Specifies the policy on how requests intended for the route's backends are
    shadowed to a separate mirrored backend service. Loadbalancer does not wait for
    responses from the shadow service. Prior to sending traffic to the shadow
    service, the host / authority header is suffixed with -shadow.
    Structure is documented below.

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicy:
    r"""
    Specifies the retry policy associated with this route.
    Structure is documented below.

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout, default is Undefined, optional
        per try timeout
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionRetryPolicyPerTryTimeout:
    r"""
    Specifies a non-zero timeout per retry attempt.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionTimeout:
    r"""
    Specifies the timeout for the selected route. Timeout is computed from the time
    the request is has been fully processed (i.e. end-of-stream) up until the
    response has been completely processed. Timeout includes all retries. If not
    specified, the default value is 15 seconds.
    Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionURLRewrite:
    r"""
    The spec to modify the URL of the request, prior to forwarding the request to
    the matched service
    Structure is documented below.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 route action weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction, default is Undefined, optional
        header action
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction

    weight?: float


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderAction:
    r"""
    Specifies changes to request and response headers that need to take effect for
    the selected backendService. headerAction specified here take effect before
    headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
    Structure is documented below.

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionRequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 route action weighted backend services items0 header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionWeightedBackendServicesItems0HeaderActionResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider path matcher items0 route rules items0 route action weighted backend services items0 header action response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirect:
    r"""
    When this rule is matched, the request is redirected to a URL specified by
    urlRedirect. If urlRedirect is specified, service or routeAction must not be
    set.
    Structure is documented below.

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta2URLMapStatusAtProviderTestItems0:
    r"""
    compute gcp upbound io v1beta2 URL map status at provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    """


    description?: str

    host?: str

    path?: str

    service?: str


schema ComputeGcpUpboundIoV1beta2URLMapStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


