"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionDisk:
    r"""
    RegionDisk is the Schema for the RegionDisks API. Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionDisk", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RegionDiskSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RegionDiskStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RegionDisk" = "RegionDisk"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RegionDiskSpec

    status?: ComputeGcpUpboundIoV1beta1RegionDiskStatus


schema ComputeGcpUpboundIoV1beta1RegionDiskSpec:
    r"""
    RegionDiskSpec defines the desired state of RegionDisk

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 region disk spec for provider

    Attributes
    ----------
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        A reference to the region where the disk resides.
    replicaZones : [str], default is Undefined, optional
        URLs of the zones where the disk should be replicated to.
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the sourceImage or
        sourceSnapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with sourceImage or sourceSnapshot,
        the value of sizeGb must not be less than the size of the sourceImage
        or the size of the snapshot.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. For example, the following are
        valid values:
    snapshotRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRef, default is Undefined, optional
        snapshot ref
    snapshotSelector : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelector, default is Undefined, optional
        snapshot selector
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    """


    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0]

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0]

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderGuestOsFeaturesItems0]

    labels?: {str:str}

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    region: str

    replicaZones?: [str]

    size?: float

    snapshot?: str

    snapshotRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRef

    snapshotSelector?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelector

    sourceDisk?: str

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSourceSnapshotEncryptionKeyItems0]

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec for provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    diskRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector, default is Undefined, optional
        disk selector
    """


    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRef:
    r"""
    Reference to a RegionDisk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector:
    r"""
    Selector for a RegionDisk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec for provider disk encryption key items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The name of the encryption key that is stored in Google Cloud KMS.
    rawKeySecretRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef, default is Undefined, optional
        raw key secret ref
    """


    kmsKeyName?: str

    rawKeySecretRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef:
    r"""
    Specifies a 256-bit customer-supplied encryption key, encoded in
    RFC 4648 base64 to either encrypt or decrypt this resource.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec for provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRef:
    r"""
    Reference to a Snapshot in compute to populate snapshot.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelector:
    r"""
    Selector for a Snapshot in compute to populate snapshot.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSnapshotSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecForProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec for provider source snapshot encryption key items0

    Attributes
    ----------
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    rawKey?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    replicaZones : [str], default is Undefined, optional
        URLs of the zones where the disk should be replicated to.
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the sourceImage or
        sourceSnapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with sourceImage or sourceSnapshot,
        the value of sizeGb must not be less than the size of the sourceImage
        or the size of the snapshot.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. For example, the following are
        valid values:
    snapshotRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRef, default is Undefined, optional
        snapshot ref
    snapshotSelector : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelector, default is Undefined, optional
        snapshot selector
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    """


    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0]

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0]

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderGuestOsFeaturesItems0]

    labels?: {str:str}

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    replicaZones?: [str]

    size?: float

    snapshot?: str

    snapshotRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRef

    snapshotSelector?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelector

    sourceDisk?: str

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSourceSnapshotEncryptionKeyItems0]

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec init provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    diskRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector, default is Undefined, optional
        disk selector
    """


    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef:
    r"""
    Reference to a RegionDisk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector:
    r"""
    Selector for a RegionDisk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec init provider disk encryption key items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The name of the encryption key that is stored in Google Cloud KMS.
    rawKeySecretRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef, default is Undefined, optional
        raw key secret ref
    """


    kmsKeyName?: str

    rawKeySecretRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef:
    r"""
    Specifies a 256-bit customer-supplied encryption key, encoded in
    RFC 4648 base64 to either encrypt or decrypt this resource.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec init provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRef:
    r"""
    Reference to a Snapshot in compute to populate snapshot.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelector:
    r"""
    Selector for a Snapshot in compute to populate snapshot.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSnapshotSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecInitProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk spec init provider source snapshot encryption key items0

    Attributes
    ----------
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    rawKey?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionDiskStatus:
    r"""
    RegionDiskStatus defines the observed state of RegionDisk.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RegionDiskStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RegionDiskStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 region disk status at provider

    Attributes
    ----------
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/disks/{{name}}
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    lastAttachTimestamp : str, default is Undefined, optional
        Last attach timestamp in RFC3339 text format.
    lastDetachTimestamp : str, default is Undefined, optional
        Last detach timestamp in RFC3339 text format.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        A reference to the region where the disk resides.
    replicaZones : [str], default is Undefined, optional
        URLs of the zones where the disk should be replicated to.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the sourceImage or
        sourceSnapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with sourceImage or sourceSnapshot,
        the value of sizeGb must not be less than the size of the sourceImage
        or the size of the snapshot.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. For example, the following are
        valid values:
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceDiskId : str, default is Undefined, optional
        The ID value of the disk used to create this image. This value may
        be used to determine whether the image was taken from the current
        or a previous instance of a given disk name.
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    sourceSnapshotId : str, default is Undefined, optional
        The unique ID of the snapshot used to create this disk. This value
        identifies the exact snapshot that was used to create this persistent
        disk. For example, if you created the persistent disk from a snapshot
        that was later deleted and recreated under the same name, the source
        snapshot ID would identify the exact version of the snapshot that was
        used.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    users : [str], default is Undefined, optional
        Links to the users of the disk (attached instances) in form:
        project/zones/zone/instances/instance
    """


    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderAsyncPrimaryDiskItems0]

    creationTimestamp?: str

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderDiskEncryptionKeyItems0]

    effectiveLabels?: {str:str}

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderGuestOsFeaturesItems0]

    id?: str

    labelFingerprint?: str

    labels?: {str:str}

    lastAttachTimestamp?: str

    lastDetachTimestamp?: str

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    region?: str

    replicaZones?: [str]

    selfLink?: str

    size?: float

    snapshot?: str

    sourceDisk?: str

    sourceDiskId?: str

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderSourceSnapshotEncryptionKeyItems0]

    sourceSnapshotId?: str

    terraformLabels?: {str:str}

    $type?: str

    users?: [str]


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 region disk status at provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    """


    disk?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk status at provider disk encryption key items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The name of the encryption key that is stored in Google Cloud KMS.
    sha256 : str, default is Undefined, optional
        (Output)
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeyName?: str

    sha256?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 region disk status at provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusAtProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 region disk status at provider source snapshot encryption key items0

    Attributes
    ----------
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    sha256 : str, default is Undefined, optional
        (Output)
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    rawKey?: str

    sha256?: str


schema ComputeGcpUpboundIoV1beta1RegionDiskStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


