"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RegionBackendService:
    r"""
    RegionBackendService is the Schema for the RegionBackendServices API. A Region Backend Service defines a regionally-scoped group of virtual machines that will serve traffic for load balancing.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RegionBackendService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RegionBackendServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RegionBackendService" = "RegionBackendService"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpec

    status?: ComputeGcpUpboundIoV1beta1RegionBackendServiceStatus


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpec:
    r"""
    RegionBackendServiceSpec defines the desired state of RegionBackendService

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider

    Attributes
    ----------
    affinityCookieTtlSec : float, default is Undefined, optional
        Lifetime of cookies in seconds if session_affinity is
        GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
        only until the end of the browser session (or equivalent). The
        maximum allowed value for TTL is one day.
        When the load balancing scheme is INTERNAL, this field is not used.
    backend : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0], default is Undefined, optional
        The set of backends that serve this RegionBackendService.
        Structure is documented below.
    cdnPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0], default is Undefined, optional
        Cloud CDN configuration for this BackendService.
        Structure is documented below.
    circuitBreakers : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCircuitBreakersItems0], default is Undefined, optional
        Settings controlling the volume of connections to a backend service. This field
        is applicable only when the load_balancing_scheme is set to INTERNAL_MANAGED
        and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    connectionDrainingTimeoutSec : float, default is Undefined, optional
        Time for which instance will be drained (not accept new
        connections, but still work to finish started).
    consistentHash : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0], default is Undefined, optional
        Consistent Hash-based load balancing can be used to provide soft session
        affinity based on HTTP headers, cookies or other properties. This load balancing
        policy is applicable only for HTTP connections. The affinity to a particular
        destination host will be lost when one or more hosts are added/removed from the
        destination service. This field specifies parameters that control consistent
        hashing.
        This field only applies when all of the following are true -
    description : str, default is Undefined, optional
        An optional description of this resource.
    enableCdn : bool, default is Undefined, optional
        If true, enable Cloud CDN for this RegionBackendService.
    failoverPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderFailoverPolicyItems0], default is Undefined, optional
        Policy for failovers.
        Structure is documented below.
    healthChecks : [str], default is Undefined, optional
        The set of URLs to HealthCheck resources for health checking
        this RegionBackendService. Currently at most one health
        check can be specified.
        A health check must be specified unless the backend service uses an internet
        or serverless NEG as a backend.
    healthChecksRefs : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0], default is Undefined, optional
        References to RegionHealthCheck in compute to populate healthChecks.
    healthChecksSelector : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelector, default is Undefined, optional
        health checks selector
    iap : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
        Structure is documented below.
    loadBalancingScheme : str, default is Undefined, optional
        is set to INTERNAL_MANAGED
    localityLbPolicy : str, default is Undefined, optional
        is set to MAGLEV or RING_HASH
        Structure is documented below.
    logConfig : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderLogConfigItems0], default is Undefined, optional
        This field denotes the logging options for the load balancer traffic served by this backend service.
        If logging is enabled, logs will be exported to Stackdriver.
        Structure is documented below.
    network : str, default is Undefined, optional
        The URL of the network to which this backend service belongs.
        This field can only be specified when the load balancing scheme is set to INTERNAL.
    outlierDetection : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0], default is Undefined, optional
        Settings controlling eviction of unhealthy hosts from the load balancing pool.
        This field is applicable only when the load_balancing_scheme is set
        to INTERNAL_MANAGED and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    portName : str, default is Undefined, optional
        A named port on a backend instance group representing the port for
        communication to the backend VMs in that group. Required when the
        loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED
        and the backends are instance groups. The named port must be defined on each
        backend instance group. This parameter has no meaning if the backends are NEGs. API sets a
        default of "http" if not given.
        Must be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        is set to HTTP, HTTPS, or HTTP2
    region : str, default is Undefined, required
        The Region in which the created backend service should reside.
        If it is not provided, the provider region is used.
    sessionAffinity : str, default is Undefined, optional
        Type of session affinity to use. The default is NONE. Session affinity is
        not applicable if the protocol is UDP.
        Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE, CLIENT_IP_NO_DESTINATION.
    timeoutSec : float, default is Undefined, optional
        How many seconds to wait for the backend before considering it a
        failed request. Default is 30 seconds. Valid range is [1, 86400].
    """


    affinityCookieTtlSec?: float

    backend?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0]

    cdnPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0]

    circuitBreakers?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCircuitBreakersItems0]

    connectionDrainingTimeoutSec?: float

    consistentHash?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0]

    description?: str

    enableCdn?: bool

    failoverPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderFailoverPolicyItems0]

    healthChecks?: [str]

    healthChecksRefs?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0]

    healthChecksSelector?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelector

    iap?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0]

    loadBalancingScheme?: str

    localityLbPolicy?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderLogConfigItems0]

    network?: str

    outlierDetection?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0]

    portName?: str

    project?: str

    $protocol?: str

    region: str

    sessionAffinity?: str

    timeoutSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider backend items0

    Attributes
    ----------
    balancingMode : str, default is Undefined, optional
        Specifies the balancing mode for this backend.
        See the Backend Services Overview
        for an explanation of load balancing modes.
        Default value is CONNECTION.
        Possible values are: UTILIZATION, RATE, CONNECTION.
    capacityScaler : float, default is Undefined, optional
        A multiplier applied to the group's maximum servicing capacity
        (based on UTILIZATION, RATE or CONNECTION).
        ~>NOTE: This field cannot be set for
        INTERNAL region backend services (default loadBalancingScheme),
        but is required for non-INTERNAL backend service. The total
        capacity_scaler for all backends must be non-zero.
        A setting of 0 means the group is completely drained, offering
        0% of its available Capacity. Valid range is [0.0,1.0].
    description : str, default is Undefined, optional
        An optional description of this resource.
        Provide this property when you create the resource.
    failover : bool, default is Undefined, optional
        This field designates whether this is a failover backend. More
        than one failover backend can be configured for a given RegionBackendService.
    group : str, default is Undefined, optional
        The fully-qualified URL of an Instance Group or Network Endpoint
        Group resource. In case of instance group this defines the list
        of instances that serve traffic. Member virtual machine
        instances from each instance group must live in the same zone as
        the instance group itself. No two backends in a backend service
        are allowed to use same Instance Group resource.
        For Network Endpoint Groups this defines list of endpoints. All
        endpoints of Network Endpoint Group must be hosted on instances
        located in the same zone as the Network Endpoint Group.
        Backend services cannot mix Instance Group and
        Network Endpoint Group backends.
        When the load_balancing_scheme is INTERNAL, only instance groups
        are supported.
        Note that you must specify an Instance Group or Network Endpoint
        Group resource using the fully-qualified URL, rather than a
        partial URL.
    groupRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRef, default is Undefined, optional
        group ref
    groupSelector : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelector, default is Undefined, optional
        group selector
    maxConnections : float, default is Undefined, optional
        The max number of simultaneous connections for the group. Can
        be used with either CONNECTION or UTILIZATION balancing modes.
        Cannot be set for INTERNAL backend services.
        For CONNECTION mode, either maxConnections or one
        of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
        as appropriate for group type, must be set.
    maxConnectionsPerEndpoint : float, default is Undefined, optional
        The max number of simultaneous connections that a single backend
        network endpoint can handle. Cannot be set
        for INTERNAL backend services.
        This is used to calculate the capacity of the group. Can be
        used in either CONNECTION or UTILIZATION balancing modes. For
        CONNECTION mode, either maxConnections or
        maxConnectionsPerEndpoint must be set.
    maxConnectionsPerInstance : float, default is Undefined, optional
        The max number of simultaneous connections that a single
        backend instance can handle. Cannot be set for INTERNAL backend
        services.
        This is used to calculate the capacity of the group.
        Can be used in either CONNECTION or UTILIZATION balancing modes.
        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.
    maxRate : float, default is Undefined, optional
        The max requests per second (RPS) of the group. Cannot be set
        for INTERNAL backend services.
        Can be used with either RATE or UTILIZATION balancing modes,
        but required if RATE mode. Either maxRate or one
        of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
        group type, must be set.
    maxRatePerEndpoint : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend network
        endpoint can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerEndpoint must be set. Cannot be set
        for INTERNAL backend services.
    maxRatePerInstance : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend
        instance can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerInstance must be set. Cannot be set
        for INTERNAL backend services.
    maxUtilization : float, default is Undefined, optional
        Used when balancingMode is UTILIZATION. This ratio defines the
        CPU utilization target for the group. Valid range is [0.0, 1.0].
        Cannot be set for INTERNAL backend services.
    """


    balancingMode?: str

    capacityScaler?: float

    description?: str

    failover?: bool

    group?: str

    groupRef?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRef

    groupSelector?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelector

    maxConnections?: float

    maxConnectionsPerEndpoint?: float

    maxConnectionsPerInstance?: float

    maxRate?: float

    maxRatePerEndpoint?: float

    maxRatePerInstance?: float

    maxUtilization?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate group.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate group.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderBackendItems0GroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider cdn policy items0

    Attributes
    ----------
    cacheKeyPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0CacheKeyPolicyItems0], default is Undefined, optional
        The CacheKeyPolicy for this CdnPolicy.
        Structure is documented below.
    cacheMode : str, default is Undefined, optional
        Specifies the cache setting for all responses from this backend.
        The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
        Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
    clientTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    defaultTtl : float, default is Undefined, optional
        Specifies the default TTL for cached content served by this origin for responses
        that do not have an existing valid TTL (max-age or s-max-age).
    maxTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    negativeCaching : bool, default is Undefined, optional
        Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.
    negativeCachingPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0NegativeCachingPolicyItems0], default is Undefined, optional
        Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
        Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
        Structure is documented below.
    serveWhileStale : float, default is Undefined, optional
        Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.
    signedUrlCacheMaxAgeSec : float, default is Undefined, optional
        Maximum number of seconds the response to a signed URL request
        will be considered fresh, defaults to 1hr (3600s). After this
        time period, the response will be revalidated before
        being served.
        When serving responses to signed URL requests, Cloud CDN will
        internally behave as though all responses from this backend had a
        "Cache-Control: public, max-age=[TTL]" header, regardless of any
        existing Cache-Control header. The actual headers served in
        responses will not be altered.
    """


    cacheKeyPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0CacheKeyPolicyItems0]

    cacheMode?: str

    clientTtl?: float

    defaultTtl?: float

    maxTtl?: float

    negativeCaching?: bool

    negativeCachingPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0NegativeCachingPolicyItems0]

    serveWhileStale?: float

    signedUrlCacheMaxAgeSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0CacheKeyPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider cdn policy items0 cache key policy items0

    Attributes
    ----------
    includeHost : bool, default is Undefined, optional
        If true requests to different hosts will be cached separately.
    includeNamedCookies : [str], default is Undefined, optional
        Names of cookies to include in cache keys.
    includeProtocol : bool, default is Undefined, optional
        If true, http and https requests will be cached separately.
    includeQueryString : bool, default is Undefined, optional
        If true, include query string parameters in the cache key
        according to query_string_whitelist and
        query_string_blacklist. If neither is set, the entire query
        string will be included.
        If false, the query string will be excluded from the cache
        key entirely.
    queryStringBlacklist : [str], default is Undefined, optional
        Names of query string parameters to exclude in cache keys.
        All other parameters will be included. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    queryStringWhitelist : [str], default is Undefined, optional
        Names of query string parameters to include in cache keys.
        All other parameters will be excluded. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    """


    includeHost?: bool

    includeNamedCookies?: [str]

    includeProtocol?: bool

    includeQueryString?: bool

    queryStringBlacklist?: [str]

    queryStringWhitelist?: [str]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCdnPolicyItems0NegativeCachingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider cdn policy items0 negative caching policy items0

    Attributes
    ----------
    code : float, default is Undefined, optional
        The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
        can be specified as values, and you cannot specify a status code more than once.
    """


    code?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderCircuitBreakersItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider circuit breakers items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        The maximum number of connections to the backend cluster.
        Defaults to 1024.
    maxPendingRequests : float, default is Undefined, optional
        The maximum number of pending requests to the backend cluster.
        Defaults to 1024.
    maxRequests : float, default is Undefined, optional
        The maximum number of parallel requests to the backend cluster.
        Defaults to 1024.
    maxRequestsPerConnection : float, default is Undefined, optional
        Maximum requests for a single backend connection. This parameter
        is respected by both the HTTP/1.1 and HTTP/2 implementations. If
        not specified, there is no limit. Setting this parameter to 1
        will effectively disable keep alive.
    maxRetries : float, default is Undefined, optional
        The maximum number of parallel retries to the backend cluster.
        Defaults to 3.
    """


    maxConnections?: float

    maxPendingRequests?: float

    maxRequests?: float

    maxRequestsPerConnection?: float

    maxRetries?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider consistent hash items0

    Attributes
    ----------
    httpCookie : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0], default is Undefined, optional
        Hash is based on HTTP Cookie. This field describes a HTTP cookie
        that will be used as the hash key for the consistent hash load
        balancer. If the cookie is not present, it will be generated.
        This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
        Structure is documented below.
    httpHeaderName : str, default is Undefined, optional
        The hash based on the value of the specified header field.
        This field is applicable if the sessionAffinity is set to HEADER_FIELD.
    minimumRingSize : float, default is Undefined, optional
        The minimum number of virtual nodes to use for the hash ring.
        Larger ring sizes result in more granular load
        distributions. If the number of hosts in the load balancing pool
        is larger than the ring size, each host will be assigned a single
        virtual node.
        Defaults to 1024.
    """


    httpCookie?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0]

    httpHeaderName?: str

    minimumRingSize?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider consistent hash items0 HTTP cookie items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource. Provided by the client when the resource is
        created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match
        the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the
        first character must be a lowercase letter, and all following
        characters must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
    path : str, default is Undefined, optional
        Path to set for the cookie.
    ttl : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0TTLItems0], default is Undefined, optional
        The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
        (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
    """


    name?: str

    path?: str

    ttl?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0TTLItems0]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderConsistentHashItems0HTTPCookieItems0TTLItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider consistent hash items0 HTTP cookie items0 TTL items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderFailoverPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider failover policy items0

    Attributes
    ----------
    disableConnectionDrainOnFailover : bool, default is Undefined, optional
        On failover or failback, this field indicates whether connection drain
        will be honored. Setting this to true has the following effect: connections
        to the old active pool are not drained. Connections to the new active pool
        use the timeout of 10 min (currently fixed). Setting to false has the
        following effect: both old and new connections will have a drain timeout
        of 10 min.
        This can be set to true only if the protocol is TCP.
        The default is false.
    dropTrafficIfUnhealthy : bool, default is Undefined, optional
        This option is used only when no healthy VMs are detected in the primary
        and backup instance groups. When set to true, traffic is dropped. When
        set to false, new connections are sent across all VMs in the primary group.
        The default is false.
    failoverRatio : float, default is Undefined, optional
        The value of the field must be in [0, 1]. If the ratio of the healthy
        VMs in the primary backend is at or below this number, traffic arriving
        at the load-balanced IP will be directed to the failover backend.
        In case where 'failoverRatio' is not set or all the VMs in the backup
        backend are unhealthy, the traffic will be directed back to the primary
        backend in the "force" mode, where traffic will be spread to the healthy
        VMs with the best effort, or to all VMs when no VM is healthy.
        This field is only used with l4 load balancing.
    """


    disableConnectionDrainOnFailover?: bool

    dropTrafficIfUnhealthy?: bool

    failoverRatio?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelector:
    r"""
    Selector for a list of RegionHealthCheck in compute to populate healthChecks.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderHealthChecksSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider iap items0

    Attributes
    ----------
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 Client ID for IAP
    oauth2ClientSecretSecretRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0Oauth2ClientSecretSecretRef, default is Undefined, required
        oauth2 client secret secret ref
    """


    oauth2ClientId?: str

    oauth2ClientSecretSecretRef: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0Oauth2ClientSecretSecretRef


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderIapItems0Oauth2ClientSecretSecretRef:
    r"""
    OAuth2 Client Secret for IAP
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider log config items0

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Whether to enable logging for the load balancer traffic served by this backend service.
    sampleRate : float, default is Undefined, optional
        This field can only be specified if logging is enabled for this backend service. The value of
        the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
        where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
        The default value is 1.0.
    """


    enable?: bool

    sampleRate?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider outlier detection items0

    Attributes
    ----------
    baseEjectionTime : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0BaseEjectionTimeItems0], default is Undefined, optional
        The base time that a host is ejected for. The real time is equal to the base
        time multiplied by the number of times the host has been ejected. Defaults to
        30000ms or 30s.
        Structure is documented below.
    consecutiveErrors : float, default is Undefined, optional
        Number of errors before a host is ejected from the connection pool. When the
        backend host is accessed over HTTP, a 5xx return code qualifies as an error.
        Defaults to 5.
    consecutiveGatewayFailure : float, default is Undefined, optional
        The number of consecutive gateway failures (502, 503, 504 status or connection
        errors that are mapped to one of those status codes) before a consecutive
        gateway failure ejection occurs. Defaults to 5.
    enforcingConsecutiveErrors : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive 5xx. This setting can be used to disable
        ejection or to ramp it up slowly. Defaults to 100.
    enforcingConsecutiveGatewayFailure : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive gateway failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 0.
    enforcingSuccessRate : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through success rate statistics. This setting can be used to
        disable ejection or to ramp it up slowly. Defaults to 100.
    interval : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis. This can result in both new
        ejections as well as hosts being returned to service. Defaults to 10 seconds.
        Structure is documented below.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in the load balancing pool for the backend service
        that can be ejected. Defaults to 10%.
    successRateMinimumHosts : float, default is Undefined, optional
        The number of hosts in a cluster that must have enough request volume to detect
        success rate outliers. If the number of hosts is less than this setting, outlier
        detection via success rate statistics is not performed for any host in the
        cluster. Defaults to 5.
    successRateRequestVolume : float, default is Undefined, optional
        The minimum number of total requests that must be collected in one interval (as
        defined by the interval duration above) to include this host in success rate
        based outlier detection. If the volume is lower than this setting, outlier
        detection via success rate statistics is not performed for that host. Defaults
        to 100.
    successRateStdevFactor : float, default is Undefined, optional
        This factor is used to determine the ejection threshold for success rate outlier
        ejection. The ejection threshold is the difference between the mean success
        rate, and the product of this factor and the standard deviation of the mean
        success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
        by a thousand to get a double. That is, if the desired factor is 1.9, the
        runtime value should be 1900. Defaults to 1900.
    """


    baseEjectionTime?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0BaseEjectionTimeItems0]

    consecutiveErrors?: float

    consecutiveGatewayFailure?: float

    enforcingConsecutiveErrors?: float

    enforcingConsecutiveGatewayFailure?: float

    enforcingSuccessRate?: float

    interval?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    successRateMinimumHosts?: float

    successRateRequestVolume?: float

    successRateStdevFactor?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0BaseEjectionTimeItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider outlier detection items0 base ejection time items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecForProviderOutlierDetectionItems0IntervalItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec for provider outlier detection items0 interval items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    affinityCookieTtlSec : float, default is Undefined, optional
        Lifetime of cookies in seconds if session_affinity is
        GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
        only until the end of the browser session (or equivalent). The
        maximum allowed value for TTL is one day.
        When the load balancing scheme is INTERNAL, this field is not used.
    backend : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0], default is Undefined, optional
        The set of backends that serve this RegionBackendService.
        Structure is documented below.
    cdnPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0], default is Undefined, optional
        Cloud CDN configuration for this BackendService.
        Structure is documented below.
    circuitBreakers : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCircuitBreakersItems0], default is Undefined, optional
        Settings controlling the volume of connections to a backend service. This field
        is applicable only when the load_balancing_scheme is set to INTERNAL_MANAGED
        and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    connectionDrainingTimeoutSec : float, default is Undefined, optional
        Time for which instance will be drained (not accept new
        connections, but still work to finish started).
    consistentHash : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0], default is Undefined, optional
        Consistent Hash-based load balancing can be used to provide soft session
        affinity based on HTTP headers, cookies or other properties. This load balancing
        policy is applicable only for HTTP connections. The affinity to a particular
        destination host will be lost when one or more hosts are added/removed from the
        destination service. This field specifies parameters that control consistent
        hashing.
        This field only applies when all of the following are true -
    description : str, default is Undefined, optional
        An optional description of this resource.
    enableCdn : bool, default is Undefined, optional
        If true, enable Cloud CDN for this RegionBackendService.
    failoverPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderFailoverPolicyItems0], default is Undefined, optional
        Policy for failovers.
        Structure is documented below.
    healthChecks : [str], default is Undefined, optional
        The set of URLs to HealthCheck resources for health checking
        this RegionBackendService. Currently at most one health
        check can be specified.
        A health check must be specified unless the backend service uses an internet
        or serverless NEG as a backend.
    healthChecksRefs : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0], default is Undefined, optional
        References to RegionHealthCheck in compute to populate healthChecks.
    healthChecksSelector : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelector, default is Undefined, optional
        health checks selector
    iap : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
        Structure is documented below.
    loadBalancingScheme : str, default is Undefined, optional
        is set to INTERNAL_MANAGED
    localityLbPolicy : str, default is Undefined, optional
        is set to MAGLEV or RING_HASH
        Structure is documented below.
    logConfig : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderLogConfigItems0], default is Undefined, optional
        This field denotes the logging options for the load balancer traffic served by this backend service.
        If logging is enabled, logs will be exported to Stackdriver.
        Structure is documented below.
    network : str, default is Undefined, optional
        The URL of the network to which this backend service belongs.
        This field can only be specified when the load balancing scheme is set to INTERNAL.
    outlierDetection : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0], default is Undefined, optional
        Settings controlling eviction of unhealthy hosts from the load balancing pool.
        This field is applicable only when the load_balancing_scheme is set
        to INTERNAL_MANAGED and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    portName : str, default is Undefined, optional
        A named port on a backend instance group representing the port for
        communication to the backend VMs in that group. Required when the
        loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED
        and the backends are instance groups. The named port must be defined on each
        backend instance group. This parameter has no meaning if the backends are NEGs. API sets a
        default of "http" if not given.
        Must be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        is set to HTTP, HTTPS, or HTTP2
    sessionAffinity : str, default is Undefined, optional
        Type of session affinity to use. The default is NONE. Session affinity is
        not applicable if the protocol is UDP.
        Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE, CLIENT_IP_NO_DESTINATION.
    timeoutSec : float, default is Undefined, optional
        How many seconds to wait for the backend before considering it a
        failed request. Default is 30 seconds. Valid range is [1, 86400].
    """


    affinityCookieTtlSec?: float

    backend?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0]

    cdnPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0]

    circuitBreakers?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCircuitBreakersItems0]

    connectionDrainingTimeoutSec?: float

    consistentHash?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0]

    description?: str

    enableCdn?: bool

    failoverPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderFailoverPolicyItems0]

    healthChecks?: [str]

    healthChecksRefs?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0]

    healthChecksSelector?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelector

    iap?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderIapItems0]

    loadBalancingScheme?: str

    localityLbPolicy?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderLogConfigItems0]

    network?: str

    outlierDetection?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0]

    portName?: str

    project?: str

    $protocol?: str

    sessionAffinity?: str

    timeoutSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider backend items0

    Attributes
    ----------
    balancingMode : str, default is Undefined, optional
        Specifies the balancing mode for this backend.
        See the Backend Services Overview
        for an explanation of load balancing modes.
        Default value is CONNECTION.
        Possible values are: UTILIZATION, RATE, CONNECTION.
    capacityScaler : float, default is Undefined, optional
        A multiplier applied to the group's maximum servicing capacity
        (based on UTILIZATION, RATE or CONNECTION).
        ~>NOTE: This field cannot be set for
        INTERNAL region backend services (default loadBalancingScheme),
        but is required for non-INTERNAL backend service. The total
        capacity_scaler for all backends must be non-zero.
        A setting of 0 means the group is completely drained, offering
        0% of its available Capacity. Valid range is [0.0,1.0].
    description : str, default is Undefined, optional
        An optional description of this resource.
        Provide this property when you create the resource.
    failover : bool, default is Undefined, optional
        This field designates whether this is a failover backend. More
        than one failover backend can be configured for a given RegionBackendService.
    group : str, default is Undefined, optional
        The fully-qualified URL of an Instance Group or Network Endpoint
        Group resource. In case of instance group this defines the list
        of instances that serve traffic. Member virtual machine
        instances from each instance group must live in the same zone as
        the instance group itself. No two backends in a backend service
        are allowed to use same Instance Group resource.
        For Network Endpoint Groups this defines list of endpoints. All
        endpoints of Network Endpoint Group must be hosted on instances
        located in the same zone as the Network Endpoint Group.
        Backend services cannot mix Instance Group and
        Network Endpoint Group backends.
        When the load_balancing_scheme is INTERNAL, only instance groups
        are supported.
        Note that you must specify an Instance Group or Network Endpoint
        Group resource using the fully-qualified URL, rather than a
        partial URL.
    groupRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRef, default is Undefined, optional
        group ref
    groupSelector : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelector, default is Undefined, optional
        group selector
    maxConnections : float, default is Undefined, optional
        The max number of simultaneous connections for the group. Can
        be used with either CONNECTION or UTILIZATION balancing modes.
        Cannot be set for INTERNAL backend services.
        For CONNECTION mode, either maxConnections or one
        of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
        as appropriate for group type, must be set.
    maxConnectionsPerEndpoint : float, default is Undefined, optional
        The max number of simultaneous connections that a single backend
        network endpoint can handle. Cannot be set
        for INTERNAL backend services.
        This is used to calculate the capacity of the group. Can be
        used in either CONNECTION or UTILIZATION balancing modes. For
        CONNECTION mode, either maxConnections or
        maxConnectionsPerEndpoint must be set.
    maxConnectionsPerInstance : float, default is Undefined, optional
        The max number of simultaneous connections that a single
        backend instance can handle. Cannot be set for INTERNAL backend
        services.
        This is used to calculate the capacity of the group.
        Can be used in either CONNECTION or UTILIZATION balancing modes.
        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.
    maxRate : float, default is Undefined, optional
        The max requests per second (RPS) of the group. Cannot be set
        for INTERNAL backend services.
        Can be used with either RATE or UTILIZATION balancing modes,
        but required if RATE mode. Either maxRate or one
        of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
        group type, must be set.
    maxRatePerEndpoint : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend network
        endpoint can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerEndpoint must be set. Cannot be set
        for INTERNAL backend services.
    maxRatePerInstance : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend
        instance can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerInstance must be set. Cannot be set
        for INTERNAL backend services.
    maxUtilization : float, default is Undefined, optional
        Used when balancingMode is UTILIZATION. This ratio defines the
        CPU utilization target for the group. Valid range is [0.0, 1.0].
        Cannot be set for INTERNAL backend services.
    """


    balancingMode?: str

    capacityScaler?: float

    description?: str

    failover?: bool

    group?: str

    groupRef?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRef

    groupSelector?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelector

    maxConnections?: float

    maxConnectionsPerEndpoint?: float

    maxConnectionsPerInstance?: float

    maxRate?: float

    maxRatePerEndpoint?: float

    maxRatePerInstance?: float

    maxUtilization?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRef:
    r"""
    Reference to a RegionInstanceGroupManager in compute to populate group.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelector:
    r"""
    Selector for a RegionInstanceGroupManager in compute to populate group.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderBackendItems0GroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider cdn policy items0

    Attributes
    ----------
    cacheKeyPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0CacheKeyPolicyItems0], default is Undefined, optional
        The CacheKeyPolicy for this CdnPolicy.
        Structure is documented below.
    cacheMode : str, default is Undefined, optional
        Specifies the cache setting for all responses from this backend.
        The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
        Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
    clientTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    defaultTtl : float, default is Undefined, optional
        Specifies the default TTL for cached content served by this origin for responses
        that do not have an existing valid TTL (max-age or s-max-age).
    maxTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    negativeCaching : bool, default is Undefined, optional
        Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.
    negativeCachingPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0NegativeCachingPolicyItems0], default is Undefined, optional
        Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
        Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
        Structure is documented below.
    serveWhileStale : float, default is Undefined, optional
        Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.
    signedUrlCacheMaxAgeSec : float, default is Undefined, optional
        Maximum number of seconds the response to a signed URL request
        will be considered fresh, defaults to 1hr (3600s). After this
        time period, the response will be revalidated before
        being served.
        When serving responses to signed URL requests, Cloud CDN will
        internally behave as though all responses from this backend had a
        "Cache-Control: public, max-age=[TTL]" header, regardless of any
        existing Cache-Control header. The actual headers served in
        responses will not be altered.
    """


    cacheKeyPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0CacheKeyPolicyItems0]

    cacheMode?: str

    clientTtl?: float

    defaultTtl?: float

    maxTtl?: float

    negativeCaching?: bool

    negativeCachingPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0NegativeCachingPolicyItems0]

    serveWhileStale?: float

    signedUrlCacheMaxAgeSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0CacheKeyPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider cdn policy items0 cache key policy items0

    Attributes
    ----------
    includeHost : bool, default is Undefined, optional
        If true requests to different hosts will be cached separately.
    includeNamedCookies : [str], default is Undefined, optional
        Names of cookies to include in cache keys.
    includeProtocol : bool, default is Undefined, optional
        If true, http and https requests will be cached separately.
    includeQueryString : bool, default is Undefined, optional
        If true, include query string parameters in the cache key
        according to query_string_whitelist and
        query_string_blacklist. If neither is set, the entire query
        string will be included.
        If false, the query string will be excluded from the cache
        key entirely.
    queryStringBlacklist : [str], default is Undefined, optional
        Names of query string parameters to exclude in cache keys.
        All other parameters will be included. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    queryStringWhitelist : [str], default is Undefined, optional
        Names of query string parameters to include in cache keys.
        All other parameters will be excluded. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    """


    includeHost?: bool

    includeNamedCookies?: [str]

    includeProtocol?: bool

    includeQueryString?: bool

    queryStringBlacklist?: [str]

    queryStringWhitelist?: [str]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCdnPolicyItems0NegativeCachingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider cdn policy items0 negative caching policy items0

    Attributes
    ----------
    code : float, default is Undefined, optional
        The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
        can be specified as values, and you cannot specify a status code more than once.
    """


    code?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderCircuitBreakersItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider circuit breakers items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        The maximum number of connections to the backend cluster.
        Defaults to 1024.
    maxPendingRequests : float, default is Undefined, optional
        The maximum number of pending requests to the backend cluster.
        Defaults to 1024.
    maxRequests : float, default is Undefined, optional
        The maximum number of parallel requests to the backend cluster.
        Defaults to 1024.
    maxRequestsPerConnection : float, default is Undefined, optional
        Maximum requests for a single backend connection. This parameter
        is respected by both the HTTP/1.1 and HTTP/2 implementations. If
        not specified, there is no limit. Setting this parameter to 1
        will effectively disable keep alive.
    maxRetries : float, default is Undefined, optional
        The maximum number of parallel retries to the backend cluster.
        Defaults to 3.
    """


    maxConnections?: float

    maxPendingRequests?: float

    maxRequests?: float

    maxRequestsPerConnection?: float

    maxRetries?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider consistent hash items0

    Attributes
    ----------
    httpCookie : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0], default is Undefined, optional
        Hash is based on HTTP Cookie. This field describes a HTTP cookie
        that will be used as the hash key for the consistent hash load
        balancer. If the cookie is not present, it will be generated.
        This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
        Structure is documented below.
    httpHeaderName : str, default is Undefined, optional
        The hash based on the value of the specified header field.
        This field is applicable if the sessionAffinity is set to HEADER_FIELD.
    minimumRingSize : float, default is Undefined, optional
        The minimum number of virtual nodes to use for the hash ring.
        Larger ring sizes result in more granular load
        distributions. If the number of hosts in the load balancing pool
        is larger than the ring size, each host will be assigned a single
        virtual node.
        Defaults to 1024.
    """


    httpCookie?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0]

    httpHeaderName?: str

    minimumRingSize?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider consistent hash items0 HTTP cookie items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource. Provided by the client when the resource is
        created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match
        the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the
        first character must be a lowercase letter, and all following
        characters must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
    path : str, default is Undefined, optional
        Path to set for the cookie.
    ttl : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0TTLItems0], default is Undefined, optional
        The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
        (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
    """


    name?: str

    path?: str

    ttl?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0TTLItems0]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderConsistentHashItems0HTTPCookieItems0TTLItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider consistent hash items0 HTTP cookie items0 TTL items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderFailoverPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider failover policy items0

    Attributes
    ----------
    disableConnectionDrainOnFailover : bool, default is Undefined, optional
        On failover or failback, this field indicates whether connection drain
        will be honored. Setting this to true has the following effect: connections
        to the old active pool are not drained. Connections to the new active pool
        use the timeout of 10 min (currently fixed). Setting to false has the
        following effect: both old and new connections will have a drain timeout
        of 10 min.
        This can be set to true only if the protocol is TCP.
        The default is false.
    dropTrafficIfUnhealthy : bool, default is Undefined, optional
        This option is used only when no healthy VMs are detected in the primary
        and backup instance groups. When set to true, traffic is dropped. When
        set to false, new connections are sent across all VMs in the primary group.
        The default is false.
    failoverRatio : float, default is Undefined, optional
        The value of the field must be in [0, 1]. If the ratio of the healthy
        VMs in the primary backend is at or below this number, traffic arriving
        at the load-balanced IP will be directed to the failover backend.
        In case where 'failoverRatio' is not set or all the VMs in the backup
        backend are unhealthy, the traffic will be directed back to the primary
        backend in the "force" mode, where traffic will be spread to the healthy
        VMs with the best effort, or to all VMs when no VM is healthy.
        This field is only used with l4 load balancing.
    """


    disableConnectionDrainOnFailover?: bool

    dropTrafficIfUnhealthy?: bool

    failoverRatio?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0Policy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelector:
    r"""
    Selector for a list of RegionHealthCheck in compute to populate healthChecks.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderHealthChecksSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderIapItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider iap items0

    Attributes
    ----------
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 Client ID for IAP
    """


    oauth2ClientId?: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider log config items0

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Whether to enable logging for the load balancer traffic served by this backend service.
    sampleRate : float, default is Undefined, optional
        This field can only be specified if logging is enabled for this backend service. The value of
        the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
        where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
        The default value is 1.0.
    """


    enable?: bool

    sampleRate?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider outlier detection items0

    Attributes
    ----------
    baseEjectionTime : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0BaseEjectionTimeItems0], default is Undefined, optional
        The base time that a host is ejected for. The real time is equal to the base
        time multiplied by the number of times the host has been ejected. Defaults to
        30000ms or 30s.
        Structure is documented below.
    consecutiveErrors : float, default is Undefined, optional
        Number of errors before a host is ejected from the connection pool. When the
        backend host is accessed over HTTP, a 5xx return code qualifies as an error.
        Defaults to 5.
    consecutiveGatewayFailure : float, default is Undefined, optional
        The number of consecutive gateway failures (502, 503, 504 status or connection
        errors that are mapped to one of those status codes) before a consecutive
        gateway failure ejection occurs. Defaults to 5.
    enforcingConsecutiveErrors : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive 5xx. This setting can be used to disable
        ejection or to ramp it up slowly. Defaults to 100.
    enforcingConsecutiveGatewayFailure : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive gateway failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 0.
    enforcingSuccessRate : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through success rate statistics. This setting can be used to
        disable ejection or to ramp it up slowly. Defaults to 100.
    interval : [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis. This can result in both new
        ejections as well as hosts being returned to service. Defaults to 10 seconds.
        Structure is documented below.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in the load balancing pool for the backend service
        that can be ejected. Defaults to 10%.
    successRateMinimumHosts : float, default is Undefined, optional
        The number of hosts in a cluster that must have enough request volume to detect
        success rate outliers. If the number of hosts is less than this setting, outlier
        detection via success rate statistics is not performed for any host in the
        cluster. Defaults to 5.
    successRateRequestVolume : float, default is Undefined, optional
        The minimum number of total requests that must be collected in one interval (as
        defined by the interval duration above) to include this host in success rate
        based outlier detection. If the volume is lower than this setting, outlier
        detection via success rate statistics is not performed for that host. Defaults
        to 100.
    successRateStdevFactor : float, default is Undefined, optional
        This factor is used to determine the ejection threshold for success rate outlier
        ejection. The ejection threshold is the difference between the mean success
        rate, and the product of this factor and the standard deviation of the mean
        success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
        by a thousand to get a double. That is, if the desired factor is 1.9, the
        runtime value should be 1900. Defaults to 1900.
    """


    baseEjectionTime?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0BaseEjectionTimeItems0]

    consecutiveErrors?: float

    consecutiveGatewayFailure?: float

    enforcingConsecutiveErrors?: float

    enforcingConsecutiveGatewayFailure?: float

    enforcingSuccessRate?: float

    interval?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    successRateMinimumHosts?: float

    successRateRequestVolume?: float

    successRateStdevFactor?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0BaseEjectionTimeItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider outlier detection items0 base ejection time items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecInitProviderOutlierDetectionItems0IntervalItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service spec init provider outlier detection items0 interval items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatus:
    r"""
    RegionBackendServiceStatus defines the observed state of RegionBackendService.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider

    Attributes
    ----------
    affinityCookieTtlSec : float, default is Undefined, optional
        Lifetime of cookies in seconds if session_affinity is
        GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
        only until the end of the browser session (or equivalent). The
        maximum allowed value for TTL is one day.
        When the load balancing scheme is INTERNAL, this field is not used.
    backend : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderBackendItems0], default is Undefined, optional
        The set of backends that serve this RegionBackendService.
        Structure is documented below.
    cdnPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0], default is Undefined, optional
        Cloud CDN configuration for this BackendService.
        Structure is documented below.
    circuitBreakers : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCircuitBreakersItems0], default is Undefined, optional
        Settings controlling the volume of connections to a backend service. This field
        is applicable only when the load_balancing_scheme is set to INTERNAL_MANAGED
        and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    connectionDrainingTimeoutSec : float, default is Undefined, optional
        Time for which instance will be drained (not accept new
        connections, but still work to finish started).
    consistentHash : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0], default is Undefined, optional
        Consistent Hash-based load balancing can be used to provide soft session
        affinity based on HTTP headers, cookies or other properties. This load balancing
        policy is applicable only for HTTP connections. The affinity to a particular
        destination host will be lost when one or more hosts are added/removed from the
        destination service. This field specifies parameters that control consistent
        hashing.
        This field only applies when all of the following are true -
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource.
    enableCdn : bool, default is Undefined, optional
        If true, enable Cloud CDN for this RegionBackendService.
    failoverPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderFailoverPolicyItems0], default is Undefined, optional
        Policy for failovers.
        Structure is documented below.
    fingerprint : str, default is Undefined, optional
        Fingerprint of this resource. A hash of the contents stored in this
        object. This field is used in optimistic locking.
    generatedId : float, default is Undefined, optional
        The unique identifier for the resource. This identifier is defined by the server.
    healthChecks : [str], default is Undefined, optional
        The set of URLs to HealthCheck resources for health checking
        this RegionBackendService. Currently at most one health
        check can be specified.
        A health check must be specified unless the backend service uses an internet
        or serverless NEG as a backend.
    iap : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/backendServices/{{name}}
    loadBalancingScheme : str, default is Undefined, optional
        is set to INTERNAL_MANAGED
    localityLbPolicy : str, default is Undefined, optional
        is set to MAGLEV or RING_HASH
        Structure is documented below.
    logConfig : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderLogConfigItems0], default is Undefined, optional
        This field denotes the logging options for the load balancer traffic served by this backend service.
        If logging is enabled, logs will be exported to Stackdriver.
        Structure is documented below.
    network : str, default is Undefined, optional
        The URL of the network to which this backend service belongs.
        This field can only be specified when the load balancing scheme is set to INTERNAL.
    outlierDetection : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0], default is Undefined, optional
        Settings controlling eviction of unhealthy hosts from the load balancing pool.
        This field is applicable only when the load_balancing_scheme is set
        to INTERNAL_MANAGED and the protocol is set to HTTP, HTTPS, or HTTP2.
        Structure is documented below.
    portName : str, default is Undefined, optional
        A named port on a backend instance group representing the port for
        communication to the backend VMs in that group. Required when the
        loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED
        and the backends are instance groups. The named port must be defined on each
        backend instance group. This parameter has no meaning if the backends are NEGs. API sets a
        default of "http" if not given.
        Must be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        is set to HTTP, HTTPS, or HTTP2
    region : str, default is Undefined, optional
        The Region in which the created backend service should reside.
        If it is not provided, the provider region is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    sessionAffinity : str, default is Undefined, optional
        Type of session affinity to use. The default is NONE. Session affinity is
        not applicable if the protocol is UDP.
        Possible values are: NONE, CLIENT_IP, CLIENT_IP_PORT_PROTO, CLIENT_IP_PROTO, GENERATED_COOKIE, HEADER_FIELD, HTTP_COOKIE, CLIENT_IP_NO_DESTINATION.
    timeoutSec : float, default is Undefined, optional
        How many seconds to wait for the backend before considering it a
        failed request. Default is 30 seconds. Valid range is [1, 86400].
    """


    affinityCookieTtlSec?: float

    backend?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderBackendItems0]

    cdnPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0]

    circuitBreakers?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCircuitBreakersItems0]

    connectionDrainingTimeoutSec?: float

    consistentHash?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0]

    creationTimestamp?: str

    description?: str

    enableCdn?: bool

    failoverPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderFailoverPolicyItems0]

    fingerprint?: str

    generatedId?: float

    healthChecks?: [str]

    iap?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderIapItems0]

    id?: str

    loadBalancingScheme?: str

    localityLbPolicy?: str

    logConfig?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderLogConfigItems0]

    network?: str

    outlierDetection?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0]

    portName?: str

    project?: str

    $protocol?: str

    region?: str

    selfLink?: str

    sessionAffinity?: str

    timeoutSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderBackendItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider backend items0

    Attributes
    ----------
    balancingMode : str, default is Undefined, optional
        Specifies the balancing mode for this backend.
        See the Backend Services Overview
        for an explanation of load balancing modes.
        Default value is CONNECTION.
        Possible values are: UTILIZATION, RATE, CONNECTION.
    capacityScaler : float, default is Undefined, optional
        A multiplier applied to the group's maximum servicing capacity
        (based on UTILIZATION, RATE or CONNECTION).
        ~>NOTE: This field cannot be set for
        INTERNAL region backend services (default loadBalancingScheme),
        but is required for non-INTERNAL backend service. The total
        capacity_scaler for all backends must be non-zero.
        A setting of 0 means the group is completely drained, offering
        0% of its available Capacity. Valid range is [0.0,1.0].
    description : str, default is Undefined, optional
        An optional description of this resource.
        Provide this property when you create the resource.
    failover : bool, default is Undefined, optional
        This field designates whether this is a failover backend. More
        than one failover backend can be configured for a given RegionBackendService.
    group : str, default is Undefined, optional
        The fully-qualified URL of an Instance Group or Network Endpoint
        Group resource. In case of instance group this defines the list
        of instances that serve traffic. Member virtual machine
        instances from each instance group must live in the same zone as
        the instance group itself. No two backends in a backend service
        are allowed to use same Instance Group resource.
        For Network Endpoint Groups this defines list of endpoints. All
        endpoints of Network Endpoint Group must be hosted on instances
        located in the same zone as the Network Endpoint Group.
        Backend services cannot mix Instance Group and
        Network Endpoint Group backends.
        When the load_balancing_scheme is INTERNAL, only instance groups
        are supported.
        Note that you must specify an Instance Group or Network Endpoint
        Group resource using the fully-qualified URL, rather than a
        partial URL.
    maxConnections : float, default is Undefined, optional
        The max number of simultaneous connections for the group. Can
        be used with either CONNECTION or UTILIZATION balancing modes.
        Cannot be set for INTERNAL backend services.
        For CONNECTION mode, either maxConnections or one
        of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
        as appropriate for group type, must be set.
    maxConnectionsPerEndpoint : float, default is Undefined, optional
        The max number of simultaneous connections that a single backend
        network endpoint can handle. Cannot be set
        for INTERNAL backend services.
        This is used to calculate the capacity of the group. Can be
        used in either CONNECTION or UTILIZATION balancing modes. For
        CONNECTION mode, either maxConnections or
        maxConnectionsPerEndpoint must be set.
    maxConnectionsPerInstance : float, default is Undefined, optional
        The max number of simultaneous connections that a single
        backend instance can handle. Cannot be set for INTERNAL backend
        services.
        This is used to calculate the capacity of the group.
        Can be used in either CONNECTION or UTILIZATION balancing modes.
        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.
    maxRate : float, default is Undefined, optional
        The max requests per second (RPS) of the group. Cannot be set
        for INTERNAL backend services.
        Can be used with either RATE or UTILIZATION balancing modes,
        but required if RATE mode. Either maxRate or one
        of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
        group type, must be set.
    maxRatePerEndpoint : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend network
        endpoint can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerEndpoint must be set. Cannot be set
        for INTERNAL backend services.
    maxRatePerInstance : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend
        instance can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerInstance must be set. Cannot be set
        for INTERNAL backend services.
    maxUtilization : float, default is Undefined, optional
        Used when balancingMode is UTILIZATION. This ratio defines the
        CPU utilization target for the group. Valid range is [0.0, 1.0].
        Cannot be set for INTERNAL backend services.
    """


    balancingMode?: str

    capacityScaler?: float

    description?: str

    failover?: bool

    group?: str

    maxConnections?: float

    maxConnectionsPerEndpoint?: float

    maxConnectionsPerInstance?: float

    maxRate?: float

    maxRatePerEndpoint?: float

    maxRatePerInstance?: float

    maxUtilization?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider cdn policy items0

    Attributes
    ----------
    cacheKeyPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0CacheKeyPolicyItems0], default is Undefined, optional
        The CacheKeyPolicy for this CdnPolicy.
        Structure is documented below.
    cacheMode : str, default is Undefined, optional
        Specifies the cache setting for all responses from this backend.
        The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC
        Possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC.
    clientTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    defaultTtl : float, default is Undefined, optional
        Specifies the default TTL for cached content served by this origin for responses
        that do not have an existing valid TTL (max-age or s-max-age).
    maxTtl : float, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    negativeCaching : bool, default is Undefined, optional
        Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.
    negativeCachingPolicy : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0NegativeCachingPolicyItems0], default is Undefined, optional
        Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
        Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
        Structure is documented below.
    serveWhileStale : float, default is Undefined, optional
        Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.
    signedUrlCacheMaxAgeSec : float, default is Undefined, optional
        Maximum number of seconds the response to a signed URL request
        will be considered fresh, defaults to 1hr (3600s). After this
        time period, the response will be revalidated before
        being served.
        When serving responses to signed URL requests, Cloud CDN will
        internally behave as though all responses from this backend had a
        "Cache-Control: public, max-age=[TTL]" header, regardless of any
        existing Cache-Control header. The actual headers served in
        responses will not be altered.
    """


    cacheKeyPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0CacheKeyPolicyItems0]

    cacheMode?: str

    clientTtl?: float

    defaultTtl?: float

    maxTtl?: float

    negativeCaching?: bool

    negativeCachingPolicy?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0NegativeCachingPolicyItems0]

    serveWhileStale?: float

    signedUrlCacheMaxAgeSec?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0CacheKeyPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider cdn policy items0 cache key policy items0

    Attributes
    ----------
    includeHost : bool, default is Undefined, optional
        If true requests to different hosts will be cached separately.
    includeNamedCookies : [str], default is Undefined, optional
        Names of cookies to include in cache keys.
    includeProtocol : bool, default is Undefined, optional
        If true, http and https requests will be cached separately.
    includeQueryString : bool, default is Undefined, optional
        If true, include query string parameters in the cache key
        according to query_string_whitelist and
        query_string_blacklist. If neither is set, the entire query
        string will be included.
        If false, the query string will be excluded from the cache
        key entirely.
    queryStringBlacklist : [str], default is Undefined, optional
        Names of query string parameters to exclude in cache keys.
        All other parameters will be included. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    queryStringWhitelist : [str], default is Undefined, optional
        Names of query string parameters to include in cache keys.
        All other parameters will be excluded. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    """


    includeHost?: bool

    includeNamedCookies?: [str]

    includeProtocol?: bool

    includeQueryString?: bool

    queryStringBlacklist?: [str]

    queryStringWhitelist?: [str]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCdnPolicyItems0NegativeCachingPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider cdn policy items0 negative caching policy items0

    Attributes
    ----------
    code : float, default is Undefined, optional
        The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
        can be specified as values, and you cannot specify a status code more than once.
    """


    code?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderCircuitBreakersItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider circuit breakers items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        The maximum number of connections to the backend cluster.
        Defaults to 1024.
    maxPendingRequests : float, default is Undefined, optional
        The maximum number of pending requests to the backend cluster.
        Defaults to 1024.
    maxRequests : float, default is Undefined, optional
        The maximum number of parallel requests to the backend cluster.
        Defaults to 1024.
    maxRequestsPerConnection : float, default is Undefined, optional
        Maximum requests for a single backend connection. This parameter
        is respected by both the HTTP/1.1 and HTTP/2 implementations. If
        not specified, there is no limit. Setting this parameter to 1
        will effectively disable keep alive.
    maxRetries : float, default is Undefined, optional
        The maximum number of parallel retries to the backend cluster.
        Defaults to 3.
    """


    maxConnections?: float

    maxPendingRequests?: float

    maxRequests?: float

    maxRequestsPerConnection?: float

    maxRetries?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider consistent hash items0

    Attributes
    ----------
    httpCookie : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0], default is Undefined, optional
        Hash is based on HTTP Cookie. This field describes a HTTP cookie
        that will be used as the hash key for the consistent hash load
        balancer. If the cookie is not present, it will be generated.
        This field is applicable if the sessionAffinity is set to HTTP_COOKIE.
        Structure is documented below.
    httpHeaderName : str, default is Undefined, optional
        The hash based on the value of the specified header field.
        This field is applicable if the sessionAffinity is set to HEADER_FIELD.
    minimumRingSize : float, default is Undefined, optional
        The minimum number of virtual nodes to use for the hash ring.
        Larger ring sizes result in more granular load
        distributions. If the number of hosts in the load balancing pool
        is larger than the ring size, each host will be assigned a single
        virtual node.
        Defaults to 1024.
    """


    httpCookie?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0]

    httpHeaderName?: str

    minimumRingSize?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider consistent hash items0 HTTP cookie items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the resource. Provided by the client when the resource is
        created. The name must be 1-63 characters long, and comply with
        RFC1035. Specifically, the name must be 1-63 characters long and match
        the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the
        first character must be a lowercase letter, and all following
        characters must be a dash, lowercase letter, or digit, except the last
        character, which cannot be a dash.
    path : str, default is Undefined, optional
        Path to set for the cookie.
    ttl : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0TTLItems0], default is Undefined, optional
        The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
        (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
    """


    name?: str

    path?: str

    ttl?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0TTLItems0]


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderConsistentHashItems0HTTPCookieItems0TTLItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider consistent hash items0 HTTP cookie items0 TTL items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderFailoverPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider failover policy items0

    Attributes
    ----------
    disableConnectionDrainOnFailover : bool, default is Undefined, optional
        On failover or failback, this field indicates whether connection drain
        will be honored. Setting this to true has the following effect: connections
        to the old active pool are not drained. Connections to the new active pool
        use the timeout of 10 min (currently fixed). Setting to false has the
        following effect: both old and new connections will have a drain timeout
        of 10 min.
        This can be set to true only if the protocol is TCP.
        The default is false.
    dropTrafficIfUnhealthy : bool, default is Undefined, optional
        This option is used only when no healthy VMs are detected in the primary
        and backup instance groups. When set to true, traffic is dropped. When
        set to false, new connections are sent across all VMs in the primary group.
        The default is false.
    failoverRatio : float, default is Undefined, optional
        The value of the field must be in [0, 1]. If the ratio of the healthy
        VMs in the primary backend is at or below this number, traffic arriving
        at the load-balanced IP will be directed to the failover backend.
        In case where 'failoverRatio' is not set or all the VMs in the backup
        backend are unhealthy, the traffic will be directed back to the primary
        backend in the "force" mode, where traffic will be spread to the healthy
        VMs with the best effort, or to all VMs when no VM is healthy.
        This field is only used with l4 load balancing.
    """


    disableConnectionDrainOnFailover?: bool

    dropTrafficIfUnhealthy?: bool

    failoverRatio?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderIapItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider iap items0

    Attributes
    ----------
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 Client ID for IAP
    """


    oauth2ClientId?: str


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderLogConfigItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider log config items0

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Whether to enable logging for the load balancer traffic served by this backend service.
    sampleRate : float, default is Undefined, optional
        This field can only be specified if logging is enabled for this backend service. The value of
        the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
        where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
        The default value is 1.0.
    """


    enable?: bool

    sampleRate?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider outlier detection items0

    Attributes
    ----------
    baseEjectionTime : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0BaseEjectionTimeItems0], default is Undefined, optional
        The base time that a host is ejected for. The real time is equal to the base
        time multiplied by the number of times the host has been ejected. Defaults to
        30000ms or 30s.
        Structure is documented below.
    consecutiveErrors : float, default is Undefined, optional
        Number of errors before a host is ejected from the connection pool. When the
        backend host is accessed over HTTP, a 5xx return code qualifies as an error.
        Defaults to 5.
    consecutiveGatewayFailure : float, default is Undefined, optional
        The number of consecutive gateway failures (502, 503, 504 status or connection
        errors that are mapped to one of those status codes) before a consecutive
        gateway failure ejection occurs. Defaults to 5.
    enforcingConsecutiveErrors : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive 5xx. This setting can be used to disable
        ejection or to ramp it up slowly. Defaults to 100.
    enforcingConsecutiveGatewayFailure : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive gateway failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 0.
    enforcingSuccessRate : float, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through success rate statistics. This setting can be used to
        disable ejection or to ramp it up slowly. Defaults to 100.
    interval : [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0IntervalItems0], default is Undefined, optional
        Time interval between ejection sweep analysis. This can result in both new
        ejections as well as hosts being returned to service. Defaults to 10 seconds.
        Structure is documented below.
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in the load balancing pool for the backend service
        that can be ejected. Defaults to 10%.
    successRateMinimumHosts : float, default is Undefined, optional
        The number of hosts in a cluster that must have enough request volume to detect
        success rate outliers. If the number of hosts is less than this setting, outlier
        detection via success rate statistics is not performed for any host in the
        cluster. Defaults to 5.
    successRateRequestVolume : float, default is Undefined, optional
        The minimum number of total requests that must be collected in one interval (as
        defined by the interval duration above) to include this host in success rate
        based outlier detection. If the volume is lower than this setting, outlier
        detection via success rate statistics is not performed for that host. Defaults
        to 100.
    successRateStdevFactor : float, default is Undefined, optional
        This factor is used to determine the ejection threshold for success rate outlier
        ejection. The ejection threshold is the difference between the mean success
        rate, and the product of this factor and the standard deviation of the mean
        success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
        by a thousand to get a double. That is, if the desired factor is 1.9, the
        runtime value should be 1900. Defaults to 1900.
    """


    baseEjectionTime?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0BaseEjectionTimeItems0]

    consecutiveErrors?: float

    consecutiveGatewayFailure?: float

    enforcingConsecutiveErrors?: float

    enforcingConsecutiveGatewayFailure?: float

    enforcingSuccessRate?: float

    interval?: [ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0IntervalItems0]

    maxEjectionPercent?: float

    successRateMinimumHosts?: float

    successRateRequestVolume?: float

    successRateStdevFactor?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0BaseEjectionTimeItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider outlier detection items0 base ejection time items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusAtProviderOutlierDetectionItems0IntervalItems0:
    r"""
    compute gcp upbound io v1beta1 region backend service status at provider outlier detection items0 interval items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta1RegionBackendServiceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


