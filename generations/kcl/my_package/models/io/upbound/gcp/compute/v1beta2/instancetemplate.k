"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InstanceTemplate:
    r"""
    InstanceTemplate is the Schema for the InstanceTemplates API. Manages a VM instance template resource within GCE.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InstanceTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta2InstanceTemplateSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta2InstanceTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta2" = "compute.gcp.upbound.io/v1beta2"

    kind: "InstanceTemplate" = "InstanceTemplate"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta2InstanceTemplateSpec

    status?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatus


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpec:
    r"""
    InstanceTemplateSpec defines the desired state of InstanceTemplate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProvider:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs. This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    description : str, default is Undefined, optional
        A brief description of this resource.
    disk : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0], default is Undefined, optional
        Disks to attach to instances created from this template.
        This can be specified multiple times for multiple disks. Structure is
        documented below.
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
    instanceDescription : str, default is Undefined, optional
        A brief description to use for instances
        created from this template.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to instances
        created from this template.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within instances created from this template.
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, mostly to match the compute_instance resource.
        This replaces the startup-script metadata key on the created instance and
        thus the two mechanisms are not allowed to be used simultaneously.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
    name : str, default is Undefined, optional
        The name of the instance template.
    namePrefix : str, default is Undefined, optional
        Creates a unique name beginning with the specified
        prefix. Conflicts with name.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to instances created from
        this template. This can be specified multiple times for multiple networks.
        Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        An instance template is a global resource that is not
        bound to a zone or a region. However, you can still specify some regional
        resources in an instance template, which restricts the template to the
        region where that resource resides. For example, a custom subnetwork
        resource is tied to a specific region. Defaults to the region of the
        Provider if no value is given.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to the instances. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderScheduling, default is Undefined, optional
        scheduling
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        Tags to attach to the instance.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderAdvancedMachineFeatures

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderConfidentialInstanceConfig

    description?: str

    disk?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0]

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderGuestAcceleratorItems0]

    instanceDescription?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataStartupScript?: str

    minCpuPlatform?: str

    name?: str

    namePrefix?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkPerformanceConfig

    project?: str

    region?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinity

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderScheduling

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderShieldedInstanceConfig

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider disk items0

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether or not the disk should be auto-deleted.
        This defaults to true.
    boot : bool, default is Undefined, optional
        Indicates that this is a boot disk.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the
        /dev/  tree of a Linux operating system running within the instance. If not
        specified, the server chooses a default device name to apply to this disk.
    diskEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0DiskEncryptionKey, default is Undefined, optional
        disk encryption key
    diskName : str, default is Undefined, optional
        Name of the disk. When not provided, this defaults
        to the name of the instance.
    diskSizeGb : float, default is Undefined, optional
        The size of the image in gigabytes. If not
        specified, it will inherit the size of its base image. For SCRATCH disks,
        the size must be exactly 375GB.
    diskType : str, default is Undefined, optional
        The GCE disk type. Such as "pd-ssd", "local-ssd",
        "pd-balanced" or "pd-standard", "hyperdisk-balanced", "hyperdisk-throughput" or "hyperdisk-extreme".
    interface : str, default is Undefined, optional
        Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
        and the request will fail if you attempt to attach a persistent disk in any other format
        than SCSI. Local SSDs can use either NVME or SCSI.
    labels : {str:str}, default is Undefined, optional
        A set of ket/value label pairs to assign to disk created from
        this template
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If you are attaching or creating a boot disk, this must
        read-write mode.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk. This
        sets the number of I/O operations per second that the disk can handle.
        Values must be between 10,000 and 120,000. For more details, see the
        Extreme persistent disk documentation.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to this disk. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
    resourcePoliciesRefs : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0], default is Undefined, optional
        References to ResourcePolicy in compute to populate resourcePolicies.
    resourcePoliciesSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelector, default is Undefined, optional
        resource policies selector
    source : str, default is Undefined, optional
        The name (not self_link)
        of the disk (such as those managed by google_compute_disk) to attach.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImage : str, default is Undefined, optional
        The image from which to
        initialize this disk. This can be one of: the image's self_link,
        projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImageEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceImageEncryptionKey, default is Undefined, optional
        source image encryption key
    sourceRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRef, default is Undefined, optional
        source ref
    sourceSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelector, default is Undefined, optional
        source selector
    sourceSnapshot : str, default is Undefined, optional
        The source snapshot to create this disk.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceSnapshotEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSnapshotEncryptionKey, default is Undefined, optional
        source snapshot encryption key
    $type : str, default is Undefined, optional
        The type of GCE disk, can be either "SCRATCH" or
        "PERSISTENT".
    """


    autoDelete?: bool

    boot?: bool

    deviceName?: str

    diskEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0DiskEncryptionKey

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    interface?: str

    labels?: {str:str}

    mode?: str

    provisionedIops?: float

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    resourcePoliciesRefs?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0]

    resourcePoliciesSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelector

    source?: str

    sourceImage?: str

    sourceImageEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceImageEncryptionKey

    sourceRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRef

    sourceSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelector

    sourceSnapshot?: str

    sourceSnapshotEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSnapshotEncryptionKey

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0DiskEncryptionKey:
    r"""
    Encrypts or decrypts a disk using a customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    """


    kmsKeySelfLink?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelector:
    r"""
    Selector for a list of ResourcePolicy in compute to populate resourcePolicies.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0ResourcePoliciesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceImageEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source image. Required if the source image is protected by a
    customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRef:
    r"""
    Reference to a Disk in compute to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelector:
    r"""
    Selector for a Disk in compute to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderDiskItems0SourceSnapshotEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source snapshot. Structure
    documented below.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
        on that network). This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Use network attribute for Legacy or Auto subnetted networks and
        subnetwork for custom subnetted networks.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    networkRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelector, default is Undefined, optional
        network selector
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        the name of the subnetwork to attach this interface
        to. The subnetwork must exist in the same region this instance will be
        created in. Either network or subnetwork must be provided.
    subnetworkProject : str, default is Undefined, optional
        The ID of the project in which the subnetwork belongs.
        If it is not provided, the provider project is used.
    subnetworkRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6Address?: str

    network?: str

    networkIp?: str

    networkRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelector

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelector


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        The IP address that will be 1:1 mapped to the instance's
        network ip. If not given, one will be generated.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    """


    natIp?: str

    networkTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. At the time of writing only a
        netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
        error.
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    """


    networkTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0NetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkInterfaceItems0SubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies whether the instance should be
        automatically restarted if it is terminated by Compute Engine (not
        terminated by a user). This defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingLocalSsdRecoveryTimeoutItems0], default is Undefined, optional
        io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
        The local_ssd_recovery_timeout block supports:
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        min node cpus
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Defines the maintenance behavior for this
        instance.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Allows instance to be preempted. This defaults to
        false. Read more on this
        here.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingLocalSsdRecoveryTimeoutItems0]

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingLocalSsdRecoveryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider scheduling local ssd recovery timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec for provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccount:
    r"""
    Service account to attach to the instance. Structure is documented below.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address. If not given, the
        default Google Compute Engine service account is used.
    emailRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRef, default is Undefined, optional
        email ref
    emailSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelector, default is Undefined, optional
        email selector
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    """


    email?: str

    emailRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRef

    emailSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelector

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecForProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs. This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    description : str, default is Undefined, optional
        A brief description of this resource.
    disk : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0], default is Undefined, optional
        Disks to attach to instances created from this template.
        This can be specified multiple times for multiple disks. Structure is
        documented below.
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
    instanceDescription : str, default is Undefined, optional
        A brief description to use for instances
        created from this template.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to instances
        created from this template.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within instances created from this template.
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, mostly to match the compute_instance resource.
        This replaces the startup-script metadata key on the created instance and
        thus the two mechanisms are not allowed to be used simultaneously.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
    name : str, default is Undefined, optional
        The name of the instance template.
    namePrefix : str, default is Undefined, optional
        Creates a unique name beginning with the specified
        prefix. Conflicts with name.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to instances created from
        this template. This can be specified multiple times for multiple networks.
        Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        An instance template is a global resource that is not
        bound to a zone or a region. However, you can still specify some regional
        resources in an instance template, which restricts the template to the
        region where that resource resides. For example, a custom subnetwork
        resource is tied to a specific region. Defaults to the region of the
        Provider if no value is given.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to the instances. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderScheduling, default is Undefined, optional
        scheduling
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        Tags to attach to the instance.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderAdvancedMachineFeatures

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderConfidentialInstanceConfig

    description?: str

    disk?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0]

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderGuestAcceleratorItems0]

    instanceDescription?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataStartupScript?: str

    minCpuPlatform?: str

    name?: str

    namePrefix?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkPerformanceConfig

    project?: str

    region?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinity

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderScheduling

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderShieldedInstanceConfig

    tags?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider disk items0

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether or not the disk should be auto-deleted.
        This defaults to true.
    boot : bool, default is Undefined, optional
        Indicates that this is a boot disk.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the
        /dev/  tree of a Linux operating system running within the instance. If not
        specified, the server chooses a default device name to apply to this disk.
    diskEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0DiskEncryptionKey, default is Undefined, optional
        disk encryption key
    diskName : str, default is Undefined, optional
        Name of the disk. When not provided, this defaults
        to the name of the instance.
    diskSizeGb : float, default is Undefined, optional
        The size of the image in gigabytes. If not
        specified, it will inherit the size of its base image. For SCRATCH disks,
        the size must be exactly 375GB.
    diskType : str, default is Undefined, optional
        The GCE disk type. Such as "pd-ssd", "local-ssd",
        "pd-balanced" or "pd-standard", "hyperdisk-balanced", "hyperdisk-throughput" or "hyperdisk-extreme".
    interface : str, default is Undefined, optional
        Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
        and the request will fail if you attempt to attach a persistent disk in any other format
        than SCSI. Local SSDs can use either NVME or SCSI.
    labels : {str:str}, default is Undefined, optional
        A set of ket/value label pairs to assign to disk created from
        this template
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If you are attaching or creating a boot disk, this must
        read-write mode.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk. This
        sets the number of I/O operations per second that the disk can handle.
        Values must be between 10,000 and 120,000. For more details, see the
        Extreme persistent disk documentation.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to this disk. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
    resourcePoliciesRefs : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0], default is Undefined, optional
        References to ResourcePolicy in compute to populate resourcePolicies.
    resourcePoliciesSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelector, default is Undefined, optional
        resource policies selector
    source : str, default is Undefined, optional
        The name (not self_link)
        of the disk (such as those managed by google_compute_disk) to attach.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImage : str, default is Undefined, optional
        The image from which to
        initialize this disk. This can be one of: the image's self_link,
        projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImageEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceImageEncryptionKey, default is Undefined, optional
        source image encryption key
    sourceRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRef, default is Undefined, optional
        source ref
    sourceSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelector, default is Undefined, optional
        source selector
    sourceSnapshot : str, default is Undefined, optional
        The source snapshot to create this disk.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceSnapshotEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSnapshotEncryptionKey, default is Undefined, optional
        source snapshot encryption key
    $type : str, default is Undefined, optional
        The type of GCE disk, can be either "SCRATCH" or
        "PERSISTENT".
    """


    autoDelete?: bool

    boot?: bool

    deviceName?: str

    diskEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0DiskEncryptionKey

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    interface?: str

    labels?: {str:str}

    mode?: str

    provisionedIops?: float

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    resourcePoliciesRefs?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0]

    resourcePoliciesSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelector

    source?: str

    sourceImage?: str

    sourceImageEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceImageEncryptionKey

    sourceRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRef

    sourceSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelector

    sourceSnapshot?: str

    sourceSnapshotEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSnapshotEncryptionKey

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0DiskEncryptionKey:
    r"""
    Encrypts or decrypts a disk using a customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    """


    kmsKeySelfLink?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0Policy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelector:
    r"""
    Selector for a list of ResourcePolicy in compute to populate resourcePolicies.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0ResourcePoliciesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceImageEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source image. Required if the source image is protected by a
    customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRef:
    r"""
    Reference to a Disk in compute to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelector:
    r"""
    Selector for a Disk in compute to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderDiskItems0SourceSnapshotEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source snapshot. Structure
    documented below.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
        on that network). This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Use network attribute for Legacy or Auto subnetted networks and
        subnetwork for custom subnetted networks.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    networkRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelector, default is Undefined, optional
        network selector
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        the name of the subnetwork to attach this interface
        to. The subnetwork must exist in the same region this instance will be
        created in. Either network or subnetwork must be provided.
    subnetworkProject : str, default is Undefined, optional
        The ID of the project in which the subnetwork belongs.
        If it is not provided, the provider project is used.
    subnetworkRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6Address?: str

    network?: str

    networkIp?: str

    networkRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelector

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str

    subnetworkRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRef

    subnetworkSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelector


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        The IP address that will be 1:1 mapped to the instance's
        network ip. If not given, one will be generated.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    """


    natIp?: str

    networkTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. At the time of writing only a
        netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
        error.
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    """


    networkTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRef:
    r"""
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelector:
    r"""
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0NetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRef:
    r"""
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelector:
    r"""
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkInterfaceItems0SubnetworkSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies whether the instance should be
        automatically restarted if it is terminated by Compute Engine (not
        terminated by a user). This defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingLocalSsdRecoveryTimeoutItems0], default is Undefined, optional
        io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
        The local_ssd_recovery_timeout block supports:
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        min node cpus
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Defines the maintenance behavior for this
        instance.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Allows instance to be preempted. This defaults to
        false. Read more on this
        here.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingLocalSsdRecoveryTimeoutItems0]

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingLocalSsdRecoveryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider scheduling local ssd recovery timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance template spec init provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccount:
    r"""
    Service account to attach to the instance. Structure is documented below.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address. If not given, the
        default Google Compute Engine service account is used.
    emailRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRef, default is Undefined, optional
        email ref
    emailSelector : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelector, default is Undefined, optional
        email selector
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    """


    email?: str

    emailRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRef

    emailSelector?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelector

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRef:
    r"""
    Reference to a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelector:
    r"""
    Selector for a ServiceAccount in cloudplatform to populate email.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelectorPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderServiceAccountEmailSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecInitProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatus:
    r"""
    InstanceTemplateStatus defines the observed state of InstanceTemplate.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProvider:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider

    Attributes
    ----------
    advancedMachineFeatures : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    canIpForward : bool, default is Undefined, optional
        Whether to allow sending and receiving of
        packets with non-matching source or destination IPs. This defaults to false.
    confidentialInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    description : str, default is Undefined, optional
        A brief description of this resource.
    disk : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0], default is Undefined, optional
        Disks to attach to instances created from this template.
        This can be specified multiple times for multiple disks. Structure is
        documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    guestAccelerator : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderGuestAcceleratorItems0], default is Undefined, optional
        List of the type and count of accelerator cards attached to the instance. Structure documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/instanceTemplates/{{name}}
    instanceDescription : str, default is Undefined, optional
        A brief description to use for instances
        created from this template.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to instances
        created from this template.
    machineType : str, default is Undefined, optional
        The machine type to create.
    metadata : {str:str}, default is Undefined, optional
        Metadata key/value pairs to make available from
        within instances created from this template.
    metadataFingerprint : str, default is Undefined, optional
        The unique fingerprint of the metadata.
    metadataStartupScript : str, default is Undefined, optional
        An alternative to using the
        startup-script metadata key, mostly to match the compute_instance resource.
        This replaces the startup-script metadata key on the created instance and
        thus the two mechanisms are not allowed to be used simultaneously.
    minCpuPlatform : str, default is Undefined, optional
        Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
        Intel Haswell or Intel Skylake. See the complete list here.
    name : str, default is Undefined, optional
        The name of the instance template.
    namePrefix : str, default is Undefined, optional
        Creates a unique name beginning with the specified
        prefix. Conflicts with name.
    networkInterface : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0], default is Undefined, optional
        Networks to attach to instances created from
        this template. This can be specified multiple times for multiple networks.
        Structure is documented below.
    networkPerformanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkPerformanceConfig, default is Undefined, optional
        network performance config
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        An instance template is a global resource that is not
        bound to a zone or a region. However, you can still specify some regional
        resources in an instance template, which restricts the template to the
        region where that resource resides. For example, a custom subnetwork
        resource is tied to a specific region. Defaults to the region of the
        Provider if no value is given.
    reservationAffinity : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to the instances. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
    scheduling : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderScheduling, default is Undefined, optional
        scheduling
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    selfLinkUnique : str, default is Undefined, optional
        A special URI of the created resource that uniquely identifies this instance template with the following format: projects/{{project}}/global/instanceTemplates/{{name}}?uniqueId={{uniqueId}}
        Referencing an instance template via this attribute prevents Time of Check to Time of Use attacks when the instance template resides in a shared/untrusted environment.
    serviceAccount : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderServiceAccount, default is Undefined, optional
        service account
    shieldedInstanceConfig : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    tags : [str], default is Undefined, optional
        Tags to attach to the instance.
    tagsFingerprint : str, default is Undefined, optional
        The unique fingerprint of the tags.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    """


    advancedMachineFeatures?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderAdvancedMachineFeatures

    canIpForward?: bool

    confidentialInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderConfidentialInstanceConfig

    description?: str

    disk?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0]

    effectiveLabels?: {str:str}

    guestAccelerator?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderGuestAcceleratorItems0]

    id?: str

    instanceDescription?: str

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    metadataFingerprint?: str

    metadataStartupScript?: str

    minCpuPlatform?: str

    name?: str

    namePrefix?: str

    networkInterface?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0]

    networkPerformanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkPerformanceConfig

    project?: str

    region?: str

    reservationAffinity?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinity

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    scheduling?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderScheduling

    selfLink?: str

    selfLinkUnique?: str

    serviceAccount?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderServiceAccount

    shieldedInstanceConfig?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderShieldedInstanceConfig

    tags?: [str]

    tagsFingerprint?: str

    terraformLabels?: {str:str}


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderAdvancedMachineFeatures:
    r"""
    Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below

    Attributes
    ----------
    enableNestedVirtualization : bool, default is Undefined, optional
        Defines whether the instance should have nested virtualization enabled. Defaults to false.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
    visibleCoreCount : float, default is Undefined, optional
        The number of physical cores to expose to an instance. visible cores info (VC).
    """


    enableNestedVirtualization?: bool

    threadsPerCore?: float

    visibleCoreCount?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderConfidentialInstanceConfig:
    r"""
    Enable Confidential Mode on this VM. Structure is documented below

    Attributes
    ----------
    confidentialInstanceType : str, default is Undefined, optional
        Defines the confidential computing technology the instance uses. SEV is an AMD feature. TDX is an Intel feature. One of the following values is required: SEV, SEV_SNP, TDX. on_host_maintenance can be set to MIGRATE if confidential_instance_type is set to SEV and min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM. If SEV_SNP, currently min_cpu_platform has to be set to "AMD Milan" or this will fail to create the VM. TDX is only available in beta.
    enableConfidentialCompute : bool, default is Undefined, optional
        Defines whether the instance should have confidential compute enabled with AMD SEV. If enabled, on_host_maintenance can be set to MIGRATE if min_cpu_platform is set to "AMD Milan". Otherwise, on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
    """


    confidentialInstanceType?: str

    enableConfidentialCompute?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider disk items0

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        Whether or not the disk should be auto-deleted.
        This defaults to true.
    boot : bool, default is Undefined, optional
        Indicates that this is a boot disk.
    deviceName : str, default is Undefined, optional
        A unique device name that is reflected into the
        /dev/  tree of a Linux operating system running within the instance. If not
        specified, the server chooses a default device name to apply to this disk.
    diskEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0DiskEncryptionKey, default is Undefined, optional
        disk encryption key
    diskName : str, default is Undefined, optional
        Name of the disk. When not provided, this defaults
        to the name of the instance.
    diskSizeGb : float, default is Undefined, optional
        The size of the image in gigabytes. If not
        specified, it will inherit the size of its base image. For SCRATCH disks,
        the size must be exactly 375GB.
    diskType : str, default is Undefined, optional
        The GCE disk type. Such as "pd-ssd", "local-ssd",
        "pd-balanced" or "pd-standard", "hyperdisk-balanced", "hyperdisk-throughput" or "hyperdisk-extreme".
    interface : str, default is Undefined, optional
        Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
        and the request will fail if you attempt to attach a persistent disk in any other format
        than SCSI. Local SSDs can use either NVME or SCSI.
    labels : {str:str}, default is Undefined, optional
        A set of ket/value label pairs to assign to disk created from
        this template
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If you are attaching or creating a boot disk, this must
        read-write mode.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS to provision for the disk. This
        sets the number of I/O operations per second that the disk can handle.
        Values must be between 10,000 and 120,000. For more details, see the
        Extreme persistent disk documentation.
    resourceManagerTags : {str:str}, default is Undefined, optional
        A set of key/value resource manager tag pairs to bind to this disk. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456.
    resourcePolicies : [str], default is Undefined, optional
        - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
    source : str, default is Undefined, optional
        The name (not self_link)
        of the disk (such as those managed by google_compute_disk) to attach.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImage : str, default is Undefined, optional
        The image from which to
        initialize this disk. This can be one of: the image's self_link,
        projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceImageEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceImageEncryptionKey, default is Undefined, optional
        source image encryption key
    sourceSnapshot : str, default is Undefined, optional
        The source snapshot to create this disk.
        ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
    sourceSnapshotEncryptionKey : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceSnapshotEncryptionKey, default is Undefined, optional
        source snapshot encryption key
    $type : str, default is Undefined, optional
        The type of GCE disk, can be either "SCRATCH" or
        "PERSISTENT".
    """


    autoDelete?: bool

    boot?: bool

    deviceName?: str

    diskEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0DiskEncryptionKey

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    interface?: str

    labels?: {str:str}

    mode?: str

    provisionedIops?: float

    resourceManagerTags?: {str:str}

    resourcePolicies?: [str]

    source?: str

    sourceImage?: str

    sourceImageEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceImageEncryptionKey

    sourceSnapshot?: str

    sourceSnapshotEncryptionKey?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceSnapshotEncryptionKey

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0DiskEncryptionKey:
    r"""
    Encrypts or decrypts a disk using a customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    """


    kmsKeySelfLink?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceImageEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source image. Required if the source image is protected by a
    customer-supplied encryption key.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderDiskItems0SourceSnapshotEncryptionKey:
    r"""
    The customer-supplied encryption
    key of the source snapshot. Structure
    documented below.

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key that is
        stored in Google Cloud KMS.
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account being used for the
        encryption request for the given KMS key. If absent, the Compute Engine
        default service account is used.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderGuestAcceleratorItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider guest accelerator items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of the guest accelerator cards exposed to this instance.
    $type : str, default is Undefined, optional
        The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
    """


    count?: float

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider network interface items0

    Attributes
    ----------
    accessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AccessConfigItems0], default is Undefined, optional
        Access configurations, i.e. IPs via which this
        instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
        on that network). This block can be repeated multiple times. Structure documented below.
    aliasIpRange : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0], default is Undefined, optional
        An
        array of alias IP ranges for this network interface. Can only be specified for network
        interfaces on subnet-mode networks. Structure documented below.
    internalIpv6PrefixLength : float, default is Undefined, optional
        internal Ipv6 prefix length
    ipv6AccessConfig : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0], default is Undefined, optional
        An array of IPv6 access configurations for this interface.
        Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
        specified, then this instance will have no external IPv6 Internet access. Structure documented below.
    ipv6AccessType : str, default is Undefined, optional
        ipv6 access type
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    name : str, default is Undefined, optional
        The name of the instance template.
    network : str, default is Undefined, optional
        The name or self_link of the network to attach this interface to.
        Use network attribute for Legacy or Auto subnetted networks and
        subnetwork for custom subnetted networks.
    networkIp : str, default is Undefined, optional
        The private IP address to assign to the instance. If
        empty, the address will be automatically assigned.
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
    queueCount : float, default is Undefined, optional
        The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
    stackType : str, default is Undefined, optional
        The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
    subnetwork : str, default is Undefined, optional
        the name of the subnetwork to attach this interface
        to. The subnetwork must exist in the same region this instance will be
        created in. Either network or subnetwork must be provided.
    subnetworkProject : str, default is Undefined, optional
        The ID of the project in which the subnetwork belongs.
        If it is not provided, the provider project is used.
    """


    accessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AccessConfigItems0]

    aliasIpRange?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0]

    internalIpv6PrefixLength?: float

    ipv6AccessConfig?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0]

    ipv6AccessType?: str

    ipv6Address?: str

    name?: str

    network?: str

    networkIp?: str

    nicType?: str

    queueCount?: float

    stackType?: str

    subnetwork?: str

    subnetworkProject?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider network interface items0 access config items0

    Attributes
    ----------
    natIp : str, default is Undefined, optional
        The IP address that will be 1:1 mapped to the instance's
        network ip. If not given, one will be generated.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The name of the instance template.
    """


    natIp?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0AliasIPRangeItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider network interface items0 alias IP range items0

    Attributes
    ----------
    ipCidrRange : str, default is Undefined, optional
        The IP CIDR range represented by this alias IP range. This IP CIDR range
        must belong to the specified subnetwork and cannot contain IP addresses reserved by
        system or used by other network interfaces. At the time of writing only a
        netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
        error.
    subnetworkRangeName : str, default is Undefined, optional
        The subnetwork secondary range name specifying
        the secondary range from which to allocate the IP CIDR range for this alias IP
        range. If left unspecified, the primary range of the subnetwork will be used.
    """


    ipCidrRange?: str

    subnetworkRangeName?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkInterfaceItems0IPV6AccessConfigItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider network interface items0 IP v6 access config items0

    Attributes
    ----------
    externalIpv6 : str, default is Undefined, optional
        external Ipv6
    externalIpv6PrefixLength : str, default is Undefined, optional
        external Ipv6 prefix length
    name : str, default is Undefined, optional
        The name of the instance template.
    networkTier : str, default is Undefined, optional
        The service-level to be provided for IPv6 traffic when the
        subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
    publicPtrDomainName : str, default is Undefined, optional
        The name of the instance template.
    """


    externalIpv6?: str

    externalIpv6PrefixLength?: str

    name?: str

    networkTier?: str

    publicPtrDomainName?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderNetworkPerformanceConfig:
    r"""
    os-features, and network_interface.0.nic-type must be GVNIC
    in order for this setting to take effect.

    Attributes
    ----------
    totalEgressBandwidthTier : str, default is Undefined, optional
        The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
    """


    totalEgressBandwidthTier?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinity:
    r"""
    Specifies the reservations that this instance can consume from.
    Structure is documented below.

    Attributes
    ----------
    specificReservation : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinitySpecificReservation, default is Undefined, optional
        specific reservation
    $type : str, default is Undefined, optional
        The type of reservation from which this instance can consume resources.
    """


    specificReservation?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinitySpecificReservation

    $type?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderReservationAffinitySpecificReservation:
    r"""
    Specifies the label selector for the reservation to use..
    Structure is documented below.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderScheduling:
    r"""
    The scheduling strategy to use. More details about
    this configuration option are detailed below.

    Attributes
    ----------
    automaticRestart : bool, default is Undefined, optional
        Specifies whether the instance should be
        automatically restarted if it is terminated by Compute Engine (not
        terminated by a user). This defaults to true.
    instanceTerminationAction : str, default is Undefined, optional
        Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
    localSsdRecoveryTimeout : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingLocalSsdRecoveryTimeoutItems0], default is Undefined, optional
        io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
        The local_ssd_recovery_timeout block supports:
    maxRunDuration : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingMaxRunDuration, default is Undefined, optional
        max run duration
    minNodeCpus : float, default is Undefined, optional
        min node cpus
    nodeAffinities : [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingNodeAffinitiesItems0], default is Undefined, optional
        Specifies node affinities or anti-affinities
        to determine which sole-tenant nodes your instances and managed instance
        groups will use as host systems. Read more on sole-tenant node creation
        here.
        Structure documented below.
    onHostMaintenance : str, default is Undefined, optional
        Defines the maintenance behavior for this
        instance.
    onInstanceStopAction : ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingOnInstanceStopAction, default is Undefined, optional
        on instance stop action
    preemptible : bool, default is Undefined, optional
        Allows instance to be preempted. This defaults to
        false. Read more on this
        here.
    provisioningModel : str, default is Undefined, optional
        Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
        preemptible should be true and automatic_restart should be
        false. For more info about
        SPOT, read here
    """


    automaticRestart?: bool

    instanceTerminationAction?: str

    localSsdRecoveryTimeout?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingLocalSsdRecoveryTimeoutItems0]

    maxRunDuration?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingMaxRunDuration

    minNodeCpus?: float

    nodeAffinities?: [ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingNodeAffinitiesItems0]

    onHostMaintenance?: str

    onInstanceStopAction?: ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingOnInstanceStopAction

    preemptible?: bool

    provisioningModel?: str


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingLocalSsdRecoveryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider scheduling local ssd recovery timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingMaxRunDuration:
    r"""
    The duration of the instance. Instance will run and be terminated after then, the termination action could be defined in instance_termination_action. Structure is documented below.

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented with a 0
        seconds field and a positive nanos field. Must be from 0 to
        999,999,999 inclusive.
    seconds : float, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to
        315,576,000,000 inclusive. Note: these bounds are computed from: 60
        sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
    """


    nanos?: float

    seconds?: float


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingNodeAffinitiesItems0:
    r"""
    compute gcp upbound io v1beta2 instance template status at provider scheduling node affinities items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
    operator : str, default is Undefined, optional
        The operator. Can be IN for node-affinities
        or NOT_IN for anti-affinities.
    values : [str], default is Undefined, optional
        Corresponds to the label values of a reservation resource.
    """


    key?: str

    operator?: str

    values?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderSchedulingOnInstanceStopAction:
    r"""
    Specifies the action to be performed when the instance is terminated using max_run_duration and STOP instance_termination_action. Only support true discard_local_ssd at this point. Structure is documented below.

    Attributes
    ----------
    discardLocalSsd : bool, default is Undefined, optional
        Whether to discard local SSDs attached to the VM while terminating using max_run_duration. Only supports true at this point.
    """


    discardLocalSsd?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderServiceAccount:
    r"""
    Service account to attach to the instance. Structure is documented below.

    Attributes
    ----------
    email : str, default is Undefined, optional
        The service account e-mail address. If not given, the
        default Google Compute Engine service account is used.
    scopes : [str], default is Undefined, optional
        A list of service scopes. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    """


    email?: str

    scopes?: [str]


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusAtProviderShieldedInstanceConfig:
    r"""
    Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
    Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
    enableSecureBoot : bool, default is Undefined, optional
        - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
    enableVtpm : bool, default is Undefined, optional
        - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema ComputeGcpUpboundIoV1beta2InstanceTemplateStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


