"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema URLMap:
    r"""
    URLMap is the Schema for the URLMaps API. UrlMaps are used to route requests to a backend service based on rules that you define for the host and path of an incoming URL.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "URLMap", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1URLMapSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1URLMapStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "URLMap" = "URLMap"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1URLMapSpec

    status?: ComputeGcpUpboundIoV1beta1URLMapStatus


schema ComputeGcpUpboundIoV1beta1URLMapSpec:
    r"""
    URLMapSpec defines the desired state of URLMap

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1URLMapSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1URLMapSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1URLMapSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1URLMapSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1URLMapSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider

    Attributes
    ----------
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
        like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
        If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
        is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. The headerAction specified here take effect after
        headerAction specified under pathMatcher.
        Structure is documented below.
    hostRule : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    pathMatcher : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    test : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0]

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelector

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultURLRedirectItems0]

    description?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0]

    hostRule?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHostRuleItems0]

    pathMatcher?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0]

    project?: str

    test?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see
        W3C Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
        As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
        percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
        by the Loadbalancer for a percentage of requests.
        timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
        Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
        the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time the request has been
        fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
        If not specified, will use the largest timeout among all backend services associated with the route.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to the matched service.
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderDefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
        advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
        to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
        Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. HeaderAction specified here are applied after the
        matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
        Structure is documented below.
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0]

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultURLRedirectItems0]

    description?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0]

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0DefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    paths?: [str]

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0]

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0PathRuleItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 path rule items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    matchRules : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0]

    matchRules?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0]

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0], default is Undefined, optional
        The header value must be an integer and its value must be in the range specified
        in rangeMatch. If the header does not contain an integer, number or is empty,
        the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
        not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0]

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0 header matches items0 range match items0

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRef:
    r"""
    Reference to a BackendService in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelector:
    r"""
    Selector for a BackendService in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider path matcher items0 route rules items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec for provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelector, default is Undefined, optional
        service selector
    """


    description?: str

    host?: str

    path?: str

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelector


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecForProviderTestItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
        like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
        If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
        is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. The headerAction specified here take effect after
        headerAction specified under pathMatcher.
        Structure is documented below.
    hostRule : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    pathMatcher : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    test : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0]

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelector

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultURLRedirectItems0]

    description?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0]

    hostRule?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHostRuleItems0]

    pathMatcher?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0]

    project?: str

    test?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see
        W3C Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
        As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
        percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
        by the Loadbalancer for a percentage of requests.
        timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
        Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
        the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time the request has been
        fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
        If not specified, will use the largest timeout among all backend services associated with the route.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to the matched service.
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderDefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
        advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
        to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
        Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef, default is Undefined, optional
        default service ref
    defaultServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector, default is Undefined, optional
        default service selector
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. HeaderAction specified here are applied after the
        matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
        Structure is documented below.
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0]

    defaultService?: str

    defaultServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef

    defaultServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirectItems0]

    description?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0]

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate defaultService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0DefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    paths?: [str]

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0]

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    backendServiceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef, default is Undefined, optional
        backend service ref
    backendServiceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector, default is Undefined, optional
        backend service selector
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    backendServiceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef

    backendServiceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRef:
    r"""
    Reference to a BackendService in compute to populate backendService.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelector:
    r"""
    Selector for a BackendService in compute to populate backendService.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0BackendServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0PathRuleItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 path rule items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    matchRules : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector, default is Undefined, optional
        service selector
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0]

    matchRules?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0]

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0], default is Undefined, optional
        The header value must be an integer and its value must be in the range specified
        in rangeMatch. If the header does not contain an integer, number or is empty,
        the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
        not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0]

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0 header matches items0 range match items0

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRef:
    r"""
    Reference to a BackendService in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelector:
    r"""
    Selector for a BackendService in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider path matcher items0 route rules items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0:
    r"""
    compute gcp upbound io v1beta1 URL map spec init provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    serviceRef : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRef, default is Undefined, optional
        service ref
    serviceSelector : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelector, default is Undefined, optional
        service selector
    """


    description?: str

    host?: str

    path?: str

    service?: str

    serviceRef?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRef

    serviceSelector?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelector


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRef:
    r"""
    Reference to a BackendBucket in compute to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelector:
    r"""
    Selector for a BackendBucket in compute to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecInitProviderTestItems0ServiceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1URLMapSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1URLMapSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1URLMapStatus:
    r"""
    URLMapStatus defines the observed state of URLMap.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1URLMapStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1URLMapStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1URLMapStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1URLMapStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider

    Attributes
    ----------
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
        like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.
        If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
        is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given rules match.
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    fingerprint : str, default is Undefined, optional
        Fingerprint of this resource. A hash of the contents stored in this object. This
        field is used in optimistic locking.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. The headerAction specified here take effect after
        headerAction specified under pathMatcher.
        Structure is documented below.
    hostRule : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHostRuleItems0], default is Undefined, optional
        The list of HostRules to use against the URL.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/global/urlMaps/{{name}}
    mapId : float, default is Undefined, optional
        The unique identifier for the resource.
    pathMatcher : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0], default is Undefined, optional
        The list of named PathMatchers to use against the URL.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    test : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderTestItems0], default is Undefined, optional
        The list of expected URL mapping tests. Request to update this UrlMap will
        succeed only if all of the test cases pass. You can specify a maximum of 100
        tests per UrlMap.
        Structure is documented below.
    """


    creationTimestamp?: str

    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0]

    defaultService?: str

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultURLRedirectItems0]

    description?: str

    fingerprint?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0]

    hostRule?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHostRuleItems0]

    id?: str

    mapId?: float

    pathMatcher?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0]

    project?: str

    selfLink?: str

    test?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderTestItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see
        W3C Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
        As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a
        percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted
        by the Loadbalancer for a percentage of requests.
        timeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
        Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service,
        the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time the request has been
        fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.
        If not specified, will use the largest timeout among all backend services associated with the route.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to the matched service.
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match occurs.
        The weights determine the fraction of traffic that flows to their corresponding backend service.
        If all traffic needs to go to a single backend service, there must be one weightedBackendService
        with weight set to a non 0 number.
        Once a backendService is identified and before forwarding the request to the backend service,
        advanced routing actions like Url rewrites and header transformations are applied depending on
        additional settings specified in this HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderDefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one that was
        supplied in the request. The value must be between 1 and 255 characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https. If set to
        false, the URL scheme of the redirected request will remain the same as that of the
        request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this
        true for TargetHttpsProxy is not permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one that was
        supplied in the request. pathRedirect cannot be supplied together with
        prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the
        original request will be used for the redirect. The value must be between 1 and 1024
        characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch,
        retaining the remaining portion of the URL before redirecting the request.
        prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or
        neither. If neither is supplied, the path of the original request will be used for
        the redirect. The value must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is removed prior
        to redirecting the request. If set to false, the query portion of the original URL is
        retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderHostRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider host rule items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    hosts : [str], default is Undefined, optional
        The list of host patterns to match. They must be valid hostnames, except * will
        match any string of ([a-z0-9-.]*). In that case, * must be the first character
        and must be followed in the pattern by either - or ..
    pathMatcher : str, default is Undefined, optional
        The name of the PathMatcher to use to match the path portion of the URL if the
        hostRule matches the URL's host portion.
    """


    description?: str

    hosts?: [str]

    pathMatcher?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0

    Attributes
    ----------
    defaultRouteAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0], default is Undefined, optional
        defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs
        advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request
        to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.
        Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.
        Only one of defaultRouteAction or defaultUrlRedirect must be set.
        Structure is documented below.
    defaultService : str, default is Undefined, optional
        The backend service or backend bucket to use when none of the given paths match.
    defaultUrlRedirect : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirectItems0], default is Undefined, optional
        When none of the specified hostRules match, the request is redirected to a URL specified
        by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or
        defaultRouteAction must not be set.
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when you create
        the resource.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. HeaderAction specified here are applied after the
        matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap
        Structure is documented below.
    name : str, default is Undefined, optional
        The name to which this PathMatcher is referred by the HostRule.
    pathRule : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0], default is Undefined, optional
        The list of path rules. Use this list instead of routeRules when routing based
        on simple path matching is all that's required. The order by which path rules
        are specified does not matter. Matches are always done on the longest-path-first
        basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/*
        irrespective of the order in which those paths appear in this list. Within a
        given pathMatcher, only one of pathRules or routeRules must be set.
        Structure is documented below.
    routeRules : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0], default is Undefined, optional
        The list of ordered HTTP route rules. Use this list instead of pathRules when
        advanced route matching and routing actions are desired. The order of specifying
        routeRules matters: the first rule that matches will cause its specified routing
        action to take effect. Within a given pathMatcher, only one of pathRules or
        routeRules must be set. routeRules are not supported in UrlMaps intended for
        External load balancers.
        Structure is documented below.
    """


    defaultRouteAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0]

    defaultService?: str

    defaultUrlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirectItems0]

    description?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0]

    name?: str

    pathRule?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0]

    routeRules?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultRouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0DefaultURLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 default URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        The list of path patterns to match. Each must start with / and the only place a
        * is allowed is at the end following a /. The string fed to the path matcher
        does not include any text after the first ? or #, and those chars are not
        allowed here.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    paths?: [str]

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0]

    service?: str

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0PathRuleItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 path rule items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0

    Attributes
    ----------
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    matchRules : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0], default is Undefined, optional
        The rules for determining a match.
        Structure is documented below.
    priority : float, default is Undefined, optional
        For routeRules within a given pathMatcher, priority determines the order
        in which load balancer will interpret routeRules. RouteRules are evaluated
        in order of priority, from the lowest to highest number. The priority of
        a rule decreases as its number increases (1, 2, 3, N+1). The first rule
        that matches the request is applied.
        You cannot configure two or more routeRules with the same priority.
        Priority for each rule must be set to a number between 0 and
        2147483647 inclusive.
        Priority numbers can have gaps, which enable you to add or remove rules
        in the future without affecting the rest of the rules. For example,
        1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which
        you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the
        future without any impact on existing rules.
    routeAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0], default is Undefined, optional
        In response to a matching matchRule, the load balancer performs advanced routing
        actions like URL rewrites, header transformations, etc. prior to forwarding the
        request to the selected backend. If  routeAction specifies any
        weightedBackendServices, service must not be set. Conversely if service is set,
        routeAction cannot contain any  weightedBackendServices. Only one of routeAction
        or urlRedirect must be set.
        Structure is documented below.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    urlRedirect : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0], default is Undefined, optional
        When this rule is matched, the request is redirected to a URL specified by
        urlRedirect. If urlRedirect is specified, service or routeAction must not be
        set.
        Structure is documented below.
    """


    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0]

    matchRules?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0]

    priority?: float

    routeAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0]

    service?: str

    urlRedirect?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0

    Attributes
    ----------
    fullPathMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request must exactly
        match the value specified in fullPathMatch after removing any query parameters
        and anchor that may be part of the original URL. FullPathMatch must be between 1
        and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must
        be specified.
    headerMatches : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0], default is Undefined, optional
        Specifies a list of header match criteria, all of which must match corresponding
        headers in the request.
        Structure is documented below.
    ignoreCase : bool, default is Undefined, optional
        Specifies that prefixMatch and fullPathMatch matches are case sensitive.
        Defaults to false.
    metadataFilters : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0], default is Undefined, optional
        Opaque filter criteria used by Loadbalancer to restrict routing configuration to
        a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS
        clients present node metadata. If a match takes place, the relevant routing
        configuration is made available to those proxies. For each metadataFilter in
        this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the
        filterLabels must match the corresponding label provided in the metadata. If its
        filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match
        with corresponding labels in the provided metadata. metadataFilters specified
        here can be overrides those specified in ForwardingRule that refers to this
        UrlMap. metadataFilters only applies to Loadbalancers that have their
        loadBalancingScheme set to INTERNAL_SELF_MANAGED.
        Structure is documented below.
    pathTemplateMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the path of the request
        must match the wildcard pattern specified in pathTemplateMatch
        after removing any query parameters and anchor that may be part
        of the original URL.
        pathTemplateMatch must be between 1 and 255 characters
        (inclusive).  The pattern specified by pathTemplateMatch may
        have at most 5 wildcard operators and at most 5 variable
        captures in total.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    queryParameterMatches : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0], default is Undefined, optional
        Specifies a list of query parameter match criteria, all of which must match
        corresponding query parameters in the request.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    fullPathMatch?: str

    headerMatches?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0]

    ignoreCase?: bool

    metadataFilters?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0]

    pathTemplateMatch?: str

    prefixMatch?: str

    queryParameterMatches?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0]

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0 header matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    headerName : str, default is Undefined, optional
        The name of the header.
    invertMatch : bool, default is Undefined, optional
        If set to false, the headerMatch is considered a match if the match criteria
        above are met. If set to true, the headerMatch is considered a match if the
        match criteria above are NOT met. Defaults to false.
    prefixMatch : str, default is Undefined, optional
        For satisfying the matchRule condition, the request's path must begin with the
        specified prefixMatch. prefixMatch must begin with a /. The value must be
        between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or
        regexMatch must be specified.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    rangeMatch : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0], default is Undefined, optional
        The header value must be an integer and its value must be in the range specified
        in rangeMatch. If the header does not contain an integer, number or is empty,
        the match fails. For example for a range [-5, 0]   - -3 will match.  - 0 will
        not match.  - 0.25 will not match.  - -3someString will not match.   Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
        Structure is documented below.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    suffixMatch : str, default is Undefined, optional
        The value of the header must end with the contents of suffixMatch. Only one of
        exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
        must be set.
    """


    exactMatch?: str

    headerName?: str

    invertMatch?: bool

    prefixMatch?: str

    presentMatch?: bool

    rangeMatch?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0]

    regexMatch?: str

    suffixMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0HeaderMatchesItems0RangeMatchItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0 header matches items0 range match items0

    Attributes
    ----------
    rangeEnd : float, default is Undefined, optional
        The end of the range (exclusive).
    rangeStart : float, default is Undefined, optional
        The start of the range (inclusive).
    """


    rangeEnd?: float

    rangeStart?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0 metadata filters items0

    Attributes
    ----------
    filterLabels : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0], default is Undefined, optional
        The list of label value pairs that must match labels in the provided metadata
        based on filterMatchCriteria  This list must not be empty and can have at the
        most 64 entries.
        Structure is documented below.
    filterMatchCriteria : str, default is Undefined, optional
        Specifies how individual filterLabel matches within the list of filterLabels
        contribute towards the overall metadataFilter match. Supported values are:
    """


    filterLabels?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0]

    filterMatchCriteria?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0MetadataFiltersItems0FilterLabelsItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0 metadata filters items0 filter labels items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    value : str, default is Undefined, optional
        The value of the label must match the specified value. value can have a maximum
        length of 1024 characters.
    """


    name?: str

    value?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0MatchRulesItems0QueryParameterMatchesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 match rules items0 query parameter matches items0

    Attributes
    ----------
    exactMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter exactly matches
        the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch
        must be set.
    name : str, default is Undefined, optional
        The name of the query parameter to match. The query parameter must exist in the
        request, in the absence of which the request match fails.
    presentMatch : bool, default is Undefined, optional
        Specifies that the queryParameterMatch matches if the request contains the query
        parameter, irrespective of whether the parameter has a value or not. Only one of
        presentMatch, exactMatch and regexMatch must be set.
    regexMatch : str, default is Undefined, optional
        The queryParameterMatch matches if the value of the parameter matches the
        regular expression specified by regexMatch. For the regular expression grammar,
        please see en.cppreference.com/w/cpp/regex/ecmascript  Only one of presentMatch,
        exactMatch and regexMatch must be set.
    """


    exactMatch?: str

    name?: str

    presentMatch?: bool

    regexMatch?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0

    Attributes
    ----------
    corsPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0], default is Undefined, optional
        The specification for allowing client side cross-origin requests. Please see W3C
        Recommendation for Cross Origin Resource Sharing
        Structure is documented below.
    faultInjectionPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0], default is Undefined, optional
        The specification for fault injection introduced into traffic to test the
        resiliency of clients to backend service failure. As part of fault injection,
        when clients send requests to a backend service, delays can be introduced by
        Loadbalancer on a percentage of requests before sending those request to the
        backend service. Similarly requests from clients can be aborted by the
        Loadbalancer for a percentage of requests. timeout and retry_policy will be
        ignored by clients that are configured with a fault_injection_policy.
        Structure is documented below.
    requestMirrorPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0], default is Undefined, optional
        Specifies the policy on how requests intended for the route's backends are
        shadowed to a separate mirrored backend service. Loadbalancer does not wait for
        responses from the shadow service. Prior to sending traffic to the shadow
        service, the host / authority header is suffixed with -shadow.
        Structure is documented below.
    retryPolicy : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0], default is Undefined, optional
        Specifies the retry policy associated with this route.
        Structure is documented below.
    timeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0], default is Undefined, optional
        Specifies the timeout for the selected route. Timeout is computed from the time
        the request is has been fully processed (i.e. end-of-stream) up until the
        response has been completely processed. Timeout includes all retries. If not
        specified, the default value is 15 seconds.
        Structure is documented below.
    urlRewrite : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0], default is Undefined, optional
        The spec to modify the URL of the request, prior to forwarding the request to
        the matched service
        Structure is documented below.
    weightedBackendServices : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0], default is Undefined, optional
        A list of weighted backend services to send traffic to when a route match
        occurs. The weights determine the fraction of traffic that flows to their
        corresponding backend service. If all traffic needs to go to a single backend
        service, there must be one  weightedBackendService with weight set to a non 0
        number. Once a backendService is identified and before forwarding the request to
        the backend service, advanced routing actions like Url rewrites and header
        transformations are applied depending on additional settings specified in this
        HttpRouteAction.
        Structure is documented below.
    """


    corsPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0]

    faultInjectionPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0]

    requestMirrorPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0]

    retryPolicy?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0]

    timeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0]

    urlRewrite?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0]

    weightedBackendServices?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0CorsPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 cors policy items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        In response to a preflight request, setting this to true indicates that the
        actual request can include user credentials. This translates to the Access-
        Control-Allow-Credentials header. Defaults to false.
    allowHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Headers header.
    allowMethods : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Allow-Methods header.
    allowOriginRegexes : [str], default is Undefined, optional
        Specifies the regular expression patterns that match allowed origins. For
        regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript
        An origin is allowed if it matches either allow_origins or allow_origin_regex.
    allowOrigins : [str], default is Undefined, optional
        Specifies the list of origins that will be allowed to do CORS requests. An
        origin is allowed if it matches either allow_origins or allow_origin_regex.
    disabled : bool, default is Undefined, optional
        If true, specifies the CORS policy is disabled.
    exposeHeaders : [str], default is Undefined, optional
        Specifies the content for the Access-Control-Expose-Headers header.
    maxAge : float, default is Undefined, optional
        Specifies how long the results of a preflight request can be cached. This
        translates to the content for the Access-Control-Max-Age header.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOriginRegexes?: [str]

    allowOrigins?: [str]

    disabled?: bool

    exposeHeaders?: [str]

    maxAge?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 fault injection policy items0

    Attributes
    ----------
    abort : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0], default is Undefined, optional
        The specification for how client requests are aborted as part of fault
        injection.
        Structure is documented below.
    delay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0], default is Undefined, optional
        The specification for how client requests are delayed as part of fault
        injection, before being sent to a backend service.
        Structure is documented below.
    """


    abort?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0]

    delay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0AbortItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 fault injection policy items0 abort items0

    Attributes
    ----------
    httpStatus : float, default is Undefined, optional
        The HTTP status code used to abort the request. The value must be between 200
        and 599 inclusive.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    httpStatus?: float

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0

    Attributes
    ----------
    fixedDelay : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0], default is Undefined, optional
        Specifies the value of the fixed delay interval.
        Structure is documented below.
    percentage : float, default is Undefined, optional
        The percentage of traffic (connections/operations/requests) on which delay will
        be introduced as part of fault injection. The value must be between 0.0 and
        100.0 inclusive.
    """


    fixedDelay?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0]

    percentage?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0FaultInjectionPolicyItems0DelayItems0FixedDelayItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 fault injection policy items0 delay items0 fixed delay items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RequestMirrorPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 request mirror policy items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    """


    backendService?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 retry policy items0

    Attributes
    ----------
    numRetries : float, default is Undefined, optional
        Specifies the allowed number retries. This number must be > 0.
    perTryTimeout : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0], default is Undefined, optional
        Specifies a non-zero timeout per retry attempt.
        Structure is documented below.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more conditions when this retry rule applies. Valid values are:
    """


    numRetries?: float

    perTryTimeout?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0]

    retryConditions?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0RetryPolicyItems0PerTryTimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 retry policy items0 per try timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0TimeoutItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 timeout items0

    Attributes
    ----------
    nanos : float, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 seconds field and a positive
        nanos field. Must be from 0 to 999,999,999 inclusive.
    seconds : str, default is Undefined, optional
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: float

    seconds?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0URLRewriteItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 URL rewrite items0

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected service, the request's host
        header is replaced with contents of hostRewrite. The value must be between 1 and
        255 characters.
    pathPrefixRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected backend service, the matching
        portion of the request's path is replaced by pathPrefixRewrite. The value must
        be between 1 and 1024 characters.
    pathTemplateRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected origin, if the
        request matched a pathTemplateMatch, the matching portion of the
        request's path is replaced re-written using the pattern specified
        by pathTemplateRewrite.
        pathTemplateRewrite must be between 1 and 255 characters
        (inclusive), must start with a '/', and must only use variables
        captured by the route's pathTemplate matchers.
        pathTemplateRewrite may only be used when all of a route's
        MatchRules specify pathTemplate.
        Only one of pathPrefixRewrite and pathTemplateRewrite may be
        specified.
    """


    hostRewrite?: str

    pathPrefixRewrite?: str

    pathTemplateRewrite?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 weighted backend services items0

    Attributes
    ----------
    backendService : str, default is Undefined, optional
        The default BackendService resource. Before
        forwarding the request to backendService, the loadbalancer applies any relevant
        headerActions specified as part of this backendServiceWeight.
    headerAction : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0], default is Undefined, optional
        Specifies changes to request and response headers that need to take effect for
        the selected backendService. headerAction specified here take effect before
        headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
        Structure is documented below.
    weight : float, default is Undefined, optional
        Specifies the fraction of traffic sent to backendService, computed as weight /
        (sum of all weightedBackendService weights in routeAction) . The selection of a
        backend service is determined only for new traffic. Once a user's request has
        been directed to a backendService, subsequent requests will be sent to the same
        backendService as determined by the BackendService's session affinity policy.
        The value must be between 0 and 1000
    """


    backendService?: str

    headerAction?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0]

    weight?: float


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0

    Attributes
    ----------
    requestHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0], default is Undefined, optional
        Headers to add to a matching request prior to forwarding the request to the
        backendService.
        Structure is documented below.
    requestHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the request
        prior to forwarding the request to the backendService.
    responseHeadersToAdd : [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0], default is Undefined, optional
        Headers to add the response prior to sending the response back to the client.
        Structure is documented below.
    responseHeadersToRemove : [str], default is Undefined, optional
        A list of header names for headers that need to be removed from the response
        prior to sending the response back to the client.
    """


    requestHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0]

    requestHeadersToRemove?: [str]

    responseHeadersToAdd?: [ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0]

    responseHeadersToRemove?: [str]


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0RequestHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0RouteActionItems0WeightedBackendServicesItems0HeaderActionItems0ResponseHeadersToAddItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 route action items0 weighted backend services items0 header action items0 response headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, optional
        The name of the header.
    headerValue : str, default is Undefined, optional
        The value of the header to add.
    replace : bool, default is Undefined, optional
        If false, headerValue is appended to any values that already exist for the
        header. If true, headerValue is set for the header, discarding any values that
        were set for that header.
    """


    headerName?: str

    headerValue?: str

    replace?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderPathMatcherItems0RouteRulesItems0URLRedirectItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider path matcher items0 route rules items0 URL redirect items0

    Attributes
    ----------
    hostRedirect : str, default is Undefined, optional
        The host that will be used in the redirect response instead of the one
        that was supplied in the request. The value must be between 1 and 255
        characters.
    httpsRedirect : bool, default is Undefined, optional
        If set to true, the URL scheme in the redirected request is set to https.
        If set to false, the URL scheme of the redirected request will remain the
        same as that of the request. This must only be set for UrlMaps used in
        TargetHttpProxys. Setting this true for TargetHttpsProxy is not
        permitted. The default is set to false.
    pathRedirect : str, default is Undefined, optional
        The path that will be used in the redirect response instead of the one
        that was supplied in the request. pathRedirect cannot be supplied
        together with prefixRedirect. Supply one alone or neither. If neither is
        supplied, the path of the original request will be used for the redirect.
        The value must be between 1 and 1024 characters.
    prefixRedirect : str, default is Undefined, optional
        The prefix that replaces the prefixMatch specified in the
        HttpRouteRuleMatch, retaining the remaining portion of the URL before
        redirecting the request. prefixRedirect cannot be supplied together with
        pathRedirect. Supply one alone or neither. If neither is supplied, the
        path of the original request will be used for the redirect. The value
        must be between 1 and 1024 characters.
    redirectResponseCode : str, default is Undefined, optional
        The HTTP Status code to use for this RedirectAction. Supported values are:
    stripQuery : bool, default is Undefined, optional
        If set to true, any accompanying query portion of the original URL is
        removed prior to redirecting the request. If set to false, the query
        portion of the original URL is retained.
        This field is required to ensure an empty block is not set. The normal default value is false.
    """


    hostRedirect?: str

    httpsRedirect?: bool

    pathRedirect?: str

    prefixRedirect?: str

    redirectResponseCode?: str

    stripQuery?: bool


schema ComputeGcpUpboundIoV1beta1URLMapStatusAtProviderTestItems0:
    r"""
    compute gcp upbound io v1beta1 URL map status at provider test items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this test case.
    host : str, default is Undefined, optional
        Host portion of the URL.
    path : str, default is Undefined, optional
        Path portion of the URL.
    service : str, default is Undefined, optional
        The backend service or backend bucket link that should be matched by this test.
    """


    description?: str

    host?: str

    path?: str

    service?: str


schema ComputeGcpUpboundIoV1beta1URLMapStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


