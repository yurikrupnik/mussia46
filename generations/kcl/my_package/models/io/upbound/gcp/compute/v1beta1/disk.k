"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Disk:
    r"""
    Disk is the Schema for the Disks API. Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Disk", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1DiskSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1DiskStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "Disk" = "Disk"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1DiskSpec

    status?: ComputeGcpUpboundIoV1beta1DiskStatus


schema ComputeGcpUpboundIoV1beta1DiskSpec:
    r"""
    DiskSpec defines the desired state of Disk

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1DiskSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1DiskSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1DiskSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1DiskSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1DiskSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1DiskSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1DiskSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        The accessMode of the disk.
        For example:
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1DiskSpecForProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of IOPS every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much Throughput must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of Throughput every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the image or
        snapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with image or snapshot,
        the value must not be less than the size of the image
        or the size of the snapshot.
        You can add lifecycle.prevent_destroy in the config to prevent destroying
        and recreating.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. If the snapshot is in another
        project than this disk, you must supply a full URL. For example, the
        following are valid values:
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceImageEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceImageEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source image. Required if
        the source image is protected by a customer-supplied encryption key.
        Structure is documented below.
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    zone : str, default is Undefined, required
        A reference to the zone where the disk resides.
    """


    accessMode?: str

    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0]

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0]

    enableConfidentialCompute?: bool

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1DiskSpecForProviderGuestOsFeaturesItems0]

    image?: str

    labels?: {str:str}

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    provisionedIops?: float

    provisionedThroughput?: float

    size?: float

    snapshot?: str

    sourceDisk?: str

    sourceImageEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceImageEncryptionKeyItems0]

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceSnapshotEncryptionKeyItems0]

    storagePool?: str

    $type?: str

    zone: str


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    diskRef : ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector, default is Undefined, optional
        disk selector
    """


    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRef:
    r"""
    Reference to a Disk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelector:
    r"""
    Selector for a Disk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderAsyncPrimaryDiskItems0DiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider disk encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKeySecretRef : ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef, default is Undefined, optional
        raw key secret ref
    rsaEncryptedKeySecretRef : ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef, default is Undefined, optional
        rsa encrypted key secret ref
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKeySecretRef?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef

    rsaEncryptedKeySecretRef?: ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RawKeySecretRef:
    r"""
    Specifies a 256-bit customer-supplied encryption key, encoded in
    RFC 4648 base64 to either encrypt or decrypt this resource.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef:
    r"""
    Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
    customer-supplied encryption key to either encrypt or decrypt
    this resource. You can provide either the rawKey or the rsaEncryptedKey.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceImageEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider source image encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecForProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec for provider source snapshot encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        The accessMode of the disk.
        For example:
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of IOPS every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much Throughput must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of Throughput every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the image or
        snapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with image or snapshot,
        the value must not be less than the size of the image
        or the size of the snapshot.
        You can add lifecycle.prevent_destroy in the config to prevent destroying
        and recreating.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. If the snapshot is in another
        project than this disk, you must supply a full URL. For example, the
        following are valid values:
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceImageEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceImageEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source image. Required if
        the source image is protected by a customer-supplied encryption key.
        Structure is documented below.
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    """


    accessMode?: str

    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0]

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0]

    enableConfidentialCompute?: bool

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderGuestOsFeaturesItems0]

    image?: str

    labels?: {str:str}

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    provisionedIops?: float

    provisionedThroughput?: float

    size?: float

    snapshot?: str

    sourceDisk?: str

    sourceImageEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceImageEncryptionKeyItems0]

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceSnapshotEncryptionKeyItems0]

    storagePool?: str

    $type?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec init provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    diskRef : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector, default is Undefined, optional
        disk selector
    """


    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRef:
    r"""
    Reference to a Disk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelector:
    r"""
    Selector for a Disk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderAsyncPrimaryDiskItems0DiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec init provider disk encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKeySecretRef : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef, default is Undefined, optional
        raw key secret ref
    rsaEncryptedKeySecretRef : ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef, default is Undefined, optional
        rsa encrypted key secret ref
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKeySecretRef?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef

    rsaEncryptedKeySecretRef?: ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RawKeySecretRef:
    r"""
    Specifies a 256-bit customer-supplied encryption key, encoded in
    RFC 4648 base64 to either encrypt or decrypt this resource.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderDiskEncryptionKeyItems0RsaEncryptedKeySecretRef:
    r"""
    Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
    customer-supplied encryption key to either encrypt or decrypt
    this resource. You can provide either the rawKey or the rsaEncryptedKey.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec init provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceImageEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec init provider source image encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecInitProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk spec init provider source snapshot encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1DiskSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1DiskSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1DiskStatus:
    r"""
    DiskStatus defines the observed state of Disk.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1DiskStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1DiskStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1DiskStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1DiskStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 disk status at provider

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        The accessMode of the disk.
        For example:
    asyncPrimaryDisk : [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderAsyncPrimaryDiskItems0], default is Undefined, optional
        A nested object resource
        Structure is documented below.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderDiskEncryptionKeyItems0], default is Undefined, optional
        Encrypts the disk using a customer-supplied encryption key.
        After you encrypt a disk with a customer-supplied key, you must
        provide the same key if you use the disk later (e.g. to create a disk
        snapshot or an image, or to attach the disk to a virtual machine).
        Customer-supplied encryption keys do not protect access to metadata of
        the disk.
        If you do not provide an encryption key when creating the disk, then
        the disk will be encrypted using an automatically generated key and
        you do not need to provide a key to use the disk later.
        Structure is documented below.
    diskId : str, default is Undefined, optional
        The unique identifier for the resource. This identifier is defined by the server.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    enableConfidentialCompute : bool, default is Undefined, optional
        Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true
    guestOsFeatures : [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderGuestOsFeaturesItems0], default is Undefined, optional
        A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/disks/{{name}}
    image : str, default is Undefined, optional
        The image from which to initialize this disk. This can be
        one of: the image's self_link, projects/{project}/global/images/{image},
        projects/{project}/global/images/family/{family}, global/images/{image},
        global/images/family/{family}, family/{family}, {project}/{family},
        {project}/{image}, {family}, or {image}. If referred by family, the
        images names must include the family name. If they don't, use the
        google_compute_image data source.
        For instance, the image centos-6-v20180104 includes its family name centos-6.
        These images can be referred by family name here.
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    labels : {str:str}, default is Undefined, optional
        Labels to apply to this disk.  A list of key->value pairs.
    lastAttachTimestamp : str, default is Undefined, optional
        Last attach timestamp in RFC3339 text format.
    lastDetachTimestamp : str, default is Undefined, optional
        Last detach timestamp in RFC3339 text format.
    licenses : [str], default is Undefined, optional
        Any applicable license URI.
    physicalBlockSizeBytes : float, default is Undefined, optional
        Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    provisionedIops : float, default is Undefined, optional
        Indicates how many IOPS must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of IOPS every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    provisionedThroughput : float, default is Undefined, optional
        Indicates how much Throughput must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of Throughput every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    size : float, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the image or
        snapshot parameter, or specify it alone to create an empty
        persistent disk.
        If you specify this field along with image or snapshot,
        the value must not be less than the size of the image
        or the size of the snapshot.
        You can add lifecycle.prevent_destroy in the config to prevent destroying
        and recreating.
    snapshot : str, default is Undefined, optional
        The source snapshot used to create this disk. You can provide this as
        a partial or full URL to the resource. If the snapshot is in another
        project than this disk, you must supply a full URL. For example, the
        following are valid values:
    sourceDisk : str, default is Undefined, optional
        The source disk used to create this disk. You can provide this as a partial or full URL to the resource.
        For example, the following are valid values:
    sourceDiskId : str, default is Undefined, optional
        The ID value of the disk used to create this image. This value may
        be used to determine whether the image was taken from the current
        or a previous instance of a given disk name.
    sourceImageEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceImageEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source image. Required if
        the source image is protected by a customer-supplied encryption key.
        Structure is documented below.
    sourceImageId : str, default is Undefined, optional
        The ID value of the image used to create this disk. This value
        identifies the exact image that was used to create this persistent
        disk. For example, if you created the persistent disk from an image
        that was later deleted and recreated under the same name, the source
        image ID would identify the exact version of the image that was used.
    sourceSnapshotEncryptionKey : [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceSnapshotEncryptionKeyItems0], default is Undefined, optional
        The customer-supplied encryption key of the source snapshot. Required
        if the source snapshot is protected by a customer-supplied encryption
        key.
        Structure is documented below.
    sourceSnapshotId : str, default is Undefined, optional
        The unique ID of the snapshot used to create this disk. This value
        identifies the exact snapshot that was used to create this persistent
        disk. For example, if you created the persistent disk from a snapshot
        that was later deleted and recreated under the same name, the source
        snapshot ID would identify the exact version of the snapshot that was
        used.
    storagePool : str, default is Undefined, optional
        The URL of the storage pool in which the new disk is created.
        For example:
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    $type : str, default is Undefined, optional
        URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    users : [str], default is Undefined, optional
        Links to the users of the disk (attached instances) in form:
        project/zones/zone/instances/instance
    zone : str, default is Undefined, optional
        A reference to the zone where the disk resides.
    """


    accessMode?: str

    asyncPrimaryDisk?: [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderAsyncPrimaryDiskItems0]

    creationTimestamp?: str

    description?: str

    diskEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderDiskEncryptionKeyItems0]

    diskId?: str

    effectiveLabels?: {str:str}

    enableConfidentialCompute?: bool

    guestOsFeatures?: [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderGuestOsFeaturesItems0]

    id?: str

    image?: str

    labelFingerprint?: str

    labels?: {str:str}

    lastAttachTimestamp?: str

    lastDetachTimestamp?: str

    licenses?: [str]

    physicalBlockSizeBytes?: float

    project?: str

    provisionedIops?: float

    provisionedThroughput?: float

    selfLink?: str

    size?: float

    snapshot?: str

    sourceDisk?: str

    sourceDiskId?: str

    sourceImageEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceImageEncryptionKeyItems0]

    sourceImageId?: str

    sourceSnapshotEncryptionKey?: [ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceSnapshotEncryptionKeyItems0]

    sourceSnapshotId?: str

    storagePool?: str

    terraformLabels?: {str:str}

    $type?: str

    users?: [str]

    zone?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProviderAsyncPrimaryDiskItems0:
    r"""
    compute gcp upbound io v1beta1 disk status at provider async primary disk items0

    Attributes
    ----------
    disk : str, default is Undefined, optional
        Primary disk for asynchronous disk replication.
    """


    disk?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProviderDiskEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk status at provider disk encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    sha256 : str, default is Undefined, optional
        (Output)
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    sha256?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProviderGuestOsFeaturesItems0:
    r"""
    compute gcp upbound io v1beta1 disk status at provider guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of supported feature. Read Enabling guest operating system features to see a list of available options.
        Possible values are: MULTI_IP_SUBNET, SECURE_BOOT, SEV_CAPABLE, UEFI_COMPATIBLE, VIRTIO_SCSI_MULTIQUEUE, WINDOWS, GVNIC, SEV_LIVE_MIGRATABLE, SEV_SNP_CAPABLE, SUSPEND_RESUME_COMPATIBLE, TDX_CAPABLE.
    """


    $type?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceImageEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk status at provider source image encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    sha256 : str, default is Undefined, optional
        (Output)
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str

    sha256?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusAtProviderSourceSnapshotEncryptionKeyItems0:
    r"""
    compute gcp upbound io v1beta1 disk status at provider source snapshot encryption key items0

    Attributes
    ----------
    kmsKeySelfLink : str, default is Undefined, optional
        The self link of the encryption key used to encrypt the disk. Also called KmsKeyName
        in the cloud console. Your project's Compute Engine System service account
        (service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com) must have
        roles/cloudkms.cryptoKeyEncrypterDecrypter to use this feature.
        See https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys
    kmsKeyServiceAccount : str, default is Undefined, optional
        The service account used for the encryption request for the given KMS key.
        If absent, the Compute Engine Service Agent service account is used.
    rawKey : str, default is Undefined, optional
        Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    sha256 : str, default is Undefined, optional
        (Output)
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeySelfLink?: str

    kmsKeyServiceAccount?: str

    rawKey?: str

    sha256?: str


schema ComputeGcpUpboundIoV1beta1DiskStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


