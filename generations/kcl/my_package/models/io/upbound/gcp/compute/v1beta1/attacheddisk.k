"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AttachedDisk:
    r"""
    AttachedDisk is the Schema for the AttachedDisks API. Resource that allows attaching existing persistent disks to compute instances.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AttachedDisk", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1AttachedDiskSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1AttachedDiskStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "AttachedDisk" = "AttachedDisk"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1AttachedDiskSpec

    status?: ComputeGcpUpboundIoV1beta1AttachedDiskStatus


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpec:
    r"""
    AttachedDiskSpec defines the desired state of AttachedDisk

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProvider:
    r"""
    compute gcp upbound io v1beta1 attached disk spec for provider

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Specifies a unique device name of your choice that is
        reflected into the /dev/disk/by-id/google-* tree of a Linux operating
        system running within the instance. This name can be used to
        reference the device for mounting, resizing, and so on, from within
        the instance.
    disk : str, default is Undefined, optional
        name or self_link of the disk that will be attached.
    diskRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelector, default is Undefined, optional
        disk selector
    instance : str, default is Undefined, optional
        name or self_link of the compute instance that the disk will be attached to.
        If the self_link is provided then zone and project are extracted from the
        self link. If only the name is used then zone and project must be defined
        as properties on the resource or provider.
    instanceRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelector, default is Undefined, optional
        instance selector
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE or
        READ_ONLY. If not specified, the default is to attach the disk in
        READ_WRITE mode.
    project : str, default is Undefined, optional
        The project that the referenced compute instance is a part of. If instance is referenced by its
        self_link the project defined in the link will take precedence.
    zone : str, default is Undefined, optional
        The zone that the referenced compute instance is located within. If instance is referenced by its
        self_link the zone defined in the link will take precedence.
    """


    deviceName?: str

    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelector

    instance?: str

    instanceRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRef

    instanceSelector?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelector

    mode?: str

    project?: str

    zone?: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRef:
    r"""
    Reference to a Disk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelector:
    r"""
    Selector for a Disk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderDiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRef:
    r"""
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelector:
    r"""
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecForProviderInstanceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Specifies a unique device name of your choice that is
        reflected into the /dev/disk/by-id/google-* tree of a Linux operating
        system running within the instance. This name can be used to
        reference the device for mounting, resizing, and so on, from within
        the instance.
    disk : str, default is Undefined, optional
        name or self_link of the disk that will be attached.
    diskRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRef, default is Undefined, optional
        disk ref
    diskSelector : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelector, default is Undefined, optional
        disk selector
    instance : str, default is Undefined, optional
        name or self_link of the compute instance that the disk will be attached to.
        If the self_link is provided then zone and project are extracted from the
        self link. If only the name is used then zone and project must be defined
        as properties on the resource or provider.
    instanceRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelector, default is Undefined, optional
        instance selector
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE or
        READ_ONLY. If not specified, the default is to attach the disk in
        READ_WRITE mode.
    project : str, default is Undefined, optional
        The project that the referenced compute instance is a part of. If instance is referenced by its
        self_link the project defined in the link will take precedence.
    zone : str, default is Undefined, optional
        The zone that the referenced compute instance is located within. If instance is referenced by its
        self_link the zone defined in the link will take precedence.
    """


    deviceName?: str

    disk?: str

    diskRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRef

    diskSelector?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelector

    instance?: str

    instanceRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRef

    instanceSelector?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelector

    mode?: str

    project?: str

    zone?: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRef:
    r"""
    Reference to a Disk in compute to populate disk.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelector:
    r"""
    Selector for a Disk in compute to populate disk.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelectorPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderDiskSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRef:
    r"""
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelector:
    r"""
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelectorPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecInitProviderInstanceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskStatus:
    r"""
    AttachedDiskStatus defines the observed state of AttachedDisk.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1AttachedDiskStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1AttachedDiskStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1AttachedDiskStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1AttachedDiskStatusConditionsItems0]

    observedGeneration?: int


schema ComputeGcpUpboundIoV1beta1AttachedDiskStatusAtProvider:
    r"""
    compute gcp upbound io v1beta1 attached disk status at provider

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Specifies a unique device name of your choice that is
        reflected into the /dev/disk/by-id/google-* tree of a Linux operating
        system running within the instance. This name can be used to
        reference the device for mounting, resizing, and so on, from within
        the instance.
    disk : str, default is Undefined, optional
        name or self_link of the disk that will be attached.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/zones/{{zone}}/disks/{{disk.name}}
    instance : str, default is Undefined, optional
        name or self_link of the compute instance that the disk will be attached to.
        If the self_link is provided then zone and project are extracted from the
        self link. If only the name is used then zone and project must be defined
        as properties on the resource or provider.
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE or
        READ_ONLY. If not specified, the default is to attach the disk in
        READ_WRITE mode.
    project : str, default is Undefined, optional
        The project that the referenced compute instance is a part of. If instance is referenced by its
        self_link the project defined in the link will take precedence.
    zone : str, default is Undefined, optional
        The zone that the referenced compute instance is located within. If instance is referenced by its
        self_link the zone defined in the link will take precedence.
    """


    deviceName?: str

    disk?: str

    id?: str

    instance?: str

    mode?: str

    project?: str

    zone?: str


schema ComputeGcpUpboundIoV1beta1AttachedDiskStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


